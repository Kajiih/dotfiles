ls
ls ..
y
exa
rg ok
echo $0
where nu
which nu
config nu
$env.config.buffer_editor = "code"
config nu
code .
zsh .
grep
rg ok
grep ok
ls -la
ls -a
ls -l
ls 
echo $PATH
$env
$env where PATH
$env | grep PATH
$env
$PATH
$env
config nu
$env
git ui
gitui
$env
ls
lst
ast
ls
open .
ps
ps | head
ps | sort | head
ps | sort-by mem | head
ps | sort-by mem | reverse
ps | where mem > 100MB | sort-by mem | reverse
ps | where mem > 100MB | sort-by mem | reverse | first 10
ps | where mem > 100MB | sort-by mem | reverse
$nu.pid
^ps
ps | where name="firefox" | pid
ps|select pid where name="firefox"
ps|select pid | where name="firefox"
ps|select pid | where name "firefox"
ps|select pid | where name=="firefox"
ps|select pid | where name == "firefox"
ps|select pid | where name = "firefox"
ps
ps | select pid
ps | select pid name | where name = "firefox"
ps | select pid name | where name = firefox
ps | select pid name | where name == firefox
ps | select pid | where name == firefox
ps | where name == firefox
ps | where name == firefox | select pid
ps | where name == firefox | select pid | cp
ps | where name == firefox | select pid | clip
ps | where name == firefox | select pid | cp help
cp help
help cp
ps | where name == firefox | select pid
ps | where name == firefox | select pid |  + 1
ps | where name == firefox | select pid |  math sum  1
ps | where name == firefox | select pid |  math sum 
ps | where name == firefox | select pid | first
ps | where name == firefox | select pid | first | + 1
ps | where name == firefox | select pid | first | sum 1
ps | where name == firefox | select pid | first | math sum 1
help math sum
ps | where name == firefox | select pid | first
ps |where ppid = ps | where name == firefox | select pid | first
ps |where ppid = =(ps | where name == firefox | select pid | first)
ps |where ppid == (ps | where name == firefox | select pid | first)
set id = ps | where name == firefox | select pid | first
set id (ps | where name == firefox | select pid | first)
const id (ps | where name == firefox | select pid | first)
const id = (ps | where name == firefox | select pid | first)
(ps | where name == firefox | select pid | first)
^ls
ls
lst
ps | where status == Running
ps describe
ps | describe
ls<\n>| sort-by size<\n>| reverse<\n>| first
rls
ls
ps| first
ls<\n>| sort-by size<\n>| reverse<\n>| first | get name
ls<\n>| sort-by size<\n>| reverse<\n>| first | get name | cp $in ~
config
config env
help config env
config flatten
config nu flatten
config nu
source
ls
ls<\n>| sort-by size<\n>| reverse<\n>| first | get name
dotrteadhwedahw rtþshh d aths p dotrteadhwedahw Eadwh  ledaHbbb
source
completion_menu
complete
help complete
ls 
fzf
help fzf
fzf --help
q
fzf --help | bat -l help
man fzf
fzf --help | bat -l help
fzf
fzf --help | bat -l help
help fzf
nu config
config
conig --help
config --help
config nu
help operators
help escapes
du
help du
du -l
du
ls - d
ls -d
ls
help ls
du | sort-by physical
$in
help du
du | sort-by physical
help du -a
help du
help du | bat
du -a
hlep --find filewize
cd dev_tools
cd dev_projects/
ls
cd nested_dict_tools/
ls
ls -d
ls ~
ls ~ -d
help ls
ls - l
ls
ls  -l
ls | select mode
ls -l | select mode
ls
help ls
ls -a
ls -s
ls
diff
help diff
diff help
diff -h
diff --help
man diff
which diff
where diff
diff --help | bat
diff --help | bat -l help
diff --help | bat -l 
help --find
help --find filesize
help --find filesize | select -command_type
help --find filesize | -select category
help --find filesize | select name params
help commands
hellp commands | explore
help commands | explore
$env.conif | explore
$env.config | explore
</>undefined
📟undefined
help config
config --help
help ls
ls **/*
ls **/*.md
ls **/*.py
ls **/*.py | sum size
ls **/*.py | select size | sum
ls **/*.py | select size
explore
ls | explore
help mkdir
^stat ..
^stat ...
^stat ....
stats
stat
stat ....
hlep stat
hlep stats
hlep stat
help stat
hlep --stat
help --stat
help stat
help ^stat
jq --help
jq --help | bat -l help
curl -s https://api.github.com/repos/nushell/nushell/contributors |<\n>
http get https://api.github.com/repos/nushell/nushell/contributors | select login contributions
eaHseatsheAh 
help echo
print echo
print echo ldhs 
print "echo ldhs "
40s
40sr
40<\n>50r
40<\n>50<\n>60
let p = 7<\n>print $p<\n>$p * 6
help print
$env.path | explore
help $env.config
$nu.default-config-dir<\n># macOS<\n># => /Users/me/Library/Application Support/nushell<\n># Linux<\n># => /home/me/.config/nushell<\n># Windows<\n># => C:\Users\me\AppData\Roaming\nushell
$nu.default-config-dir
cd $nu.default-config-dir
ls
rm env.nu
ls
fzf
fzf ~
fzf --help
q
where fd
which fd
fd ~ env.nu
fd env.nu  ~
fd Trash ~
cd 
ls
ls -a
fd .Trash
fda 
fd -h .trash
fd -H .trash
ls -h
ls -a
cd .Trash/
ls
fd env.nu
config nu
config nu --doc
config nu --doc | bat doc
config nu --doc | bat -l doc
config nu --doc | bat -l man
config nu --doc | nu-highlight
config nu --doc | nu-highlight | bat
config nu
open .
^open .
c
cd
ls nu*
ls 
which oh-my-posh
nu -v
$nu.config-path
cd dv
cd dev
cd dev_projects/
ls
$nu.config-path
source $nu.config-path
ls
starship
starship init nu
use starship.nu
ls
config nu
$env.path
$env.path | explore
du -h
where du
which du
help du
help ^du
^du --help
^ls
ls
atuin
ghostty config
ghostty 
ghostty +help
ghostty +show-config
window-colorspace = "display-p3"
ghostty +show-config --default --docs
ghostty +show-config --default --docs | bat
ghostty +valid-config
ghostty +help
ghostty +validate-config
ghostty +validate-config --help
ghostty +show-face
ghostty +list-actions
ldldtr  s sss 
cd nested
help cd
y
config nu
y
ls
cd nested
$nu.env-path
config nu
ls
cd ~
ls
where zoxide
which zoxide
which dust
which du
du --help
which fzf
config env
zoxide nested
z nested
zoxide --help
y
ls
z nested
zi nested
zip --help
zip --help | explore
brew update zoxide
brew upgrade zoxide
z nested
dua | grep rust
where grep
which grep
which rg
dua | rg rust
yazi --help
y -h 
z nested
ls
git branch --merged
git branch --merged | lines
ls
ll
ls -l
ll
lst
eza
eza -tree
eza -tree 2
ll
lsg
help aliases
scope aliases
ls
which ls
scope aliases
scope modules 
ollama help
ollama list
eza 
eza help
eza --help
brew install carapace
carapace 
asdf help
help asdf
asdf --help
git show-ref 
git show-ref  --help
nu pyproject.toml 
gifdiff dist/
chsh
nu update
brew upgrade nushell
> ls | inspect | get name | inspect
ls | inspect | get name | inspect
where carapace
which carapace
carapace
carapace --diff
y
ls
cd nested
z nested
starship --help
starship prompt 
starship config 
cd 
zi rust
c
cd
zi
git branch
code ~/.config/starship.toml
fzf
cd
cd nested
z nested
ls
sudo ls
ls
i
ls
lf
ls
lf
ls
lf
ls
ls | cat
ls | bat
bat README.md 
bat README.md -l md
ls
cd nested
z nested
lz
lzt
lz
lz | lines
git remote
git branch -l
git branch -v
git pull
$branch
git branch -v
git remote -v
git switch origin/main
ls
cd nested
z nested
config --help
config flatten 
config nu help
config nu --help
config nu --doc
config nu --doc | bat -l man
satas | <\n>dsh H
ls | <\n>bat
config nu --doc | bat -l man
ls | <\n>bat
z nested
ls
config nu --doc | bat -l man
ls
echo -e "\xf0\x9f\x90\x8d"
echo "\xf0\x9f\x90\x8d"
zsh
ls
"\xee\x82\xa0"
\xee\x82\xa0
"\xee\x82\xa0"
#"\xee\x82\xa0"
r#"\xee\x82\xa0"
git status
git status -v
git status -a
git status -s
git status --no-short
git status -s --help
git status --help
ls
git status
ls
tmux
ls
sls
ls
sls
ls
sls
ls
code ~/.gitconfig
cd 
ls
lst
lzt
lz
lz -h
lz -a
zi
ls
code ignore
brew install chezmoi
cosign verify-blob --key=chezmoi_cosign.pub \<\n>                     --signature=chezmoi_2.62.5_checksums.txt.sig \<\n>                     chezmoi_2.62.5_checksums.txt
shasum --algorithm 256 --check chezmoi_2.62.5_checksums.txt --ignore-missing
chezmoi -v
chezmoi -version
chezmoi --version
chezmoi config
chezmoi --help
y
rg [flavor]
rg "[flavor]"
help rg
rg help
rg --help
rg --help | bat -l help
cd
rg -s "[flavor]"s
fzf
$in 
fzf | $in
cd
$in
fd
fz yazi.toml
fd yazi.toml
zi
fzf
cd .config/
ls
cd yazi
ls
code flavors
code package.toml
code theme.toml
code yazi.toml
ya pack -a kmlupreti/ayu-dark
ls
ls flavors/
cd ..
cd yazi
code theme.toml
ya pack -a tkapias/nightfly.yazi
ya pack -a tkapias/nightfly-yazi
cd flavors
ls
ya pack -a tkapias/moonfly.yazi
git clone https://gitlab.com/aimebertrand/timu-macos-yazi.git<\n>cd timu-macos-yazi<\n>cp -r timu-macos-dark.yazi timu-macos-light.yazi ~/.config/yazi/flavors/
ls
cd ..
ls
y
rm -rf timu-macos-yazi/
ls
h
cd my_d
z my data
cd ~/my_data/
ls
git clone https://github.com/nushell/nu_scripts.git
cd nu_scripts/
ls
cd themes/
ls
ls <package_root>/themes/nu-themes
ls nu-themes
source nu-themes/atelier-seaside.nu
ls
ls nu-themes
zi 
ls
ls nu-themes/
ls nu-themes | where name~=rapture
ls nu-themes | where name ~= rapture
ls nu-themes | where name ~=rapture
ls nu-themes | where name ~= rapture
ls nu-themes | where name == rapture
ls nu-themes | where name =~ *rapture
ls nu-themes | where name =~ .*rapture.*
ls nu-themes | where name =~ .*slumber.*
source nu-themes/tokyo-night.nu
ls
y
fd yazi.toml
fd -h theme.toml
fd -H theme.toml
rg -s "[flavor]"s
which rg
rg I got the power
history
history | length
rg "I got the power"
zi
ya pack -a Rolv-Apneseth/starship
nvim init.lua
ls
y
ls
code theme.toml 
y
ls
$.env.LS_COLORS
$env.LS_COLORS
$env.path
ls
vivid generate ERR
ls
ls -a
cd training/src
z training/src
ls
cd old
ls
lz
cd training/src
z training/src
ls
cd ord
cd old/
ls
lz
z training/src
ls
cd ..
ls
cd bevy/
ls
cd examples/
ls
cd animation/
ls
z rl_thor
ls
y
ls
z pythemize
ls
y
cd nested
z nested
ls
z nested
ls
z flavors
ls
y
ls
z flavors
ls
md ..
cd ..
ls
ya pack -a yazi-rs/flavors:catppuccin-frappe
y
ya pack -a kmlupreti/ayu-dark
ya pack -u
ya pack --upgrade mlupreti/ayu-dark
ya pack --upgrade
z flavors
cd catppuccin-mocha.yazi/
ls
cd ..
rm -rf catppuccin-mocha.yazi/
ya pack -u
ls
y
ya pack -a yazi-rs/flavors:catppuccin-mocha
ya pack --delete catppuccin-mocha.yazi/
cd ..
ls
ya pack --delete catppuccin-mocha.yazi
ya pack --delete yazi-rs/flavors:catppuccin-mocha
ya pack --list 
ya pack --delete kmlupreti/ayu-dark
ya pack --delete yazi-rs/flavors:catppuccin-frappe
ls
ya pack --list
y
cd
ls
z flavors
ls
cd ..
ls
y
ya pack -a yazi-rs/flavors:catppuccin-mocha
ya pack -l
y
$env.EDITOR
$env
$env | sort
$env | sort-by name
$env | rg EDITOR
$env | rg editor
y
brew upgrade yazi 
y
ya pkg add yazi-rs/plugins:full-border
zi
ls
code init.lua 
y
ls
rm yazi.toml-1748512371193065
ls
rm keymap.toml-1748512371197638
ls
y
brew upgrade yazi 
ya pkg add yazi-rs/plugins:toggle-pane
y
ya pkg add yazi-rs/plugins:jump-to-char
ya pkg add yazi-rs/plugins:git
y
ya pkg add yazi-rs/plugins:smart-filter
ya pkg add yazi-rs/plugins:smart-paste
ya pkg add yazi-rs/plugins:diff
brew install tag
ya pkg add yazi-rs/plugins:mactag
y
ls
y
ls
ya pkg add yazi-rs/plugins:smart-enter
y
y
ya pack -a Rolv-Apneseth/bypass
# macOS or Linux<\n>brew install glow
ya pack -a Reledia/glow
y
ya pack -l
ya pack -d Reledia/glow
ya pkg list 
ya pkg help
brew install duckdb
ya pack -a wylie102/duckdb
y
eza
ls
lz
lz --all
x
bat help
bat
bat --decorations 
bat --help
bat --help | bat -l help
ls
ls my_data/nu_scripts/themes/
y
cd my_data/nu_scripts/themes/
z,
zi
ls
source nu-themes/dracula.nu
source nu-themes/ayu.nu
y
source nu-themes/miu.nu
y
y
source nu-themes/ocean-dark.nu
source nu-themes/atlas.nu
source nu-themes/arthur.nu
atuin help
history 
atuin
z
zi
cd
directory
n
z
z,
zi
cd
zi 
ls
cd nu-hooks/
ls
cd nu-hooks/
ls
pwd
zi
fzf
export def setup [<\n>    dir: path = $nu.data-dir, # the path where to store the "startup times" file<\n>]: [ nothing -> closure ] {<\n>    {|before, _|<\n>        if $before == null {<\n>            let file = $dir | path join "startup-times.nuon"<\n>            if not ($file | path exists) {<\n>                mkdir ($file | path dirname)<\n>                touch $file<\n>            }<\n><\n>            let version = (version)<\n><\n>            # NOTE: this binding is required as per<\n>            # https://github.com/nushell/nushell/pull/12601#issuecomment-2069167555<\n>            let startup_times = open $file | append {<\n>                date: (date now)<\n>                time: $nu.startup-time<\n>                build: $version.build_rust_channel<\n>                allocator: $version.allocator<\n>                version: $version.version<\n>                commit: $version.commit_hash<\n>                build_time: $version.build_time<\n>            }<\n>            $startup_times | save --force $file<\n>        }<\n>    }<\n>}ls
ls
cd
ls
source my_data/nu_scripts/nu-hooks/nu-hooks/command_not_found/did_you_mean.nu
n
fk
$env.NUPM_HOME
use nupm/nupm
cd my_data/
cd ..
ls
ls -a
mkdir .nu_data
cd .nu_data/
git clone https://github.com/nushell/nupm.git
ls
use nupm/nupm
nupm install nupm --force --path 
$env.NUPM_HOME
$.env XDG_CONFIG_HOME
$.env.XDG_CONFIG_HOME
$XDG_CONFIG_HOME
$.XDG_CONFIG_HOME
$env.XDG_CONFIG_HOME
ln help
help ln
ln --help 
$nu.data-dir
man ln
NU_LIB_DIRS
nupm
nupm --help 
nupm test 
nupm status 
cd ..
y
ls
nupm status
nupm 
nupm status 
cd nupm/
nupm status
$env.NUPM_HOME
cd /Users/julian/Library/Application Support/nushell/nupm
cd `/Users/julian/Library/Application Support/nushell/`
ls
nupm status
cd nupm
nupm status
ls
nupm  search
nupm  search nupm
nupm  search clipboard
$env.NUPM_HOME
nj
$env.NUPM_HOME
$env.NU_LIB_DIRS
y
git clone https://github.com/FMotalleb/nu_plugin_clipboard.git<\n>nupm install --path nu_plugin_clipboard -f
ls
rm -rf nu_plugin_clipboard/
ls
use nupm/nupm
git clone https://github.com/FMotalleb/nu_plugin_clipboard.git<\n>nupm install --path nu_plugin_clipboard -f
cargo 
/Users/julian/.cargo
ls
cd bin
ls
$env
$env | explore
$path
$PATH
$env.path
ls
rm -rf nu_plugin_clipboard/
ls
git clone https://github.com/FMotalleb/nu_plugin_clipboard.git<\n>nupm install --path nu_plugin_clipboard -f
use nupm/nupm/
use nupm/nupm
git clone https://github.com/FMotalleb/nu_plugin_clipboard.git<\n>nupm install --path nu_plugin_clipboard -f
rm -rf nu_plugin_clipboard/
git clone https://github.com/FMotalleb/nu_plugin_clipboard.git<\n>nupm install --path nu_plugin_clipboard -f
ls
$env.NU_LIB_DIRS
$env.NUPM_HOME
$env.XDG_DATA_HOME
$env.XDG_config_HOME
use nupm/nupm
ls
zi
ls
cd nupm
ls
ls modules
l
ls
cd modules/nupm/
ls
cd nupm/
ls
cd nupm/
ls
$env.NUPM_HOME
nupm
use nupm/nupm
path add "."
$env.path
path add "dwh"
$env.path
$env.NUPM_HOME
cd ~/Library/Application Support/nushell/nupm
cd "~/Library/Application Support/nushell/nupm"
ls
use modules/
use modules/nupm
ls
cd 
cd .nushell_data/
ls
nupm install help
help nupm
man nupm
nupm --help
nupm install 
nupm install --help
nupm install --registry https://github.com/nushell/nupm#table-of-content
$env.NUPM_HOME
ls
cd .nushell_data/
z nupm
ls
pwd
zi
ls
plugin list
[ nu_plugin_inc<\n>  nu_plugin_polars<\n>  nu_plugin_gstat<\n>  nu_plugin_formats<\n>  nu_plugin_query<\n>] | each { cargo install $in --locked } | ignore
ls
plugin list
where nu
which nu
NU_PLUGIN_DIRS
plugin add nu_plugin_polars
pluging list
plugin list
ls | polars into-df | describe<\n># => NuDataFrame
ls | polars into-df | describe
fzfp
fzf
cd
cargo uninstall nu_plugin_formats 
cargo list
cargo --list 
plugin list
plugin add nu_plugin_formats
plugin list
cargo uninstall nu_plugin_gstat 
plugin add nu_plugin_formats
cargo uninstall nu_plugin_gstat 
cargo uninstall 
cargo uninstall nu_plugin_inc 
plugin add nu_plugin_inc
cargo uninstall nu_plugin_polars 
plugin add nu_plugin_polars
cargo uninstall nu_plugin_query 
plugin add nu_pulgin_query
plugin add nu_plugin_query
pulgin list
plugin list
cargo uninstall 
plugin add   nu_plugin_gstat
plugin list
gstat
z nested
gstat
cd
cd .nushell_data/
rm -rf nu_plugin_clipboard/
rm -rf nupm/
y
cargo install nu_plugin_hilight
cargo install nu_plugin_highlight
which nu_plugin_highlight
$env.cargo
cargo --explain 
$CARGO_HOME
$env.HOME
cargo
$NU_PLUGIN_DIRS
plugin list
plugin add nu_plugin_highlight
plugin list
zsh
highlight --list-themes
ls
cd ..
rm -rf .nushell_data/
z nested
highlight --help
highlight -t
highlight -t github
highlight -l
highlight --theme 
highlight --list-themes 
highlight -t GitHub
$env.config.plugins.highlight.theme
highlight --list-themes | where default == true
open README.md | highlight
README.md | bat 
ls
bat README.md 
highlight --list-themes 
highlight -t Visual Studio Dark+
highlight -t "Visual Studio Dark+"
highlight -t "OneHalfDark"
highlight -t OneHalfDark
highlight --theme 
highlight --theme "OneHalfDark"
highlight --theme OneHalfDark
ls
highlight hatch_build.py
open hatch_build.py
open hatch_build.py | highlight 
$env.config.plugins.highlight.theme = OneHalfDark
$env.config.plugins.highlight.theme = "OneHalfDark"
$env.config.plugins.highlight.theme
open hatch_build.py | highlight 
$env.config.plugins.highlight.theme = ansi
$env.config.plugins.highlight.theme = "ansi"
open hatch_build.py | highlight 
open README.md | highlight 
$env.config.plugins.highlight.theme = "Visual Studio Dark+"
open README.md | highlight 
open hatch_build.py | highlight 
$env.config.plugins.highlight.theme = "OneHalfDark"
cargo install --git https://github.com/FMotalleb/nu_plugin_clipboard.git<\n>plugin add nu_plugin_clipboard
plugin list
ps | clipboard copy 
[<\n>    {<\n>        "pid": 1915,<\n>        "ppid": 1911,<\n>        "name": "",<\n>        "status": "?",<\n>        "cpu": 0,<\n>        "mem": 3162112,<\n>        "virtual": 419915268096<\n>    },<\n>    {<\n>        "pid": 1916,<\n>        "ppid": 1911,<\n>        "name": "",<\n>        "status": "?",<\n>        "cpu": 0,<\n>        "mem": 1409024,<\n>        "virtual": 420085121024<\n>    },<\n>    {<\n>        "pid": 1914,<\n>        "ppid": 1911,<\n>        "name": "",<\n>        "status": "?",<\n>        "cpu": 0,<\n>        "mem": 1261568,<\n>        "virtual": 420044849152<\n>    },<\n>    {<\n>        "pid": 1913,<\n>        "ppid": 1911,<\n>        "name": "",<\n>        "status": "?",<\n>        "cpu": 0,<\n>        "mem": 1392640,<\n>        "virtual": 420054319104<\n>    },<\n>    {<\n>        "pid": 1912,<\n>        "ppid": 1911,<\n>        "name": "",<\n>        "status": "?",<\n>        "cpu": 0,<\n>        "mem": 3424256,<\n>        "virtual": 419919986688<\n>    },<\n>    {<\n>        "pid": 1911,<\n>        "ppid": 1910,<\n>        "name": "",<\n>        "status": "?",<\n>        "cpu": 0,<\n>        "mem": 1605632,<\n>        "virtual": 420085121024<\n>    },<\n>    {<\n>        "pid": 1910,<\n>        "ppid": 1693,<\n>        "name": "",<\n>        "status": "?",<\n>        "cpu": 0,<\n>        "mem": 1720320,<\n>        "virtual": 420085121024<\n>    },<\n>    {<\n>        "pid": 1693,<\n>        "ppid": 64361,<\n>        "name": "",<\n>        "status": "?",<\n>        "cpu": 0,<\n>        "mem": 2539520,<\n>        "virtual": 420085121024<\n>    },<\n>    {<\n>        "pid": 99873,<\n>        "ppid": 1,<\n>        "name": "TrustedPeersHelper",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 18644992,<\n>        "virtual": 420759207936<\n>    },<\n>    {<\n>        "pid": 99872,<\n>        "ppid": 1,<\n>        "name": "AssetCacheLocatorService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 9928704,<\n>        "virtual": 437196963840<\n>    },<\n>    {<\n>        "pid": 98337,<\n>        "ppid": 32432,<\n>        "name": "nu",<\n>        "status": "Running",<\n>        "cpu": 2.7457603135199316,<\n>        "mem": 39927808,<\n>        "virtual": 421363466240<\n>    },<\n>    {<\n>        "pid": 91188,<\n>        "ppid": 1,<\n>        "name": "mdworker_shared",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 26984448,<\n>        "virtual": 437217558528<\n>    },<\n>    {<\n>        "pid": 88670,<\n>        "ppid": 1,<\n>        "name": "AXVisualSupportAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 38764544,<\n>        "virtual": 420848451584<\n>    },<\n>    {<\n>        "pid": 88398,<\n>        "ppid": 1,<\n>        "name": "appplaceholdersyncd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15106048,<\n>        "virtual": 437209186304<\n>    },<\n>    {<\n>        "pid": 87681,<\n>        "ppid": 1,<\n>        "name": "mdworker_shared",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 24018944,<\n>        "virtual": 437216395264<\n>    },<\n>    {<\n>        "pid": 87677,<\n>        "ppid": 1,<\n>        "name": "mdworker_shared",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 29573120,<\n>        "virtual": 437217558528<\n>    },<\n>    {<\n>        "pid": 87235,<\n>        "ppid": 1,<\n>        "name": "com.apple.iCloudHelper",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7143424,<\n>        "virtual": 437197012992<\n>    },<\n>    {<\n>        "pid": 86963,<\n>        "ppid": 1,<\n>        "name": "StatusKitAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 18317312,<\n>        "virtual": 437214429184<\n>    },<\n>    {<\n>        "pid": 86962,<\n>        "ppid": 1,<\n>        "name": "replicatord",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 28196864,<\n>        "virtual": 437636792320<\n>    },<\n>    {<\n>        "pid": 62261,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 46317568,<\n>        "virtual": 422494650368<\n>    },<\n>    {<\n>        "pid": 61571,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 46563328,<\n>        "virtual": 422493995008<\n>    },<\n>    {<\n>        "pid": 46007,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 46514176,<\n>        "virtual": 422483509248<\n>    },<\n>    {<\n>        "pid": 45192,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 146702336,<\n>        "virtual": 422770606080<\n>    },<\n>    {<\n>        "pid": 45191,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 132562944,<\n>        "virtual": 422826131456<\n>    },<\n>    {<\n>        "pid": 32432,<\n>        "ppid": 62594,<\n>        "name": "nu",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 45875200,<\n>        "virtual": 421633146880<\n>    },<\n>    {<\n>        "pid": 31993,<\n>        "ppid": 1,<\n>        "name": "ManagedSettingsAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 4259840,<\n>        "virtual": 437163786240<\n>    },<\n>    {<\n>        "pid": 31992,<\n>        "ppid": 1,<\n>        "name": "FamilyControlsAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 4784128,<\n>        "virtual": 437163130880<\n>    },<\n>    {<\n>        "pid": 31991,<\n>        "ppid": 1,<\n>        "name": "dmd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7176192,<\n>        "virtual": 437202386944<\n>    },<\n>    {<\n>        "pid": 31728,<\n>        "ppid": 1,<\n>        "name": "ScreenTimeAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 21839872,<\n>        "virtual": 437218967552<\n>    },<\n>    {<\n>        "pid": 20718,<\n>        "ppid": 1,<\n>        "name": "IFTranscriptSELFIngestor",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 9273344,<\n>        "virtual": 437174288384<\n>    },<\n>    {<\n>        "pid": 20684,<\n>        "ppid": 1,<\n>        "name": "IFTelemetrySELFIngestor",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8847360,<\n>        "virtual": 437174435840<\n>    },<\n>    {<\n>        "pid": 20628,<\n>        "ppid": 1,<\n>        "name": "BiomeSELFIngestor",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8650752,<\n>        "virtual": 437174288384<\n>    },<\n>    {<\n>        "pid": 20468,<\n>        "ppid": 1,<\n>        "name": "GMSSELFIngestor",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 10387456,<\n>        "virtual": 437208596480<\n>    },<\n>    {<\n>        "pid": 20458,<\n>        "ppid": 1,<\n>        "name": "extensionkitservice",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7946240,<\n>        "virtual": 437174812672<\n>    },<\n>    {<\n>        "pid": 20457,<\n>        "ppid": 1,<\n>        "name": "inputanalyticsd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 6471680,<\n>        "virtual": 437197242368<\n>    },<\n>    {<\n>        "pid": 20456,<\n>        "ppid": 1,<\n>        "name": "SAExtensionOrchestrator",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 13385728,<\n>        "virtual": 420658479104<\n>    },<\n>    {<\n>        "pid": 46793,<\n>        "ppid": 1,<\n>        "name": "mediaanalysisd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 11649024,<\n>        "virtual": 437211185152<\n>    },<\n>    {<\n>        "pid": 45963,<\n>        "ppid": 1,<\n>        "name": "com.apple.quicklook.ThumbnailsAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 12517376,<\n>        "virtual": 437733425152<\n>    },<\n>    {<\n>        "pid": 45959,<\n>        "ppid": 1,<\n>        "name": "geodMachServiceBridge",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 2605056,<\n>        "virtual": 437158526976<\n>    },<\n>    {<\n>        "pid": 45788,<\n>        "ppid": 1,<\n>        "name": "deleted",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 21151744,<\n>        "virtual": 437210939392<\n>    },<\n>    {<\n>        "pid": 45608,<\n>        "ppid": 1,<\n>        "name": "spotlightknowledged",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 13058048,<\n>        "virtual": 437498544128<\n>    },<\n>    {<\n>        "pid": 45514,<\n>        "ppid": 1,<\n>        "name": "ContainerMetadataExtractor",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 12386304,<\n>        "virtual": 437208514560<\n>    },<\n>    {<\n>        "pid": 44969,<\n>        "ppid": 1,<\n>        "name": "bird",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 23019520,<\n>        "virtual": 437213839360<\n>    },<\n>    {<\n>        "pid": 44968,<\n>        "ppid": 1,<\n>        "name": "siriactionsd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 33751040,<\n>        "virtual": 437250621440<\n>    },<\n>    {<\n>        "pid": 44524,<\n>        "ppid": 1,<\n>        "name": "CloudTelemetryService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8962048,<\n>        "virtual": 420781490176<\n>    },<\n>    {<\n>        "pid": 43980,<\n>        "ppid": 1,<\n>        "name": "syncdefaultsd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 13107200,<\n>        "virtual": 437215051776<\n>    },<\n>    {<\n>        "pid": 43979,<\n>        "ppid": 1,<\n>        "name": "CoreLocationAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 35897344,<\n>        "virtual": 437372387328<\n>    },<\n>    {<\n>        "pid": 43978,<\n>        "ppid": 1,<\n>        "name": "CommCenter",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 21004288,<\n>        "virtual": 437212086272<\n>    },<\n>    {<\n>        "pid": 43200,<\n>        "ppid": 1,<\n>        "name": "secinitd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7487488,<\n>        "virtual": 437209759744<\n>    },<\n>    {<\n>        "pid": 43174,<\n>        "ppid": 1,<\n>        "name": "com.apple.geod",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 11354112,<\n>        "virtual": 437200257024<\n>    },<\n>    {<\n>        "pid": 39330,<\n>        "ppid": 1,<\n>        "name": "ModelCatalogAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8126464,<\n>        "virtual": 437163556864<\n>    },<\n>    {<\n>        "pid": 37952,<\n>        "ppid": 1,<\n>        "name": "ctkd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 10567680,<\n>        "virtual": 437208760320<\n>    },<\n>    {<\n>        "pid": 37919,<\n>        "ppid": 1,<\n>        "name": "PlugInLibraryService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 1867776,<\n>        "virtual": 420007542784<\n>    },<\n>    {<\n>        "pid": 37761,<\n>        "ppid": 1,<\n>        "name": "com.apple.siri.embeddedspeech",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8634368,<\n>        "virtual": 437220212736<\n>    },<\n>    {<\n>        "pid": 35515,<\n>        "ppid": 1,<\n>        "name": "ndoagent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 6389760,<\n>        "virtual": 437192769536<\n>    },<\n>    {<\n>        "pid": 23081,<\n>        "ppid": 1,<\n>        "name": "replayd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15319040,<\n>        "virtual": 437213282304<\n>    },<\n>    {<\n>        "pid": 21375,<\n>        "ppid": 1,<\n>        "name": "gamecontrolleragentd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5046272,<\n>        "virtual": 437162737664<\n>    },<\n>    {<\n>        "pid": 21110,<\n>        "ppid": 1,<\n>        "name": "MessagesBlastDoorService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 393216,<\n>        "virtual": 437198143488<\n>    },<\n>    {<\n>        "pid": 21101,<\n>        "ppid": 1,<\n>        "name": "businessservicesd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 6356992,<\n>        "virtual": 437196865536<\n>    },<\n>    {<\n>        "pid": 20827,<\n>        "ppid": 1,<\n>        "name": "feedbackd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 6520832,<\n>        "virtual": 437158576128<\n>    },<\n>    {<\n>        "pid": 19133,<\n>        "ppid": 1,<\n>        "name": "naturallanguaged",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 4259840,<\n>        "virtual": 437196128256<\n>    },<\n>    {<\n>        "pid": 7900,<\n>        "ppid": 1,<\n>        "name": "SetStoreUpdateService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8208384,<\n>        "virtual": 437197291520<\n>    },<\n>    {<\n>        "pid": 62594,<\n>        "ppid": 45015,<\n>        "name": "nu",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 18366464,<\n>        "virtual": 421634195456<\n>    },<\n>    {<\n>        "pid": 45015,<\n>        "ppid": 75136,<\n>        "name": "nu",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 16711680,<\n>        "virtual": 421499977728<\n>    },<\n>    {<\n>        "pid": 75136,<\n>        "ppid": 78140,<\n>        "name": "nu",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15073280,<\n>        "virtual": 421497880576<\n>    },<\n>    {<\n>        "pid": 78140,<\n>        "ppid": 58519,<\n>        "name": "nu",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15810560,<\n>        "virtual": 421634195456<\n>    },<\n>    {<\n>        "pid": 77607,<\n>        "ppid": 1,<\n>        "name": "keyboardservicesd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8634368,<\n>        "virtual": 437201829888<\n>    },<\n>    {<\n>        "pid": 58688,<\n>        "ppid": 1,<\n>        "name": "linkd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 16678912,<\n>        "virtual": 437219540992<\n>    },<\n>    {<\n>        "pid": 58519,<\n>        "ppid": 49757,<\n>        "name": "nu",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 16924672,<\n>        "virtual": 421633146880<\n>    },<\n>    {<\n>        "pid": 49757,<\n>        "ppid": 20382,<\n>        "name": "nu",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 17874944,<\n>        "virtual": 421635244032<\n>    },<\n>    {<\n>        "pid": 20382,<\n>        "ppid": 73767,<\n>        "name": "nu",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 17448960,<\n>        "virtual": 421634195456<\n>    },<\n>    {<\n>        "pid": 73767,<\n>        "ppid": 73718,<\n>        "name": "nu",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 17088512,<\n>        "virtual": 421496832000<\n>    },<\n>    {<\n>        "pid": 68604,<\n>        "ppid": 25781,<\n>        "name": "fzf",<\n>        "status": "Sleep",<\n>        "cpu": 0.11716441759222411,<\n>        "mem": 142278656,<\n>        "virtual": 434078973952<\n>    },<\n>    {<\n>        "pid": 25781,<\n>        "ppid": 96533,<\n>        "name": "nu",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 17580032,<\n>        "virtual": 421633146880<\n>    },<\n>    {<\n>        "pid": 96533,<\n>        "ppid": 73210,<\n>        "name": "nu",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 17842176,<\n>        "virtual": 421634195456<\n>    },<\n>    {<\n>        "pid": 93359,<\n>        "ppid": 1,<\n>        "name": "adprivacyd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 12713984,<\n>        "virtual": 437212004352<\n>    },<\n>    {<\n>        "pid": 92737,<\n>        "ppid": 856,<\n>        "name": "Bitwarden Helper (Renderer)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 53297152,<\n>        "virtual": 1660796813312<\n>    },<\n>    {<\n>        "pid": 73210,<\n>        "ppid": 73209,<\n>        "name": "nu",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15073280,<\n>        "virtual": 421633146880<\n>    },<\n>    {<\n>        "pid": 62798,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 124583936,<\n>        "virtual": 423005782016<\n>    },<\n>    {<\n>        "pid": 61818,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 107167744,<\n>        "virtual": 422755090432<\n>    },<\n>    {<\n>        "pid": 88060,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 102809600,<\n>        "virtual": 422960775168<\n>    },<\n>    {<\n>        "pid": 87299,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 98746368,<\n>        "virtual": 422763937792<\n>    },<\n>    {<\n>        "pid": 73882,<\n>        "ppid": 1,<\n>        "name": "remindd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 13516800,<\n>        "virtual": 437216182272<\n>    },<\n>    {<\n>        "pid": 79045,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 174735360,<\n>        "virtual": 423178960896<\n>    },<\n>    {<\n>        "pid": 52516,<\n>        "ppid": 1,<\n>        "name": "VTDecoderXPCService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 9715712,<\n>        "virtual": 437160443904<\n>    },<\n>    {<\n>        "pid": 50512,<\n>        "ppid": 47790,<\n>        "name": "Discord Helper (Plugin)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 37355520,<\n>        "virtual": 454665682944<\n>    },<\n>    {<\n>        "pid": 50511,<\n>        "ppid": 47790,<\n>        "name": "Discord Helper",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 30588928,<\n>        "virtual": 454620102656<\n>    },<\n>    {<\n>        "pid": 49851,<\n>        "ppid": 47790,<\n>        "name": "Discord Helper (Renderer)",<\n>        "status": "Sleep",<\n>        "cpu": 3.173486000053967,<\n>        "mem": 207437824,<\n>        "virtual": 1915531051008<\n>    },<\n>    {<\n>        "pid": 48513,<\n>        "ppid": 47790,<\n>        "name": "Discord Helper",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 45547520,<\n>        "virtual": 454679740416<\n>    },<\n>    {<\n>        "pid": 48511,<\n>        "ppid": 47790,<\n>        "name": "Discord Helper (GPU)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 69287936,<\n>        "virtual": 455238385664<\n>    },<\n>    {<\n>        "pid": 48510,<\n>        "ppid": 1,<\n>        "name": "chrome_crashpad_handler",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 2113536,<\n>        "virtual": 454340952064<\n>    },<\n>    {<\n>        "pid": 47791,<\n>        "ppid": 1,<\n>        "name": "amsondevicestoraged",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 14139392,<\n>        "virtual": 437200535552<\n>    },<\n>    {<\n>        "pid": 47790,<\n>        "ppid": 1,<\n>        "name": "Discord",<\n>        "status": "Sleep",<\n>        "cpu": 0.19198264901652828,<\n>        "mem": 90980352,<\n>        "virtual": 1910346661888<\n>    },<\n>    {<\n>        "pid": 85227,<\n>        "ppid": 85226,<\n>        "name": "borders",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5521408,<\n>        "virtual": 421806309376<\n>    },<\n>    {<\n>        "pid": 85226,<\n>        "ppid": 1,<\n>        "name": "AeroSpace",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 41910272,<\n>        "virtual": 421914050560<\n>    },<\n>    {<\n>        "pid": 11758,<\n>        "ppid": 65646,<\n>        "name": "Code Helper (Plugin)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 28278784,<\n>        "virtual": 1660698836992<\n>    },<\n>    {<\n>        "pid": 60165,<\n>        "ppid": 1,<\n>        "name": "storekitagent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 13664256,<\n>        "virtual": 437218902016<\n>    },<\n>    {<\n>        "pid": 51661,<\n>        "ppid": 1,<\n>        "name": "QuickLookUIService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 11370496,<\n>        "virtual": 437361016832<\n>    },<\n>    {<\n>        "pid": 51660,<\n>        "ppid": 1,<\n>        "name": "com.apple.appkit.xpc.openAndSavePanelService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 34701312,<\n>        "virtual": 420964745216<\n>    },<\n>    {<\n>        "pid": 80921,<\n>        "ppid": 1,<\n>        "name": "iCloudNotificationAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15564800,<\n>        "virtual": 437212397568<\n>    },<\n>    {<\n>        "pid": 80760,<\n>        "ppid": 1,<\n>        "name": "QuickLookUIService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 11436032,<\n>        "virtual": 437148172288<\n>    },<\n>    {<\n>        "pid": 80759,<\n>        "ppid": 1,<\n>        "name": "com.apple.appkit.xpc.openAndSavePanelService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 47185920,<\n>        "virtual": 421023629312<\n>    },<\n>    {<\n>        "pid": 56123,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 25739264,<\n>        "virtual": 420247191552<\n>    },<\n>    {<\n>        "pid": 55673,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 106250240,<\n>        "virtual": 422800097280<\n>    },<\n>    {<\n>        "pid": 55672,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 2.3426447944866857,<\n>        "mem": 126779392,<\n>        "virtual": 423006486528<\n>    },<\n>    {<\n>        "pid": 55396,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0.5351849206207475,<\n>        "mem": 168198144,<\n>        "virtual": 423041957888<\n>    },<\n>    {<\n>        "pid": 55393,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0.22249190938511326,<\n>        "mem": 110526464,<\n>        "virtual": 422931431424<\n>    },<\n>    {<\n>        "pid": 55392,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 25640960,<\n>        "virtual": 420240261120<\n>    },<\n>    {<\n>        "pid": 55119,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 384516096,<\n>        "virtual": 444843212800<\n>    },<\n>    {<\n>        "pid": 54952,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 24559616,<\n>        "virtual": 420236099584<\n>    },<\n>    {<\n>        "pid": 54951,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 89931776,<\n>        "virtual": 422886178816<\n>    },<\n>    {<\n>        "pid": 54950,<\n>        "ppid": 54795,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 24870912,<\n>        "virtual": 420195975168<\n>    },<\n>    {<\n>        "pid": 54860,<\n>        "ppid": 54795,<\n>        "name": "crashhelper",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3260416,<\n>        "virtual": 419927834624<\n>    },<\n>    {<\n>        "pid": 54795,<\n>        "ppid": 1,<\n>        "name": "firefox",<\n>        "status": "Sleep",<\n>        "cpu": 0.21223176981618908,<\n>        "mem": 467730432,<\n>        "virtual": 436014284800<\n>    },<\n>    {<\n>        "pid": 90083,<\n>        "ppid": 87919,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 64307200,<\n>        "virtual": 423025377280<\n>    },<\n>    {<\n>        "pid": 89900,<\n>        "ppid": 87919,<\n>        "name": "plugin-container",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 74072064,<\n>        "virtual": 423116881920<\n>    },<\n>    {<\n>        "pid": 87919,<\n>        "ppid": 1,<\n>        "name": "thunderbird",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 328073216,<\n>        "virtual": 426698293248<\n>    },<\n>    {<\n>        "pid": 51009,<\n>        "ppid": 1,<\n>        "name": "SafariBookmarksSyncAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 11599872,<\n>        "virtual": 437367668736<\n>    },<\n>    {<\n>        "pid": 51008,<\n>        "ppid": 1,<\n>        "name": "contactsdonationagent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 12894208,<\n>        "virtual": 437204860928<\n>    },<\n>    {<\n>        "pid": 18653,<\n>        "ppid": 1,<\n>        "name": "ProtectedCloudKeySyncing",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7323648,<\n>        "virtual": 437198241792<\n>    },<\n>    {<\n>        "pid": 18483,<\n>        "ppid": 1,<\n>        "name": "transparencyd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 17580032,<\n>        "virtual": 437216133120<\n>    },<\n>    {<\n>        "pid": 47324,<\n>        "ppid": 1,<\n>        "name": "AppPredictionIntentsHelperService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 21381120,<\n>        "virtual": 421094293504<\n>    },<\n>    {<\n>        "pid": 96278,<\n>        "ppid": 1,<\n>        "name": "CalendarWidgetExtension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 22347776,<\n>        "virtual": 437462368256<\n>    },<\n>    {<\n>        "pid": 96260,<\n>        "ppid": 1,<\n>        "name": "duetexpertd",<\n>        "status": "Sleep",<\n>        "cpu": 0.038964926405317804,<\n>        "mem": 25772032,<\n>        "virtual": 437250080768<\n>    },<\n>    {<\n>        "pid": 22049,<\n>        "ppid": 1,<\n>        "name": "voicebankingd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8912896,<\n>        "virtual": 437202960384<\n>    },<\n>    {<\n>        "pid": 20600,<\n>        "ppid": 1,<\n>        "name": "com.apple.BKAgentService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8863744,<\n>        "virtual": 437210365952<\n>    },<\n>    {<\n>        "pid": 20449,<\n>        "ppid": 1,<\n>        "name": "AMPLibraryAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15564800,<\n>        "virtual": 437242724352<\n>    },<\n>    {<\n>        "pid": 20362,<\n>        "ppid": 1,<\n>        "name": "media-indexer",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 9437184,<\n>        "virtual": 437225226240<\n>    },<\n>    {<\n>        "pid": 5226,<\n>        "ppid": 1,<\n>        "name": "mbuseragent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3260416,<\n>        "virtual": 437158854656<\n>    },<\n>    {<\n>        "pid": 88950,<\n>        "ppid": 1,<\n>        "name": "com.apple.sbd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 12255232,<\n>        "virtual": 437201551360<\n>    },<\n>    {<\n>        "pid": 87950,<\n>        "ppid": 1,<\n>        "name": "SiriSuggestionsBookkeepingService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 24543232,<\n>        "virtual": 421702107136<\n>    },<\n>    {<\n>        "pid": 87946,<\n>        "ppid": 1,<\n>        "name": "appstoreagent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 16629760,<\n>        "virtual": 437208727552<\n>    },<\n>    {<\n>        "pid": 87945,<\n>        "ppid": 1,<\n>        "name": "tipsd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 17235968,<\n>        "virtual": 437217918976<\n>    },<\n>    {<\n>        "pid": 87771,<\n>        "ppid": 1,<\n>        "name": "siriinferenced",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 28639232,<\n>        "virtual": 420659937280<\n>    },<\n>    {<\n>        "pid": 80233,<\n>        "ppid": 1,<\n>        "name": "itunescloudd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15908864,<\n>        "virtual": 437202632704<\n>    },<\n>    {<\n>        "pid": 80143,<\n>        "ppid": 1,<\n>        "name": "photoanalysisd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15728640,<\n>        "virtual": 437219262464<\n>    },<\n>    {<\n>        "pid": 80065,<\n>        "ppid": 1,<\n>        "name": "parsecd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 13139968,<\n>        "virtual": 437202649088<\n>    },<\n>    {<\n>        "pid": 79788,<\n>        "ppid": 1,<\n>        "name": "photolibraryd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 16302080,<\n>        "virtual": 437270691840<\n>    },<\n>    {<\n>        "pid": 71404,<\n>        "ppid": 1,<\n>        "name": "CloudTelemetryService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5259264,<\n>        "virtual": 420915707904<\n>    },<\n>    {<\n>        "pid": 71356,<\n>        "ppid": 1,<\n>        "name": "swtransparencyd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5898240,<\n>        "virtual": 437198995456<\n>    },<\n>    {<\n>        "pid": 70901,<\n>        "ppid": 1,<\n>        "name": "networkserviceproxy",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 13926400,<\n>        "virtual": 437210710016<\n>    },<\n>    {<\n>        "pid": 54922,<\n>        "ppid": 1,<\n>        "name": "amsengagementd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15237120,<\n>        "virtual": 441700433920<\n>    },<\n>    {<\n>        "pid": 54920,<\n>        "ppid": 1,<\n>        "name": "milod",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 13598720,<\n>        "virtual": 437206237184<\n>    },<\n>    {<\n>        "pid": 92863,<\n>        "ppid": 1,<\n>        "name": "coreauthd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 12206080,<\n>        "virtual": 437198520320<\n>    },<\n>    {<\n>        "pid": 95967,<\n>        "ppid": 1,<\n>        "name": "donotdisturbd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 25280512,<\n>        "virtual": 437218394112<\n>    },<\n>    {<\n>        "pid": 41456,<\n>        "ppid": 1,<\n>        "name": "IMDPersistenceAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 12910592,<\n>        "virtual": 437206482944<\n>    },<\n>    {<\n>        "pid": 28967,<\n>        "ppid": 1,<\n>        "name": "com.apple.accessibility.mediaaccessibilityd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 2211840,<\n>        "virtual": 437162721280<\n>    },<\n>    {<\n>        "pid": 12876,<\n>        "ppid": 1,<\n>        "name": "neagent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 12156928,<\n>        "virtual": 437208203264<\n>    },<\n>    {<\n>        "pid": 6556,<\n>        "ppid": 1,<\n>        "name": "siriknowledged",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 19283968,<\n>        "virtual": 437206171648<\n>    },<\n>    {<\n>        "pid": 5304,<\n>        "ppid": 1,<\n>        "name": "appleaccountd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 14172160,<\n>        "virtual": 437205958656<\n>    },<\n>    {<\n>        "pid": 4815,<\n>        "ppid": 1,<\n>        "name": "generativeexperiencesd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 14090240,<\n>        "virtual": 437232287744<\n>    },<\n>    {<\n>        "pid": 72053,<\n>        "ppid": 65646,<\n>        "name": "Code Helper (Plugin)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 29818880,<\n>        "virtual": 1664286031872<\n>    },<\n>    {<\n>        "pid": 71962,<\n>        "ppid": 1,<\n>        "name": "FolderActionsDispatcher",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 11714560,<\n>        "virtual": 437215461376<\n>    },<\n>    {<\n>        "pid": 71851,<\n>        "ppid": 1,<\n>        "name": "System Events",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 43565056,<\n>        "virtual": 420837113856<\n>    },<\n>    {<\n>        "pid": 71744,<\n>        "ppid": 71620,<\n>        "name": "zsh",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 458752,<\n>        "virtual": 420918444032<\n>    },<\n>    {<\n>        "pid": 71620,<\n>        "ppid": 64361,<\n>        "name": "zsh (qterm)",<\n>        "status": "Sleep",<\n>        "cpu": 0.16184249428446806,<\n>        "mem": 5750784,<\n>        "virtual": 422121701376<\n>    },<\n>    {<\n>        "pid": 71619,<\n>        "ppid": 65650,<\n>        "name": "tmux",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 966656,<\n>        "virtual": 420047503360<\n>    },<\n>    {<\n>        "pid": 71610,<\n>        "ppid": 65646,<\n>        "name": "Code Helper (Plugin)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 28540928,<\n>        "virtual": 1660779741184<\n>    },<\n>    {<\n>        "pid": 71410,<\n>        "ppid": 1,<\n>        "name": "ghostty",<\n>        "status": "Sleep",<\n>        "cpu": 6.428758290292502,<\n>        "mem": 91144192,<\n>        "virtual": 422590824448<\n>    },<\n>    {<\n>        "pid": 65727,<\n>        "ppid": 65646,<\n>        "name": "Code Helper (Plugin)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 34881536,<\n>        "virtual": 1660753035264<\n>    },<\n>    {<\n>        "pid": 65726,<\n>        "ppid": 65646,<\n>        "name": "Code Helper (Plugin)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 26411008,<\n>        "virtual": 1660719284224<\n>    },<\n>    {<\n>        "pid": 65718,<\n>        "ppid": 65646,<\n>        "name": "Code Helper (Plugin)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 29523968,<\n>        "virtual": 1660743073792<\n>    },<\n>    {<\n>        "pid": 65716,<\n>        "ppid": 65646,<\n>        "name": "kdl-lsp",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 376832,<\n>        "virtual": 420121329664<\n>    },<\n>    {<\n>        "pid": 65715,<\n>        "ppid": 65646,<\n>        "name": "Code Helper (Plugin)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 28147712,<\n>        "virtual": 1660761948160<\n>    },<\n>    {<\n>        "pid": 65690,<\n>        "ppid": 65646,<\n>        "name": "Code Helper (Plugin)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 28016640,<\n>        "virtual": 1660871966720<\n>    },<\n>    {<\n>        "pid": 65688,<\n>        "ppid": 65646,<\n>        "name": "Code Helper (Plugin)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 27131904,<\n>        "virtual": 1660728197120<\n>    },<\n>    {<\n>        "pid": 65687,<\n>        "ppid": 65648,<\n>        "name": "nvim",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7389184,<\n>        "virtual": 421163958272<\n>    },<\n>    {<\n>        "pid": 65650,<\n>        "ppid": 65519,<\n>        "name": "Code Helper",<\n>        "status": "Sleep",<\n>        "cpu": 0.8415911397226655,<\n>        "mem": 48726016,<\n>        "virtual": 1662523097088<\n>    },<\n>    {<\n>        "pid": 65648,<\n>        "ppid": 65519,<\n>        "name": "Code Helper (Plugin)",<\n>        "status": "Sleep",<\n>        "cpu": 0.1628395911974358,<\n>        "mem": 29212672,<\n>        "virtual": 1662533615616<\n>    },<\n>    {<\n>        "pid": 65646,<\n>        "ppid": 65519,<\n>        "name": "Code Helper (Plugin)",<\n>        "status": "Sleep",<\n>        "cpu": 0.4311019854182255,<\n>        "mem": 101122048,<\n>        "virtual": 1664300253184<\n>    },<\n>    {<\n>        "pid": 65595,<\n>        "ppid": 65519,<\n>        "name": "Code Helper",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 27623424,<\n>        "virtual": 1662567596032<\n>    },<\n>    {<\n>        "pid": 65593,<\n>        "ppid": 65519,<\n>        "name": "Code Helper",<\n>        "status": "Sleep",<\n>        "cpu": 0.36792294297791955,<\n>        "mem": 87539712,<\n>        "virtual": 1662547312640<\n>    },<\n>    {<\n>        "pid": 65523,<\n>        "ppid": 65519,<\n>        "name": "Code Helper (Renderer)",<\n>        "status": "Running",<\n>        "cpu": 5.297713658696174,<\n>        "mem": 327565312,<\n>        "virtual": 1699652173824<\n>    },<\n>    {<\n>        "pid": 65521,<\n>        "ppid": 65519,<\n>        "name": "Code Helper",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 21938176,<\n>        "virtual": 454674759680<\n>    },<\n>    {<\n>        "pid": 65520,<\n>        "ppid": 65519,<\n>        "name": "Code Helper (GPU)",<\n>        "status": "Running",<\n>        "cpu": 5.954890326908508,<\n>        "mem": 40304640,<\n>        "virtual": 454920306688<\n>    },<\n>    {<\n>        "pid": 65519,<\n>        "ppid": 1,<\n>        "name": "Electron",<\n>        "status": "Sleep",<\n>        "cpu": 0.1918862020735101,<\n>        "mem": 111525888,<\n>        "virtual": 1663217680384<\n>    },<\n>    {<\n>        "pid": 64737,<\n>        "ppid": 64613,<\n>        "name": "zsh",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 458752,<\n>        "virtual": 420651057152<\n>    },<\n>    {<\n>        "pid": 64613,<\n>        "ppid": 64361,<\n>        "name": "zsh (qterm)",<\n>        "status": "Sleep",<\n>        "cpu": 0.1312018434507093,<\n>        "mem": 5652480,<\n>        "virtual": 421987483648<\n>    },<\n>    {<\n>        "pid": 64361,<\n>        "ppid": 1,<\n>        "name": "tmux",<\n>        "status": "Sleep",<\n>        "cpu": 2.401903215778384,<\n>        "mem": 6717440,<\n>        "virtual": 421052301312<\n>    },<\n>    {<\n>        "pid": 59342,<\n>        "ppid": 1,<\n>        "name": "SoftwareUpdateNotificationManager",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 29245440,<\n>        "virtual": 437372960768<\n>    },<\n>    {<\n>        "pid": 57267,<\n>        "ppid": 1,<\n>        "name": "nsattributedstringagent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 26869760,<\n>        "virtual": 441897910272<\n>    },<\n>    {<\n>        "pid": 57261,<\n>        "ppid": 1,<\n>        "name": "AppleSpell",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 19726336,<\n>        "virtual": 437827780608<\n>    },<\n>    {<\n>        "pid": 56889,<\n>        "ppid": 1,<\n>        "name": "QuickLookUIService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 11157504,<\n>        "virtual": 437299806208<\n>    },<\n>    {<\n>        "pid": 56887,<\n>        "ppid": 1,<\n>        "name": "iconservicesagent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 13697024,<\n>        "virtual": 437418065920<\n>    },<\n>    {<\n>        "pid": 54949,<\n>        "ppid": 1,<\n>        "name": "pbs",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5799936,<\n>        "virtual": 437208924160<\n>    },<\n>    {<\n>        "pid": 43327,<\n>        "ppid": 1,<\n>        "name": "UserNotificationCenter",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8601600,<\n>        "virtual": 437397045248<\n>    },<\n>    {<\n>        "pid": 42284,<\n>        "ppid": 1,<\n>        "name": "Keychain Circle Notification",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 4833280,<\n>        "virtual": 437215444992<\n>    },<\n>    {<\n>        "pid": 40950,<\n>        "ppid": 1,<\n>        "name": "VTDecoderXPCService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7782400,<\n>        "virtual": 437453373440<\n>    },<\n>    {<\n>        "pid": 40948,<\n>        "ppid": 1,<\n>        "name": "WallpaperVideoExtension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 4456448,<\n>        "virtual": 421086806016<\n>    },<\n>    {<\n>        "pid": 37360,<\n>        "ppid": 666,<\n>        "name": "Obsidian Helper",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8404992,<\n>        "virtual": 454650642432<\n>    },<\n>    {<\n>        "pid": 36895,<\n>        "ppid": 1,<\n>        "name": "storeuid",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5210112,<\n>        "virtual": 437361065984<\n>    },<\n>    {<\n>        "pid": 31240,<\n>        "ppid": 31232,<\n>        "name": "Todoist Helper (Renderer)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 28082176,<\n>        "virtual": 1660779315200<\n>    },<\n>    {<\n>        "pid": 31237,<\n>        "ppid": 31232,<\n>        "name": "Todoist Helper (Renderer)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 46219264,<\n>        "virtual": 1666277720064<\n>    },<\n>    {<\n>        "pid": 31235,<\n>        "ppid": 31232,<\n>        "name": "Todoist Helper",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 14925824,<\n>        "virtual": 454671663104<\n>    },<\n>    {<\n>        "pid": 31233,<\n>        "ppid": 31232,<\n>        "name": "Todoist Helper (GPU)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 16187392,<\n>        "virtual": 454837485568<\n>    },<\n>    {<\n>        "pid": 31232,<\n>        "ppid": 1,<\n>        "name": "Todoist",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 50970624,<\n>        "virtual": 1661462577152<\n>    },<\n>    {<\n>        "pid": 24289,<\n>        "ppid": 1,<\n>        "name": "PowerChime",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 10354688,<\n>        "virtual": 437269577728<\n>    },<\n>    {<\n>        "pid": 15183,<\n>        "ppid": 1,<\n>        "name": "Messages Assistant Extension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3866624,<\n>        "virtual": 437218689024<\n>    },<\n>    {<\n>        "pid": 11306,<\n>        "ppid": 1,<\n>        "name": "mdwrite",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 2244608,<\n>        "virtual": 437198192640<\n>    },<\n>    {<\n>        "pid": 4638,<\n>        "ppid": 1,<\n>        "name": "IMAutomaticHistoryDeletionAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5029888,<\n>        "virtual": 437197144064<\n>    },<\n>    {<\n>        "pid": 3139,<\n>        "ppid": 1,<\n>        "name": "ServiceExtension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 10223616,<\n>        "virtual": 420400906240<\n>    },<\n>    {<\n>        "pid": 2555,<\n>        "ppid": 2287,<\n>        "name": "node",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 69468160,<\n>        "virtual": 422376144896<\n>    },<\n>    {<\n>        "pid": 2372,<\n>        "ppid": 1,<\n>        "name": "webinspectord",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 4276224,<\n>        "virtual": 437200453632<\n>    },<\n>    {<\n>        "pid": 2370,<\n>        "ppid": 1,<\n>        "name": "com.apple.WebKit.WebContent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 65536,<\n>        "virtual": 511041306624<\n>    },<\n>    {<\n>        "pid": 2369,<\n>        "ppid": 1,<\n>        "name": "com.apple.WebKit.WebContent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 65536,<\n>        "virtual": 511041945600<\n>    },<\n>    {<\n>        "pid": 2368,<\n>        "ppid": 1,<\n>        "name": "com.apple.WebKit.WebContent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 65536,<\n>        "virtual": 511042453504<\n>    },<\n>    {<\n>        "pid": 2367,<\n>        "ppid": 1,<\n>        "name": "com.apple.WebKit.Networking",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5259264,<\n>        "virtual": 441908985856<\n>    },<\n>    {<\n>        "pid": 2364,<\n>        "ppid": 1,<\n>        "name": "com.apple.WebKit.WebContent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 81920,<\n>        "virtual": 511042617344<\n>    },<\n>    {<\n>        "pid": 2362,<\n>        "ppid": 1,<\n>        "name": "com.apple.WebKit.GPU",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3964928,<\n>        "virtual": 441728057344<\n>    },<\n>    {<\n>        "pid": 2287,<\n>        "ppid": 1,<\n>        "name": "Raycast",<\n>        "status": "Sleep",<\n>        "cpu": 0.08317937664648123,<\n>        "mem": 129515520,<\n>        "virtual": 427268734976<\n>    },<\n>    {<\n>        "pid": 1849,<\n>        "ppid": 1,<\n>        "name": "spotlightknowledged",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 6307840,<\n>        "virtual": 421052317696<\n>    },<\n>    {<\n>        "pid": 1307,<\n>        "ppid": 1,<\n>        "name": "proactived",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 9175040,<\n>        "virtual": 437213364224<\n>    },<\n>    {<\n>        "pid": 1306,<\n>        "ppid": 1,<\n>        "name": "peopled",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 6848512,<\n>        "virtual": 437207433216<\n>    },<\n>    {<\n>        "pid": 1232,<\n>        "ppid": 1,<\n>        "name": "dataaccessd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 29245440,<\n>        "virtual": 437327708160<\n>    },<\n>    {<\n>        "pid": 1186,<\n>        "ppid": 1,<\n>        "name": "SiriNCService",<\n>        "status": "Sleep",<\n>        "cpu": 0.09994815656716714,<\n>        "mem": 8519680,<\n>        "virtual": 437217214464<\n>    },<\n>    {<\n>        "pid": 845,<\n>        "ppid": 1,<\n>        "name": "diagnostics_agent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 9322496,<\n>        "virtual": 437199241216<\n>    },<\n>    {<\n>        "pid": 1119,<\n>        "ppid": 1,<\n>        "name": "contentlinkingd",<\n>        "status": "Sleep",<\n>        "cpu": 0.08162326715192107,<\n>        "mem": 5849088,<\n>        "virtual": 437198700544<\n>    },<\n>    {<\n>        "pid": 655,<\n>        "ppid": 1,<\n>        "name": "WiFiAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 12763136,<\n>        "virtual": 437362163712<\n>    },<\n>    {<\n>        "pid": 1065,<\n>        "ppid": 848,<\n>        "name": "CrossEXService",<\n>        "status": "Sleep",<\n>        "cpu": 0.04084967320261438,<\n>        "mem": 307200,<\n>        "virtual": 35107926016<\n>    },<\n>    {<\n>        "pid": 1043,<\n>        "ppid": 1,<\n>        "name": "StocksWidget",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7012352,<\n>        "virtual": 437213675520<\n>    },<\n>    {<\n>        "pid": 1026,<\n>        "ppid": 1,<\n>        "name": "PeopleWidget_macOSExtension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3489792,<\n>        "virtual": 437211906048<\n>    },<\n>    {<\n>        "pid": 1020,<\n>        "ppid": 1,<\n>        "name": "PhotosReliveWidget",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3293184,<\n>        "virtual": 437212233728<\n>    },<\n>    {<\n>        "pid": 1006,<\n>        "ppid": 1,<\n>        "name": "WorldClockWidget",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7307264,<\n>        "virtual": 437212610560<\n>    },<\n>    {<\n>        "pid": 978,<\n>        "ppid": 1,<\n>        "name": "HomeWidget",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 6799360,<\n>        "virtual": 437212561408<\n>    },<\n>    {<\n>        "pid": 974,<\n>        "ppid": 1,<\n>        "name": "FindMyWidgetItems",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 6832128,<\n>        "virtual": 437212004352<\n>    },<\n>    {<\n>        "pid": 605,<\n>        "ppid": 1,<\n>        "name": "ContextStoreAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 12779520,<\n>        "virtual": 437220098048<\n>    },<\n>    {<\n>        "pid": 955,<\n>        "ppid": 1,<\n>        "name": "HomeEnergyWidgetsExtension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7012352,<\n>        "virtual": 437211955200<\n>    },<\n>    {<\n>        "pid": 945,<\n>        "ppid": 1,<\n>        "name": "TipsWidgetExtension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3309568,<\n>        "virtual": 437211365376<\n>    },<\n>    {<\n>        "pid": 943,<\n>        "ppid": 1,<\n>        "name": "mdbulkimport",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 13107200,<\n>        "virtual": 437210464256<\n>    },<\n>    {<\n>        "pid": 905,<\n>        "ppid": 1,<\n>        "name": "SafariWidgetExtension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3325952,<\n>        "virtual": 437212119040<\n>    },<\n>    {<\n>        "pid": 910,<\n>        "ppid": 856,<\n>        "name": "Bitwarden Helper",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8617984,<\n>        "virtual": 454683312128<\n>    },<\n>    {<\n>        "pid": 909,<\n>        "ppid": 856,<\n>        "name": "Bitwarden Helper (GPU)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 14106624,<\n>        "virtual": 454779551744<\n>    },<\n>    {<\n>        "pid": 886,<\n>        "ppid": 1,<\n>        "name": "UniversalControl",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 18366464,<\n>        "virtual": 437214429184<\n>    },<\n>    {<\n>        "pid": 887,<\n>        "ppid": 1,<\n>        "name": "SidecarRelay",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 6307840,<\n>        "virtual": 420515807232<\n>    },<\n>    {<\n>        "pid": 871,<\n>        "ppid": 1,<\n>        "name": "FindMyWidgetPeople",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 6832128,<\n>        "virtual": 437210923008<\n>    },<\n>    {<\n>        "pid": 865,<\n>        "ppid": 1,<\n>        "name": "Hidden Bar",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 10371072,<\n>        "virtual": 421614190592<\n>    },<\n>    {<\n>        "pid": 863,<\n>        "ppid": 1,<\n>        "name": "AltServer",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 10207232,<\n>        "virtual": 421980340224<\n>    },<\n>    {<\n>        "pid": 862,<\n>        "ppid": 1,<\n>        "name": "Velja",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 20611072,<\n>        "virtual": 421748162560<\n>    },<\n>    {<\n>        "pid": 857,<\n>        "ppid": 1,<\n>        "name": "PodcastsWidget",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7241728,<\n>        "virtual": 437251440640<\n>    },<\n>    {<\n>        "pid": 858,<\n>        "ppid": 1,<\n>        "name": "ctkahp",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 2375680,<\n>        "virtual": 437162278912<\n>    },<\n>    {<\n>        "pid": 856,<\n>        "ppid": 1,<\n>        "name": "Bitwarden",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 59539456,<\n>        "virtual": 1661240147968<\n>    },<\n>    {<\n>        "pid": 818,<\n>        "ppid": 1,<\n>        "name": "ShortcutsWidgetExtension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3293184,<\n>        "virtual": 437211119616<\n>    },<\n>    {<\n>        "pid": 848,<\n>        "ppid": 1,<\n>        "name": "CrossEXService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 26128384,<\n>        "virtual": 36220469248<\n>    },<\n>    {<\n>        "pid": 850,<\n>        "ppid": 1,<\n>        "name": "Karabiner-Menu",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8159232,<\n>        "virtual": 421307973632<\n>    },<\n>    {<\n>        "pid": 836,<\n>        "ppid": 1,<\n>        "name": "karabiner_console_user_server",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5652480,<\n>        "virtual": 421095505920<\n>    },<\n>    {<\n>        "pid": 824,<\n>        "ppid": 1,<\n>        "name": "heard",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 10649600,<\n>        "virtual": 437210529792<\n>    },<\n>    {<\n>        "pid": 837,<\n>        "ppid": 1,<\n>        "name": "icdd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3325952,<\n>        "virtual": 437197357056<\n>    },<\n>    {<\n>        "pid": 835,<\n>        "ppid": 1,<\n>        "name": "Karabiner-NotificationWindow",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 14434304,<\n>        "virtual": 421451366400<\n>    },<\n>    {<\n>        "pid": 834,<\n>        "ppid": 1,<\n>        "name": "Siri",<\n>        "status": "Sleep",<\n>        "cpu": 0.3300176103615636,<\n>        "mem": 8814592,<\n>        "virtual": 421120229376<\n>    },<\n>    {<\n>        "pid": 842,<\n>        "ppid": 1,<\n>        "name": "AirPlayUIAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 4259840,<\n>        "virtual": 420974870528<\n>    },<\n>    {<\n>        "pid": 846,<\n>        "ppid": 1,<\n>        "name": "TextInputMenuAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7634944,<\n>        "virtual": 421742477312<\n>    },<\n>    {<\n>        "pid": 813,<\n>        "ppid": 1,<\n>        "name": "com.apple.Notes.WidgetExtension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8142848,<\n>        "virtual": 437272674304<\n>    },<\n>    {<\n>        "pid": 802,<\n>        "ppid": 1,<\n>        "name": "RemindersWidgetExtension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7602176,<\n>        "virtual": 437261565952<\n>    },<\n>    {<\n>        "pid": 797,<\n>        "ppid": 1,<\n>        "name": "seserviced",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5652480,<\n>        "virtual": 437198241792<\n>    },<\n>    {<\n>        "pid": 782,<\n>        "ppid": 1,<\n>        "name": "WeatherWidget",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 25083904,<\n>        "virtual": 437507293184<\n>    },<\n>    {<\n>        "pid": 793,<\n>        "ppid": 666,<\n>        "name": "Obsidian Helper (Renderer)",<\n>        "status": "Sleep",<\n>        "cpu": 0.139146371401241,<\n>        "mem": 125255680,<\n>        "virtual": 1646681309184<\n>    },<\n>    {<\n>        "pid": 788,<\n>        "ppid": 1,<\n>        "name": "commerce",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 6684672,<\n>        "virtual": 437203714048<\n>    },<\n>    {<\n>        "pid": 790,<\n>        "ppid": 666,<\n>        "name": "Obsidian Helper",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 13516800,<\n>        "virtual": 454689554432<\n>    },<\n>    {<\n>        "pid": 789,<\n>        "ppid": 666,<\n>        "name": "Obsidian Helper (GPU)",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 33456128,<\n>        "virtual": 454898057216<\n>    },<\n>    {<\n>        "pid": 784,<\n>        "ppid": 1,<\n>        "name": "maild",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 4030464,<\n>        "virtual": 437197750272<\n>    },<\n>    {<\n>        "pid": 783,<\n>        "ppid": 1,<\n>        "name": "avconferenced",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 4833280,<\n>        "virtual": 437154496512<\n>    },<\n>    {<\n>        "pid": 777,<\n>        "ppid": 1,<\n>        "name": "ScreenTimeWidgetExtension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 28901376,<\n>        "virtual": 437282029568<\n>    },<\n>    {<\n>        "pid": 779,<\n>        "ppid": 1,<\n>        "name": "mediaremoteagent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 2015232,<\n>        "virtual": 437157920768<\n>    },<\n>    {<\n>        "pid": 778,<\n>        "ppid": 1,<\n>        "name": "UIKitSystem",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 16695296,<\n>        "virtual": 421121622016<\n>    },<\n>    {<\n>        "pid": 764,<\n>        "ppid": 1,<\n>        "name": "TodoistWidgets",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 23166976,<\n>        "virtual": 420367695872<\n>    },<\n>    {<\n>        "pid": 763,<\n>        "ppid": 1,<\n>        "name": "PAH_Extension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 4784128,<\n>        "virtual": 437227208704<\n>    },<\n>    {<\n>        "pid": 761,<\n>        "ppid": 1,<\n>        "name": "com.apple.CloudDocs.iCloudDriveFileProvider",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 6144000,<\n>        "virtual": 437209956352<\n>    },<\n>    {<\n>        "pid": 726,<\n>        "ppid": 1,<\n>        "name": "BatteriesAvocadoWidgetExtension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 23658496,<\n>        "virtual": 437243297792<\n>    },<\n>    {<\n>        "pid": 756,<\n>        "ppid": 1,<\n>        "name": "com.apple.dock.external.extra.arm64",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3342336,<\n>        "virtual": 420504895488<\n>    },<\n>    {<\n>        "pid": 755,<\n>        "ppid": 1,<\n>        "name": "com.apple.dock.external.extra.arm64",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3342336,<\n>        "virtual": 420640243712<\n>    },<\n>    {<\n>        "pid": 754,<\n>        "ppid": 1,<\n>        "name": "com.apple.dock.external.extra.arm64",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3342336,<\n>        "virtual": 420639113216<\n>    },<\n>    {<\n>        "pid": 753,<\n>        "ppid": 1,<\n>        "name": "com.apple.dock.extra",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 14270464,<\n>        "virtual": 420907974656<\n>    },<\n>    {<\n>        "pid": 749,<\n>        "ppid": 1,<\n>        "name": "bluetoothuserd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 8617984,<\n>        "virtual": 437199175680<\n>    },<\n>    {<\n>        "pid": 737,<\n>        "ppid": 1,<\n>        "name": "Spotlight",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 25640960,<\n>        "virtual": 421605654528<\n>    },<\n>    {<\n>        "pid": 734,<\n>        "ppid": 1,<\n>        "name": "CursorUIViewService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 11943936,<\n>        "virtual": 421287198720<\n>    },<\n>    {<\n>        "pid": 732,<\n>        "ppid": 1,<\n>        "name": "contactsd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 9043968,<\n>        "virtual": 437223882752<\n>    },<\n>    {<\n>        "pid": 733,<\n>        "ppid": 1,<\n>        "name": "imklaunchagent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3637248,<\n>        "virtual": 420820779008<\n>    },<\n>    {<\n>        "pid": 730,<\n>        "ppid": 1,<\n>        "name": "searchpartyuseragent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 21954560,<\n>        "virtual": 437237809152<\n>    },<\n>    {<\n>        "pid": 724,<\n>        "ppid": 1,<\n>        "name": "extensionkitservice",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 10354688,<\n>        "virtual": 437174910976<\n>    },<\n>    {<\n>        "pid": 717,<\n>        "ppid": 1,<\n>        "name": "useractivityd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 12746752,<\n>        "virtual": 437212119040<\n>    },<\n>    {<\n>        "pid": 714,<\n>        "ppid": 1,<\n>        "name": "imagent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 13402112,<\n>        "virtual": 437212413952<\n>    },<\n>    {<\n>        "pid": 702,<\n>        "ppid": 1,<\n>        "name": "WallpaperDynamicExtension",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 4374528,<\n>        "virtual": 420964646912<\n>    },<\n>    {<\n>        "pid": 703,<\n>        "ppid": 1,<\n>        "name": "intelligentroutingd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7684096,<\n>        "virtual": 437201764352<\n>    },<\n>    {<\n>        "pid": 704,<\n>        "ppid": 1,<\n>        "name": "audioaccessoryd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15351808,<\n>        "virtual": 437214298112<\n>    },<\n>    {<\n>        "pid": 696,<\n>        "ppid": 1,<\n>        "name": "AMPDeviceDiscoveryAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5849088,<\n>        "virtual": 437209890816<\n>    },<\n>    {<\n>        "pid": 691,<\n>        "ppid": 1,<\n>        "name": "suggestd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 21446656,<\n>        "virtual": 437495873536<\n>    },<\n>    {<\n>        "pid": 701,<\n>        "ppid": 1,<\n>        "name": "ACCFinderSync",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3293184,<\n>        "virtual": 420256563200<\n>    },<\n>    {<\n>        "pid": 693,<\n>        "ppid": 1,<\n>        "name": "sharedfilelistd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7962624,<\n>        "virtual": 437199273984<\n>    },<\n>    {<\n>        "pid": 695,<\n>        "ppid": 1,<\n>        "name": "fileproviderd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 16744448,<\n>        "virtual": 437227585536<\n>    },<\n>    {<\n>        "pid": 692,<\n>        "ppid": 1,<\n>        "name": "calaccessd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 24477696,<\n>        "virtual": 437275754496<\n>    },<\n>    {<\n>        "pid": 678,<\n>        "ppid": 1,<\n>        "name": "ContinuityCaptureAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0.08528142168404529,<\n>        "mem": 14057472,<\n>        "virtual": 437211070464<\n>    },<\n>    {<\n>        "pid": 699,<\n>        "ppid": 1,<\n>        "name": "FinderSync",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 233472,<\n>        "virtual": 34876661760<\n>    },<\n>    {<\n>        "pid": 688,<\n>        "ppid": 1,<\n>        "name": "ViewBridgeAuxiliary",<\n>        "status": "Sleep",<\n>        "cpu": 0.07439663071530049,<\n>        "mem": 6422528,<\n>        "virtual": 420351148032<\n>    },<\n>    {<\n>        "pid": 686,<\n>        "ppid": 1,<\n>        "name": "QuickLookUIService",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 19841024,<\n>        "virtual": 437459795968<\n>    },<\n>    {<\n>        "pid": 683,<\n>        "ppid": 1,<\n>        "name": "WallpaperAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 6766592,<\n>        "virtual": 421411569664<\n>    },<\n>    {<\n>        "pid": 682,<\n>        "ppid": 1,<\n>        "name": "fontworker",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3457024,<\n>        "virtual": 437221474304<\n>    },<\n>    {<\n>        "pid": 679,<\n>        "ppid": 1,<\n>        "name": "Finder",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 55132160,<\n>        "virtual": 421938053120<\n>    },<\n>    {<\n>        "pid": 677,<\n>        "ppid": 1,<\n>        "name": "SystemUIServer",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5046272,<\n>        "virtual": 421126733824<\n>    },<\n>    {<\n>        "pid": 673,<\n>        "ppid": 1,<\n>        "name": "BiomeAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 10403840,<\n>        "virtual": 437198405632<\n>    },<\n>    {<\n>        "pid": 676,<\n>        "ppid": 1,<\n>        "name": "fontd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 3538944,<\n>        "virtual": 437197832192<\n>    },<\n>    {<\n>        "pid": 675,<\n>        "ppid": 1,<\n>        "name": "ControlCenter",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 45875200,<\n>        "virtual": 421662687232<\n>    },<\n>    {<\n>        "pid": 674,<\n>        "ppid": 1,<\n>        "name": "Dock",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 28213248,<\n>        "virtual": 421803655168<\n>    },<\n>    {<\n>        "pid": 664,<\n>        "ppid": 1,<\n>        "name": "corespotlightd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 26050560,<\n>        "virtual": 443923857408<\n>    },<\n>    {<\n>        "pid": 662,<\n>        "ppid": 1,<\n>        "name": "chronod",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 28000256,<\n>        "virtual": 437234499584<\n>    },<\n>    {<\n>        "pid": 666,<\n>        "ppid": 1,<\n>        "name": "Obsidian",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 69877760,<\n>        "virtual": 1635618832384<\n>    },<\n>    {<\n>        "pid": 656,<\n>        "ppid": 1,<\n>        "name": "akd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15761408,<\n>        "virtual": 437206401024<\n>    },<\n>    {<\n>        "pid": 651,<\n>        "ppid": 1,<\n>        "name": "familycircled",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 9076736,<\n>        "virtual": 437200994304<\n>    },<\n>    {<\n>        "pid": 648,<\n>        "ppid": 1,<\n>        "name": "NotificationCenter",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 37896192,<\n>        "virtual": 421872746496<\n>    },<\n>    {<\n>        "pid": 644,<\n>        "ppid": 1,<\n>        "name": "sharingd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 23330816,<\n>        "virtual": 437619376128<\n>    },<\n>    {<\n>        "pid": 635,<\n>        "ppid": 1,<\n>        "name": "triald",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7667712,<\n>        "virtual": 437200355328<\n>    },<\n>    {<\n>        "pid": 641,<\n>        "ppid": 1,<\n>        "name": "pkd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 9666560,<\n>        "virtual": 437209006080<\n>    },<\n>    {<\n>        "pid": 638,<\n>        "ppid": 1,<\n>        "name": "cloudd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 28377088,<\n>        "virtual": 437313257472<\n>    },<\n>    {<\n>        "pid": 633,<\n>        "ppid": 1,<\n>        "name": "homed",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15204352,<\n>        "virtual": 437212217344<\n>    },<\n>    {<\n>        "pid": 630,<\n>        "ppid": 1,<\n>        "name": "accountsd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 20021248,<\n>        "virtual": 437245149184<\n>    },<\n>    {<\n>        "pid": 631,<\n>        "ppid": 1,<\n>        "name": "identityservicesd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 22118400,<\n>        "virtual": 437233893376<\n>    },<\n>    {<\n>        "pid": 627,<\n>        "ppid": 1,<\n>        "name": "callservicesd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 17301504,<\n>        "virtual": 437230043136<\n>    },<\n>    {<\n>        "pid": 625,<\n>        "ppid": 1,<\n>        "name": "containermanagerd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5849088,<\n>        "virtual": 437196095488<\n>    },<\n>    {<\n>        "pid": 618,<\n>        "ppid": 1,<\n>        "name": "trustd",<\n>        "status": "Sleep",<\n>        "cpu": 0.8936057605259126,<\n>        "mem": 10731520,<\n>        "virtual": 437205516288<\n>    },<\n>    {<\n>        "pid": 616,<\n>        "ppid": 1,<\n>        "name": "assistantd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 20217856,<\n>        "virtual": 437222604800<\n>    },<\n>    {<\n>        "pid": 615,<\n>        "ppid": 1,<\n>        "name": "corespeechd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 10797056,<\n>        "virtual": 437252390912<\n>    },<\n>    {<\n>        "pid": 613,<\n>        "ppid": 1,<\n>        "name": "talagentd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 5980160,<\n>        "virtual": 437231452160<\n>    },<\n>    {<\n>        "pid": 612,<\n>        "ppid": 1,<\n>        "name": "com.apple.hiservices-xpcservice",<\n>        "status": "Sleep",<\n>        "cpu": 0.038680736436697165,<\n>        "mem": 3358720,<\n>        "virtual": 437162819584<\n>    },<\n>    {<\n>        "pid": 609,<\n>        "ppid": 1,<\n>        "name": "usernotificationsd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7438336,<\n>        "virtual": 437209563136<\n>    },<\n>    {<\n>        "pid": 607,<\n>        "ppid": 1,<\n>        "name": "secd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 19922944,<\n>        "virtual": 437245788160<\n>    },<\n>    {<\n>        "pid": 604,<\n>        "ppid": 1,<\n>        "name": "lockoutagent",<\n>        "status": "Sleep",<\n>        "cpu": 0.13005402458090612,<\n>        "mem": 4636672,<\n>        "virtual": 437197438976<\n>    },<\n>    {<\n>        "pid": 600,<\n>        "ppid": 1,<\n>        "name": "usernoted",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15908864,<\n>        "virtual": 437218787328<\n>    },<\n>    {<\n>        "pid": 599,<\n>        "ppid": 1,<\n>        "name": "routined",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15400960,<\n>        "virtual": 437223079936<\n>    },<\n>    {<\n>        "pid": 598,<\n>        "ppid": 1,<\n>        "name": "rapportd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 18169856,<\n>        "virtual": 437211611136<\n>    },<\n>    {<\n>        "pid": 596,<\n>        "ppid": 1,<\n>        "name": "nsurlsessiond",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 10993664,<\n>        "virtual": 437216493568<\n>    },<\n>    {<\n>        "pid": 594,<\n>        "ppid": 1,<\n>        "name": "lsd",<\n>        "status": "Sleep",<\n>        "cpu": 0.19359883236030026,<\n>        "mem": 12517376,<\n>        "virtual": 437221457920<\n>    },<\n>    {<\n>        "pid": 593,<\n>        "ppid": 1,<\n>        "name": "tccd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 13254656,<\n>        "virtual": 437212037120<\n>    },<\n>    {<\n>        "pid": 591,<\n>        "ppid": 1,<\n>        "name": "WindowManager",<\n>        "status": "Sleep",<\n>        "cpu": 3.362972383215889,<\n>        "mem": 19333120,<\n>        "virtual": 421669289984<\n>    },<\n>    {<\n>        "pid": 590,<\n>        "ppid": 1,<\n>        "name": "pboard",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7487488,<\n>        "virtual": 437178630144<\n>    },<\n>    {<\n>        "pid": 581,<\n>        "ppid": 1,<\n>        "name": "UserEventAgent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 9355264,<\n>        "virtual": 437199716352<\n>    },<\n>    {<\n>        "pid": 588,<\n>        "ppid": 1,<\n>        "name": "knowledge-agent",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 15138816,<\n>        "virtual": 437215051776<\n>    },<\n>    {<\n>        "pid": 587,<\n>        "ppid": 1,<\n>        "name": "universalaccessd",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 7651328,<\n>        "virtual": 420972691456<\n>    },<\n>    {<\n>        "pid": 574,<\n>        "ppid": 1,<\n>        "name": "cfprefsd",<\n>        "status": "Sleep",<\n>        "cpu": 0.6362007168458781,<\n>        "mem": 5423104,<\n>        "virtual": 437166276608<\n>    },<\n>    {<\n>        "pid": 573,<\n>        "ppid": 1,<\n>        "name": "distnoted",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 4685824,<\n>        "virtual": 437163212800<\n>    },<\n>    {<\n>        "pid": 391,<\n>        "ppid": 1,<\n>        "name": "loginwindow",<\n>        "status": "Sleep",<\n>        "cpu": 0,<\n>        "mem": 30507008,<\n>        "virtual": 421915099136<\n>    }<\n>]
pwd | clipboard copy 
pwd | clipboard copy | bat
pwd | clipboard copy | highlight
cargo update 
z nushell
ls
rm -rf nupm/
ls
mkdir misc_modules
touch cargo_upgrade_all.nu
code cargo_upgrade_all.nu 
$env.NU_LIB_DIRS
env.NU_PLUGIN_DIRS
$env.NU_PLUGIN_DIRS
$NU_LIB_DIRS
ls
rename misc_modules/ scripts
rename --help
mv misc_modules/ scripts/
ls
ls vendor/
ls scripts/
y
ls
def "cargo search" [ query: string, --limit=10] { <\n>    ^cargo search $query --limit $limit<\n>    | lines <\n>    | each { <\n>        |line| if ($line | str contains "#") { <\n>            $line | parse --regex '(?P<name>.+) = "(?P<version>.+)" +# (?P<description>.+)' <\n>        } else { <\n>            $line | parse --regex '(?P<name>.+) = "(?P<version>.+)"' <\n>        } <\n>    } <\n>    | flatten<\n>}
cargo search
cargo search 
cargo search std
cargo search tokio
cargo search -h 
cargo search 
cargo search thiserror
sha1 
fzf
sha1 1
sha1 ls
s
ls
z nested
sha .
sha1 .
sha1 README.md
delta LICENSE README.md 
delta --help
help delta
man delta
delta --help | bat -l help
ls
cargo install --git https://gitlab.com/HertelP/nu_plugin_nupsql
plugin add nu_plugin_nupsql
ca
cargo install --git https://github.com/fdncred/nu_plugin_regex
plugin add nu_plugin_regex
'abc123abc' | regex '\d+'
ls | each {|e| $e.name | regex '[Cc]'} | flatten
ls
ls | each {|e| $e.name | regex '[Cc]'} | flatten'abc123abc' | regex '[a-c]'
'abc123abc' | regex '[a-c]'
cd
fzf 
cd .config/
ls
ls | where name ~= nvim
ls | where name == nvim
cd nvim/
ls
# required<\n>mv ~/.config/nvim{,.bak}<\n><\n># optional but recommended<\n>mv ~/.local/share/nvim{,.bak}<\n>mv ~/.local/state/nvim{,.bak}<\n>mv ~/.cache/nvim{,.bak}
ls
cp init.lua init.lua.bk
ls
git clone https://github.com/LazyVim/starter ~/.config/nvim
y
l
cd
git clone https://github.com/LazyVim/starter ~/.config/nvim
z nvim
ls
pwd
ls -a
y
rm -rf .git
brew install ast-grep
nvim
npm install -g @mermaid-js/mermaid-cli
pbcopy
ldd | pbcopy
"ldd" | pbcopy
which pbcopy
nvim
ls
plugin list
nupsql
nuql --help
man nuql
nupsql
plugin use 
plugin list 
nuql query select *
nuql 
nuql query 
nuql query local
nvim
code .
confing ghostty
config ghostty
nvim
ls
ghostty +list-keybinds 
ghostty +list-keybinds | bat 
ls
http get -r https://gist.githubusercontent.com/melMass/294c21a113d0bd329ae935a79879fe04/raw/nushell.sublime-syntax o> nushell.sublime-syntax
ls
let destination = $"(bat --config-dir)" | path join syntaxes
destination
let destination = $"(bat --config-dir)" | path join syntaxes
let destination = $"(bat --config-dir)" | path join syntaxes<\n>destination
let destination = $"(bat --config-dir)" | path join syntaxes| destination
$"(bat --config-dir)" | path join syntaxes
cd ($"(bat --config-dir)" | path join syntaxes)
zi
cd
fzfp
fzf
let destination = $"(bat --config-dir)" | path join syntaxes<\n>mkdir $destination<\n>cd $destination
y
bat config.nu 
bat cache --build
bat config.nu 
man nu
man sd
man cd
sh -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | bat -p -lman'
nu -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | bat -p -lman'
zsh --help
zsh --help | bat -l help
nu
"sh -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | bat -p -lman'"
"nu -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | bat -p -lman'"
nu -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | bat -p -lman'
mandoc cd
man cd9660.util cdcc
c
man cd
cd --help
nu --help
bat --help
man man
batman man
man man
man nu
man man cd
man cd
man nu
man ls
help ls
man ls
help nu
nu --help
nu explore
nu --help | explore
explore nu
man man
fzfp
fzp
fd 
fd nu
fd -X
fd -X bat
fd nu -X bat
fd -X bat nu
fdx nu
fd nu -X bat
fdx nu
fd nu
fdx nu
fd config.nu
fdx config.nu
which fdx
fdx nu
fdx config.nu
fdx config
fd config.nu -X bat
fdx config
fd config
tail
man man tail
man man | tail
tail --help
man tail
nu history
history
history | tail
history -h 
history | lines
history | get
history | tailx
tailx 
tail --help
man tail
histor | tail
history | tailx
zsh
help man
help batman
help core-man
help man
help batman
batman ls
man --help
man man
man -h
man tail
tail --help
ls --help
man --help
batman --help
fzf --help
> 'let x = 3' | nu-highlight
'let x = 3' | nu-highlight
nu-highlight 
nu-highlight --help
man nu-hiERR
man nu-highlight
nu --help
fzf --help 
fzf --help | bathelp
scope aliases
bhelp fzf
bh
fzf --help | bh
bathelp fzf
hlp fzf
help fzf -h
hlp fzf
hlp nu
nu --help | bh
helpbat | bh
helpbat bh
helpbat fzf
hlp ls
ls --help
hlp man
ls --help
hlp ls
hlp eza
help z
hlp z
hlp git commit -m
hlp git commit
hlp git
git commit -m --help
git commit --help
git commit --help | bh
git commit --help | bat
git commit --help | bat -l help
git commit --help | bat -l man
git commit --help | bat -l txt
man gi
man git
man git commit
man "git commit"
git commit | abt
git commit | bat
git commit -h| bat
git commit -h | bat
git commit -h | bat -l help
hlp ls
hlp git commit
git commit -h | bat --plain -l help
git commit -h | bat --plain --language=help
git commit -h | bat --plain -l help
git commit --help | bat --plain -l help
git commit --help | bat -l help
git commit --help
git commit -h
git commit -h | bat
hlp zfz
hlp fzf
hlp fzp
hlp eza
hlp zoxide
fzf --help
hlp fzf
help bat
hlp bat
bat --help | bn
bat --help | b
bat --help | bnl
bat --help | bp
bat --help | bpl
hlp bat
bat --help | bl 10 100
bat --help | bl 10
hlp bat
bat --help | bl 30:40
ls
lz
lzt
lz --help
hlp lz
lz --help | bh
y
cw
fk
fuck
thefuck
fk
cw
fk
get status
fk
git status
z nested
get status
fk
ls
get status
fk
get status
fk
f
fk
f
ld
f
lss
f
$"(history | last 1 | get command | get 0)"
thefuck
thefuck | explore
thefuck --help
thefuck -h
hlp thefuck
thefuck -h | bh
thefuck -h | bat -l help
man thefuck
thefuck -a
do "ls"
do ls
do
do {|| ls}
cw
get status
f
git status
lw
f
lss
f
batgrep
hlp batgrep
rg "I got the power"
rg 
rg "I got the power"
hlp grep
hlp rg
grep --help
cd
fzf
code fzf
nvim .ripgreprc 
batgrep
hlp batgrep
batgrep grep .ripgreprc 
batgrep .ripgreprc grep
batgrep r .ripgreprc
batgrep -i r .ripgreprc
z nested
ls
batgrep python pyproject.toml 
grep python pyproject.toml 
rg python pyproject.toml 
man batgrep
core_man batman
core_man batgrep
which core_man
core_man --help
man --help
batman --help
man man
man batgrep
help batgrep
hlp batgrep
rg python pyproject.toml 
$env.RIPGREP_CONFIG_PATH
bat $env.RIPGREP_CONFIG_PATH
bat $env.RIPGREP_CONFIG_PATH -l sh
rg python pyproject.toml 
cd
z
zi
cd ..
b syntaxes/nushell.sublime-syntax 
ls
bat --config-file
code bat --config-file
code (bat --config-file)
bat --generate-config-file
ls
code bat
code config 
rm bat
code config 
batgrep python pyproject.toml
z nesed
z nested
batgrep python pyproject.toml
$env.BAT_THEME
ls
cd nested
z nested
$env.BAT_THEME
batgrep python pyproject.toml
bat --help
hlp bat
rg python pyproject.toml 
bat .gitignore 
hlp bat
rg python pyproject.toml 
bat .gitignore 
batgrep python pyproject.toml
bat uv.lock 
bat pyproject.toml 
cd
code .ripgreprc 
path join [".config", ".ripgreprc"]
join [".config", ".ripgreprc"]
"" | path join [".config", ".ripgreprc"]
path join ".ripgreprc" | path join
[".config", ".ripgreprc"] | path join 
".config" ".ripgreprc" | path join 
y
bat .config/ripgrep/config.sh 
zi
ls
bat --config-dir 
bat --config-file 
cd ..
zi
cd ripgrep/
ls,
code config.sh 
ripgrep-all --help
batgrep python pyproject.toml
z nested
batgrep python pyproject.toml
batgrep python pyproject.toml --color
hlp batgrep
rg python pyproject.toml --color
rg python pyproject.toml -uuu
rg python pyproject.toml --count
z nested
ripgrep python pyproject.toml --count
ripgrep python pyproject.toml
ripgrep python
rg python
rg numpy
rg numpy -uuu
ripgrep numpy -uuu
rg python pyproject.toml
rg numpy -u
rg numpy -uu
rg numpy -uuu
hlp rg
rg --files
ripgrep --files
ripgrep --files gz
ripgrep gz --files
ripgrep --files | rg gz
fz gz
fd gz
fzf
ripgrep Numpy -uuu
gri Numpy
rgi Numpy
rga nupmy
rgi numpy
rgi NUMPY
rg NUMPY
rga numpy
rga ok
rga check
rg numpy
rgc numpy
rgc numpy -uuu
rgc numpy -uu
rg numpy
ripgrep numpy
rg numpy -u
ripgrep numpy
rgf toml
rgf . toml
rgc toml
rgc list
ripgrep --files | rg gz
rgf gz
which rgf
help rgf
tesseract --help
hlf tesseract
f
hlp tesseract
help tesseract
rgf gz
help tesseract
rgf gz
rg numpy -u
ripgrep Numpy -uuu
hlp rg
ripgrep Numpy -uuu
rgf "warning" -i -C3
rgf -i "warning" -C3
rgf "warning" -C3
rgf warning -C3
rgf warning
git status
gs
hlp gs
gs
git status
gl
git status
gl
glo
gl
glo
git log
gl
glo
gl
git log
glo
gl
hlp du
man du
which du
cd 
$env
$env.path
bat  /Users/julian/ucargo/bin
ls  /Users/julian/ucargo/bin
ls  /Users/julian/cargo/bin
ls
la
ll
la
lza
lz -a
lza | bat
lz | bat
lz -a | bat
lz -a | bat -p
lz -a | bp
$env.path
ls /Users/julian/.cargo/bin
help rls
hlp rls
rls
bacon
$env.path
bacon
which du
$env.path
$env.path | uniq 
$env.path
which du
help which
glo
which find du 7zz 
location du
which du
which location du 
whereis du
ls /opt/homebrew/opt/uutils-coreutils/libexec/uubin
ls /opt/homebrew/opt/uutils-coreutils/libexec/uubin/du
which -a du
which tee
which tac
hlp tac
which -a tac
which dir 
which -a dir
which -a df
hlep dust
hlp dust
du
dust
dua
dust
cd
dust
du
$env.FZF_DEFAULT_COMMAND
history
ll
ls
ll
lsg
ls
la
z nested
la
ls
ls -a
core_ls -a
lz
lzt
lztt
lzt
lztt
hlp eza
snu
lza
lz
lzt
lz --recurse 
lzr
lz
hlp lz
hlp eza
lz --git-ignore 
z nested
lz --git-ignore 
lz
lz --git-repos 
lz --git-repos-no-status
lz
lr
lzr
l
ls
l
l -a
ls a
ls -a
l -a
l 
l -l
ls -a
ls
hlp ls
hlep ls
help ls
man ls
lz --help | bh
lz
help complete
hlp eza
hlp z
qc
cd
ls
ls -a
ls -a | filter xide
ls -a | filter {|x| x ~= xide}
ls -a | filter { |x| $x ~= xide}
ls -a | filter { |x| xide in x}
ls -a | filter { |x| "xide" in x}
ls -a
rm .zjxide.nu
hlp z
z eza
which h
h
hlp eza
hlp du
hlp ls
ls
whichLs
which ls
which du
let expanded_alias = scope aliases<\n>    | where name == z.0<\n>    | get -i 0.expansio
expanded_alias
let expanded_alias = scope aliases<\n>    | where name == z.0<\n>    | get -i 0.expansio | expanded_alias
scope aliases z
scope aliases
hlp du
hlp eza
hlp z
hlp du
hlp ls
hlp hlp
hlp git
hlp git commit
hlp sort
hlp nu
hlp nuql
help nuql
hlp nuql
hlp nuql
help ls
hlp ls
help cd
help cd | explore 
help cd
cd | explori
cd | explore 
ls | explore 
.config
h ls
help ls
h z
h h
h hlp
h b
h bn
h hlp
hlp cd
h
h ls
brew upgrade fzf
vim $(fzf)
nvim fzf
fzf *
fzf * | save
fzf * | save tehsatesha
ls tehsatesha
rm tehsatesha
ls
cd nest
cd nested
z nested
ls
brew upgrade
fzf
nu
fzf
ls
$env.FZF_DEFAULT_COMMAND
nu
nushell
fzf
hlp fd
fzf
z nested
fzf
h f
fzf
fzp
fzf
fg 
$bg_hilight,
$bg_hilight
$bg_hilight,
$bg_hilight
$bg_highlight
fzf
"aa" + "11"
fzf
h fzf
fzf --help
h fzf
fzf
fzp
h fzf
fzf --style=minimal
fzf --style=default
fzf --style full
fzp --style full
fzp --style minimal
fzf
fzp
fzp --style=default
git ls-files | fzf --style full \<\n>    --border --padding 1,2 \<\n>    --border-label ' Demo ' --input-label ' Input ' --header-label ' File Type ' \<\n>    --preview 'fzf-preview.sh {}' \<\n>    --bind 'result:transform-list-label:<\n>        if [[ -z $FZF_QUERY ]]; then<\n>          echo " $FZF_MATCH_COUNT items "<\n>        else<\n>          echo " $FZF_MATCH_COUNT matches for [$FZF_QUERY] "<\n>        fi<\n>        ' \<\n>    --bind 'focus:transform-preview-label:[[ -n {} ]] && printf " Previewing [%s] " {}' \<\n>    --bind 'focus:+transform-header:file --brief {} || echo "No file selected"' \<\n>    --bind 'ctrl-r:change-list-label( Reloading the list )+reload(sleep 2; git ls-files)' \<\n>    --color 'border:#aaaaaa,label:#cccccc' \<\n>    --color 'preview-border:#9999cc,preview-label:#ccccff' \<\n>    --color 'list-border:#669966,list-label:#99cc99' \<\n>    --color 'input-border:#996666,input-label:#ffcccc' \<\n>    --color 'header-border:#6699cc,header-label:#99ccff'<\n><\n>
git ls-files | fzf --style full \<\n>    --border --padding 1,2 \<\n>    --border-label ' Demo ' --input-label ' Input ' --header-label ' File Type ' \<\n>    --preview 'fzf-preview.sh {}' \<\n>    --bind 'result:transform-list-label:<\n>        if [[ -z $FZF_QUERY ]]; then<\n>          echo " $FZF_MATCH_COUNT items "<\n>        else<\n>          echo " $FZF_MATCH_COUNT matches for [$FZF_QUERY] "<\n>        fi<\n>        ' \<\n>    --bind 'focus:transform-preview-label:[[ -n {} ]] && printf " Previewing [%s] " {}' \<\n>    --bind 'focus:+transform-header:file --brief {} || echo "No file selected"' \<\n>    --bind 'ctrl-r:change-list-label( Reloading the list )+reload(sleep 2; git ls-files)' \<\n>    --color 'border:#aaaaaa,label:#cccccc' \<\n>    --color 'preview-border:#9999cc,preview-label:#ccccff' \<\n>    --color 'list-border:#669966,list-label:#99cc99' \<\n>    --color 'input-border:#996666,input-label:#ffcccc' \<\n>    --color 'header-border:#6699cc,header-label:#99ccff'
fzf
fzf --color 16 
fzf --color bw 
fzf 
fzp
fzp --color bw
fzp --color dark 
fzp --color light 
fzp --color 16 
fzp --color=bg:($bg)
fzp --color=bg+:($bg)
fzp --color=,bg+:($bg_highlight),hl:($purple)},hl+:($purple)},info:($blue),prompt:($cyan),pointer:($cyan),marker:($cyan),spinner:($cyan),header:($cyan)
fzp --color=bg+:($bg_highlight),hl:($purple)},hl+:($purple)},info:($blue),prompt:($cyan),pointer:($cyan),marker:($cyan),spinner:($cyan),header:($cyan)
fzp --color="bg+:($bg_highlight),hl:($purple)},hl+:($purple)},info:($blue),prompt:($cyan),pointer:($cyan),marker:($cyan),spinner:($cyan),header:($cyan)"
fzp --color=bg+:($bg_highlight),hl:($purple)},hl+:($purple)},info:($blue),prompt:($cyan),pointer:($cyan),marker:($cyan),spinner:($cyan),header:($cyan)
fzp --color=bg+:($bg_highlight),hl:($purple)},hl+:($purple)},info:($blue),prompt:($cyan),pointer:($cyan),marker:($cyan),spinner:($cyan),header:($cyan),
fzp --color=bg+:($bg_highlight),hl:($purple)},hl+:($purple),info:($blue),prompt:($cyan),pointer:($cyan),marker:($cyan),spinner:($cyan),header:($cyan),
fzp --color=bg+:($bg_highlight),hl:($purple)},hl+:($purple),info:($blue),prompt:($cyan),pointer:($cyan),marker:($cyan),spinner:($cyan),header:($cyan)
fzp --color=bg+:($bg_highlight),hl:($purple),hl+:($purple),info:($blue),prompt:($cyan),pointer:($cyan),marker:($cyan),spinner:($cyan),header:($cyan)
fzf
no
fzf
fzp
git branch ev
git branch -v
z nested
git branch -v
gl
glo
glo | fzf
fzp
zi
zi
gbs
gb
git branch
fd
fzf
gbs
let branch = (<\n>    git branch |<\n>    split row "\n" |<\n>    str trim |<\n>    where ($it !~ '\*') |<\n>    where ($it != '') |<\n>    str join (char nl) |<\n>    fzf --no-multi<\n>  )<\n>  if $branch != '' {<\n>    git switch $branch<\n>  }
getstat
gstat
let branch = (<\n>    git branch |<\n>    split row "\n" |<\n>    str trim |<\n>    where ($it !~ '\*') |<\n>    where ($it != '') |<\n>    str join (char nl) |<\n>    fzf --no-multi<\n>  )<\n>  if $branch != '' {<\n>    git switch $branch<\n>  } | inspect
let branch = (<\n>    git branch |<\n>    split row "\n" |<\n>    str trim |<\n>    where ($it !~ '\*') |<\n>    where ($it != '') |<\n>    str join (char nl) |<\n>    fzf --no-multi<\n>  ) | inspect
let branch = (<\n>    git branch |<\n>    split row "\n" |<\n>    str trim |<\n>    where ($it !~ '\*') |<\n>    where ($it != '') |<\n>    str join (char nl) |<\n>    inspect<\n>)<\n><\n><\n><\n>
let branch = (<\n>    git branch |<\n>    split row "\n" |<\n>    str trim |<\n>    where ($it !~ '\*') |<\n>    where ($it != '') |<\n>    str join (char nl) )<\n><\n><\n>
$branch
git branch |<\n>    split row "\n" |<\n>    str trim |<\n>    where ($it !~ '\*') |<\n>    where ($it != '') |<\n>    str join (char nl) | inspect
git branch | inspect |<\n>    split row "\n" | inspect |<\n>    str trim | inspect |<\n>    where ($it !~ '\*') | inspect |<\n>    where ($it != '') | inspect |<\n>    str join (char nl) | inspect
$it
help where
/$it
git branch | inspect |<\n>    split row "\n" | inspect |<\n>    str trim | inspect |<\n>    where ($in !~ '\*') | inspect |<\n>    where ($in != '') | inspect |<\n>    str join (char nl) | inspect
h where
ls | fzf
ls | slit row "\n" | fzf
ls | split row "\n" | fzf
ls | lines | split row "\n" | fzf
which nufmt
which tree
fzf
nu
nu
cd git/config
cd 
.amazon-q.dotfiles.bak/2025-05-25_09-45-15/.bash_profile
cd
> cargo install nu_plugin_skim
cargo install nu_plugin_skim
plugin add nu_plugin_skim
> ps | sk --format {get name} --preview {}
ps | sk --format {get name} --preview {}
skim
sk
brew install sk
sk
cd
ck
sk
ps | sk --format {get name} --preview {}
ls sk
ls | sk
ls | sk --format {get name}
ls | sk --format {get name} --preview {}
cd | ls | sk --format {get name} --preview {}
cd (ls | sk --format {get name} --preview {})
cd ( ls | sk --format {get name} --preview {} )
cd | ls | sk --format {get name} --preview {}
ls | sk --format {get name} --preview {} | cd $in
ls | sk --format {get name} --preview {} | cd $in.name
gb
git branch
z nested
git branch
git branch | fzf
git branch | fzf | print $in
git branch | fzf | print "OK"
git branch | fzf | print "OK" | kill
git branch | fzf | print "OK" | kill --force 
nu
git branch | fzf | print "OK" | kill --force 
> ps | sk --format {get name} --preview {} | kill $in.pid
ps | sk --format {get name} --preview {} | kill $in.pid
code .pymobiledevice3/Xcode_iOS_DDI_Personalized/Image.trustcache
code 
zi
ls
cd scripts/
ls
cargo_upgrade_all.nu
cargo_upgrade_all
zi
ls vendor/
nu "cargo_upgrade_all.nu"
y
code fzf_keybindings.nu
cp fzf_keybindings.nu fzf_keybindings.nu.back
lc
ls
code fzf_keybindings.nu.back
code fzf_keybindings.nu.back 
ls
$NU_LIB_DIRS
cd
cargo install --git https://github.com/nushell/nufmt
brew install tree
$env.__fzf_keybindings_loaded
bool "true"
into bool "true"
y
ls
print 
cd
print 
cd
print Xcode_iOS_DDI_Personalized/BuildManifest.plist
ls
.DS_Store
cd
$env.__fzf_keybindings_loaded
cd
s
code Library/Application Support/nushell/scripts/fzf_keybindings.nu.back
lslslsls
ls
cd scripts/
ls
code fzf_keybindings.nu.back 
grep ok
cd
rm scripts/fzf_keybindings.nu.back
z scripts
code fzf_keybindings.nu 
cd ..
ls
mkdir misc_data
code misc_data/ls_colors.txt
ls
cd ..
ls
$nu.config-path
$
$NU_LIB_DIRS
$nu
n
ls
$NU_LIB_DIRS$env.LS_COLORS
$env.LS_COLORS
ls
code secrets.nu
cd
zi
ls
cd
zi
ls
lsa
ls -a
cd .config/
ls -a
cd nvim_backup/
ls
code init.lue
code init.lua 
rm init.lue
nvim
nvim init.lua 
sls
ls
cd ..
y
bw sync
dw config
bw config.nu
bw config
hlp bw config
hlp bw
$env
$env.path
$NU_LIB_DIRS
code completions/bitwarden-cli-completion.nu 
ls
ls -a
code plugin.msgpackz 
mkdir old/
ls
mv old/ .old
ls
mv plugin.msgpackz .old/
ls
ls -a
plugin list 
mv .old/plugin.msgpackz .
ls -a
pluginList
plugin list
y
brew install https://github.com/bitwarden/sdk-sm
cargo install --git https://github.com/bitwarden/sdk-sm
cargo install --git https://github.com/bitwarden/sdk-sm bws
cargo list
cargo --list
cargo install bws --locked
cargo uninstall 
cargo --list 
which bws
which bws -a
cd  /Users/julian/.cargo/bin
ls
hlp bw
bw --help | pbcopy
bww --help | pbcopy
bws --help | pbcopy
bws
pbcopy
bws --help | pbcopy
bws completions 
bws completions  --help
bws
bws secret list 
bws secret get
bws 
bws project get e325ea69-a3ab-4dff-836f-b02e013fe530
bws
bws config
bws config get
bws config serer-api
bws config server-api
bws config get server-api
bws config server-api get
bws config server-api
bws config 
bws config -f
bws config server-api
cd
bws config server-api
bws config
bws config -d server-api
bws config -p
bws config -t
bws config -t 0.87d0ad72-9c76-4ecd-aeb0-b2ee0135ff52.vXvqjn0F9NvjdVW6JoGD4dgXpYTX4w:U+z/HzBKX01mvJAOWd/I2w==
bws config -o server-api
z nushell
ls
cd misc_data/
ls
bws config -o json
bws --help
bws project
bws projectlist
bws project list
bws --help
~/.config/bws/config
code ~/.config/bws/config
bws config --help
bws config -t 0.87d0ad72-9c76-4ecd-aeb0-b2ee0135ff52.vXvqjn0F9NvjdVW6JoGD4dgXpYTX4w:U+z/HzBKX01mvJAOWd/I2w==
bws config get access_token
bws secret list --access-token 0.48c78342-1635-48a6-accd-afbe01336365.C0tMmQqHnAp1h0gL8bngprlPOYutt0:B3h5D+YgLvFiQhWkIq6Bow==
bws secret list --access-token 0.87d0ad72-9c76-4ecd-aeb0-b2ee0135ff52.vXvqjn0F9NvjdVW6JoGD4dgXpYTX4w:U+z/HzBKX01mvJAOWd/I2w==
$env | explore
hlp bws secret
hlp bws secret 
bws secret list
RUST_BACKTRACE=1 bws secret list
$env | rg bws
bws secret list
RUST_BACKTRACE=1 bws secret list
cargo --list
cargo-update 
cargo install bws --locked
bws secret get
bws secret get 5019503f-9387-4448-a075-b2ee00b273aa
z bws
cd .config/bws/config
cd .config/bws
ls
rm config
bws secret get 5019503f-9387-4448-a075-b2ee00b273aa
ls
bws config server-base https://vault.bitwarden.eu/
ls
code config 
bws secret list
RUST_BACKTRACE=1 bws secret list
bws secret list | parse
bws secret list | lines
bws secret list | detect columns
bws secret list | from json
bws secret list | from json | explore
bws secret list | from json
bws secret list
bws secret list -p eu
bws secret list
hlp bws config
bws project list
hlp bws
ls
hlp bws project
z bws
z nushell
ls
y
bw
hlpbw
hlp  bw
bw list
hlp bw list
bw list 
bw list items
bw login
bw unlock
bw list items
$env.BW_SESSION
bw unlock
bw list items --session="5wCFH5wOpgB9nKJw9vcTwCGHARwYB1hXvubGiW1kodhNTaKaRFYMTcyGvt/4qIQWHjnXsDPNOrp/aLQo+7oAIg=="
bw list items --session 5wCFH5wOpgB9nKJw9vcTwCGHARwYB1hXvubGiW1kodhNTaKaRFYMTcyGvt/4qIQWHjnXsDPNOrp/aLQo+7oAIg==
bw unlock
bw list items --session PzccxIRqrrrv6+/pZcljcSue9Uu0e/AD1+VaUVB/8UqGMI68AzxTikDdYUEu612fzA6Hn98eKpIHS5tPg9L82w==
bw list items
$env.BW_SESSION = PzccxIRqrrrv6+/pZcljcSue9Uu0e/AD1+VaUVB/8UqGMI68AzxTikDdYUEu612fzA6Hn98eKpIHS5tPg9L82w==
$env.BW_SESSION = "PzccxIRqrrrv6+/pZcljcSue9Uu0e/AD1+VaUVB/8UqGMI68AzxTikDdYUEu612fzA6Hn98eKpIHS5tPg9L82w=="
bw list items
bws secret list | pbcopy
clip
export def load-secrets [] {<\n>    # Check if bws is installed<\n>    if not (which bws | is-not-empty) {<\n>        print "bws not found. Install Bitwarden Secrets CLI: https://github.com/bitwarden/sdk"<\n>        return<\n>    }<\n><\n>    # Try to get access token<\n>    let token = (try {<\n>        bws config get access_token | from json | get value<\n>    } catch { null })<\n><\n>    if $token == null {<\n>        print (ansi yellow) + "Bitwarden not authenticated. Secrets not loaded." + (ansi reset)<\n>        return<\n>    }<\n><\n>    # Retrieve secrets (replace YOUR_PROJECT_ID)<\n>    let secrets = (try {<\n>        bws --access-token $token secret list --project-id YOUR_PROJECT_ID --output json | from json<\n>    } catch {<\n>        print (ansi red) + "Failed to retrieve secrets. Check project ID and permissions." + (ansi reset)<\n>        return<\n>    })<\n><\n>    # Create record for load-env<\n>    let secret_record = ($secrets | reduce -f {} {|it, acc|<\n>        $acc | insert $it.key $it.value<\n>    })<\n><\n>    # Load into environment<\n>    load-env $secret_record<\n><\n>    print (ansi g) + $"Loaded ($secrets | length) secrets from Bitwarden" + (ansi reset)<\n>}<\n><\n># Helper to authenticate<\n>export def login [] {<\n>    bws login<\n>    print "Authentication successful! Restart Nushell to load secrets"<\n>}
login
bws login
$env | lines
$env
$env | explore
$NU_LIB_DIRS
$NU_PLUGIN_DIRS
bws 
# Load secrets from Bitwarden into environment variables<\n>export def load-secrets [] {<\n>    # Check if bws is installed<\n>    if not (which bws | is-not-empty) {<\n>        print "bws not found. Install Bitwarden Secrets CLI: https://github.com/bitwarden/sdk"<\n>        return<\n>    }<\n><\n>    # Try to get access token<\n>    let token = (try {<\n>        bws config get access_token | from json | get value<\n>    } catch { null })<\n><\n>    if $token == null {<\n>        print (ansi yellow) + "Bitwarden not authenticated. Secrets not loaded." + (ansi reset)<\n>        return<\n>    }<\n><\n>    # Retrieve secrets (replace YOUR_PROJECT_ID)<\n>    let secrets = (try {<\n>        bws --access-token $token secret list --project-id YOUR_PROJECT_ID --output json | from json<\n>    } catch {<\n>        print (ansi red) + "Failed to retrieve secrets. Check project ID and permissions." + (ansi reset)<\n>        return<\n>    })<\n><\n>    # Create record for load-env<\n>    let secret_record = ($secrets | reduce -f {} {|it, acc|<\n>        $acc | insert $it.key $it.value<\n>    })<\n><\n>    # Load into environment<\n>    load-env $secret_record<\n><\n>    print (ansi g) + $"Loaded ($secrets | length) secrets from Bitwarden" + (ansi reset)<\n>}
load-secrets 
hlp ripgrep
export def load-secrets [] {<\n>    # Check if access token exists<\n>    if not ($env.BWS_ACCESS_TOKEN?) {<\n>        print (ansi yellow) + "BWS_ACCESS_TOKEN not set. Secrets not loaded." + (ansi reset)<\n>        return<\n>    }<\n><\n>    # Retrieve secrets<\n>    let secrets = (try {<\n>        bws --access-token $env.BWS_ACCESS_TOKEN secret list --output json | from json<\n>    } catch {<\n>        print (ansi red) + "Failed to retrieve secrets. Check project ID and permissions." + (ansi reset)<\n>        return<\n>    })<\n><\n>    # Create record for load-env<\n>    let secret_record = ($secrets | reduce -f {} {|it, acc|<\n>        $acc | insert $it.key $it.value<\n>    })<\n><\n>    # Load into environment<\n>    load-env $secret_record<\n><\n>    print (ansi g) + $"Loaded ($secrets | length) secrets from Bitwarden" + (ansi reset)<\n>}
load-secrets 
export def load-secrets [] {<\n>    # Retrieve secrets<\n>    let secrets = (try {<\n>        bws --access-token $env.BWS_ACCESS_TOKEN secret list --output json | from json<\n>    } catch {<\n>        print (ansi red) + "Failed to retrieve secrets. Check project ID and permissions." + (ansi reset)<\n>        return<\n>    })<\n><\n>    # Create record for load-env<\n>    let secret_record = ($secrets | reduce -f {} {|it, acc|<\n>        $acc | insert $it.key $it.value<\n>    })<\n><\n>    # Load into environment<\n>    load-env $secret_record<\n><\n>    print (ansi g) + $"Loaded ($secrets | length) secrets from Bitwarden" + (ansi reset)<\n>}
load-secrets 
$env | rg BW
export def load-secrets [] {<\n>    # Retrieve secrets<\n>    let secrets = (try {<\n>        bws --access-token $env.BWS_ACCESS_TOKEN secret list --output json | from json<\n>    } catch {<\n>        print (ansi red) + "Failed to retrieve secrets. Check project ID and permissions." + (ansi reset)<\n>        return<\n>    })<\n><\n>    # Create record for load-env<\n>    let secret_record = ($secrets | reduce -f {} {|it, acc|<\n>        $acc | insert $it.key $it.value<\n>    })<\n><\n>    # Load into environment<\n>    load-env $secret_record<\n><\n>    print (ansi g) + $"Loaded ($secrets | length) secrets from Bitwarden" + (ansi reset)<\n>}
$env | rg BW
load-secrets 
$env | rg BW
$env | explore
$env | rg user.47344d2
z scripts
use load_secrets.nu 
load-secrets 
ls
use load_secrets.nu 
load-secrets 
export def load-secrets [] {<\n>    # Retrieve secrets<\n>    let secrets = (try {<\n>        bws --access-token $env.BWS_ACCESS_TOKEN secret list --output json | from json<\n>    } catch {<\n>        print (ansi red) + "Failed to retrieve secrets. Check project ID and permissions." + (ansi reset)<\n>        return<\n>    })<\n>    print $secrets<\n><\n>    # Create record for load-env<\n>    let secret_record = ($secrets | reduce -f {} {|it, acc|<\n>        $acc | insert $it.key $it.value<\n>    })<\n>    print $secret_record<\n><\n>    # Load into environment<\n>    load-env $secret_record<\n><\n>    print (ansi g) + $"Loaded ($secrets | length) secrets from Bitwarden" + (ansi reset)<\n>}
load-secrets 
$BW_CLIENTID
$env.BW_CLIENTID
$BW_CLIENTID
load-secrets.nu load_secrets.nu
load-secrets load_secrets
load-secrets
load-env {NAME: ABE, AGE: UNKNOWN}; $env.NAME<\n>ABE
load-env {NAME: ABE, AGE: UNKNOWN}; $env.NAME
$env.NAME
$env.NAMEdef xx [] {<\n>    load-env {NAME: ABC, AGE: UNKNOWN}<\n>}
def xx [] {<\n>    load-env {NAME: ABC, AGE: UNKNOWN}<\n>}
xx
$env.NAME
export def --env load-secrets [] {<\n>    # Retrieve secrets<\n>    let secrets = (try {<\n>        bws --access-token $env.BWS_ACCESS_TOKEN secret list --output json | from json<\n>    } catch {<\n>        print (ansi red) + "Failed to retrieve secrets. Check project ID and permissions." + (ansi reset)<\n>        return<\n>    })<\n><\n>    # Create record for load-env<\n>    let secret_record = ($secrets | reduce -f {} {|it, acc|<\n>        $acc | insert $it.key $it.value<\n>    })<\n>    print $secret_record<\n><\n>    # Load into environment<\n>    load-env $secret_record<\n><\n>    print (ansi g) + $"Loaded ($secrets | length) secrets from Bitwarden" + (ansi reset)<\n>}
load-secrets 
$env | rg BW
hlp load_secrets
hlp load_secrets load-secrets 
load_secrets load-secrets --help
help load_secrets load-secrets
export def --env load-secrets [] {<\n>    # Retrieve secrets<\n>    let secrets = (try {<\n>        bws --access-token $env.BWS_ACCESS_TOKEN secret list --output json | from json<\n>    } catch {<\n>        print (ansi red) + "Failed to retrieve secrets. Check project ID and permissions." + (ansi reset)<\n>        return<\n>    })<\n><\n>    # Create record for load-env<\n>    let secret_record = ($secrets | reduce -f {} {|it, acc|<\n>        $acc | insert $it.key $it.value<\n>    })<\n>    print ($secret_record | head)<\n><\n>    # Load into environment<\n>    load-env $secret_record<\n><\n>    print (ansi g) + $"Loaded ($secrets | length) secrets from Bitwarden" + (ansi reset)<\n>}
load-secrets 
$env | head
export def --env load-secrets [] {<\n>    # Retrieve secrets<\n>    let secrets = (try {<\n>        bws --access-token $env.BWS_ACCESS_TOKEN secret list --output json | from json<\n>    } catch {<\n>        print (ansi red) + "Failed to retrieve secrets. Check project ID and permissions." + (ansi reset)<\n>        return<\n>    })<\n><\n>    # Create record for load-env<\n>    let secret_record = ($secrets | reduce -f {} {|it, acc|<\n>        $acc | insert $it.key $it.value<\n>    })<\n>    print ($secret_record | head)<\n><\n>    # Load into environment<\n>    load-env $secret_record<\n><\n>    print (ansi g) + $"Loaded ($secrets | length) secrets from Bitwarden" + (ansi reset)<\n><\n>    $secret_record<\n>}
load-secrets 
export def --env load-secrets [] {<\n>    # Retrieve secrets<\n>    let secrets = (try {<\n>        bws --access-token $env.BWS_ACCESS_TOKEN secret list --output json | from json<\n>    } catch {<\n>        print (ansi red) + "Failed to retrieve secrets. Check project ID and permissions." + (ansi reset)<\n>        return<\n>    })<\n><\n>    # Create record for load-env<\n>    let secret_record = ($secrets | reduce -f {} {|it, acc|<\n>        $acc | insert $it.key $it.value<\n>    })<\n><\n>    # Load into environment<\n>    load-env $secret_record<\n><\n>    print (ansi g) $"🎉 Loaded ($secrets | length) secrets from Bitwarden" (ansi reset)<\n><\n>    $secret_record<\n>}
load-secrets 
print (ansi g) $"🎉 Loaded ($secrets | length) secrets from Bitwarden" (ansi reset) 1
print (ansi g) $"🎉 Loaded (1 | length) secrets from Bitwarden" (ansi reset) 1
print (ansi g) $"🎉 Loaded 1 secrets from Bitwarden" (ansi reset) 1
print (ansi g) $"🎉 Loaded 1 secrets from Bitwarden" (ansi reset) + 1
print (ansi g) $"🎉 Loaded 1 secrets from Bitwarden" (ansi reset)1
print (ansi g) $"🎉 Loaded 1 secrets from Bitwarden" (ansi reset) 1
print (ansi g) $"🎉 Loaded 1 secrets from Bitwarden" 1 (ansi reset)
export def --env load-secrets [] {<\n>    # Retrieve secrets<\n>    let secrets = (try {<\n>        bws --access-token $env.BWS_ACCESS_TOKEN secret list --output json | from json<\n>    } catch {<\n>        print (ansi red) + "Failed to retrieve secrets. Check project ID and permissions." + (ansi reset)<\n>        return<\n>    })<\n><\n>    # Create record for load-env<\n>    let secret_record = ($secrets | reduce -f {} {|it, acc|<\n>        $acc | insert $it.key $it.value<\n>    })<\n><\n>    # Load into environment<\n>    load-env $secret_record<\n><\n>    print (ansi g) $"🎉 Loaded ($secrets | length) secrets from Bitwarden 🎉" (ansi reset)<\n><\n>    $secret_record<\n>}
load-secrets 
cd ..
ls
mkdir modules
mv scripts/load_secrets.nu modules/
ls
lzt
$env.BWS_ACCESS_TOKEN
ls
use modules/load_secrets.nu
load-secrets 
$nu.default-config-dir
$nu.config-path
$nu.data-dir
$nu.home-path
$nu.plugin-path
$nu.env-path
$nu.temp-path
$nu.data-dir
code modules/load_secrets.nu 
use load_secrets.nu load-secrets
load-secrets 
$env.BWS_ACCESS_TOKEN
bws --access-token $env.BWS_ACCESS_TOKEN secret list --output json | from json
bws
bu
z nushell
code .env
ls
ls -a
$env | rg HAA
$env | rg HA
$env | rg HAHA
source-env .old/
source-env .env
code modules/from_dot_env.nu
y
security
hlp security
security help
security help | bh
security list-keychains
security unlock-keychain
security leaks
security help | bh
def xx [] {<\n>    load-env {NAME: ABC, AGE: UNKNOWN}<\n>}
h def
h xx
h load-secrets 
h load_secrets
h security
code ~/.config/nushell/.gitignore
h chmod
hlp chmod
z nushe
code .gitignore
code .bws_token 
open .bws_token
cd ~/.config/nushell/
ls
cd ..
rm nushell/
rm -f nushell/
y
z nu
y
code /Users/julian/Library/Application Support/nushell/modules/load_bws_secrets.nu:21:26]
code /Users/julian/Library/Application Support/nushell/modules/load_bws_secrets.nu
ls
code modules/load_bws_secrets.nu 
code .bws_token 
open .bws_token
open help
help open
help open --raw
open --raw .bws_token
code .bws_token
nvim .bws_token
&env | rg BW
$env | rg BW
no
open --raw .bws_token
open --help 
open .bws_token --raw | decode utf-8
open .bws_token --raw | str stats 
hlp print
open ($nu.data-dir | path join ".bws_token") | into binary | decode utf8 | split chars<\n>
open ($nu.data-dir | path join ".bws_token") | into binary | each {|b| $b }<\n>
open .bws_token --raw | str stats 
open .bws_token --raw | debug
open .bws_token --raw | debug -v
rm modules/debug_char_printing.nu
y
security help | bh
security list-keychains
security help | bh
security creat-keychain
f
security create-keychain
security list-keychains
security help | bh
security add-generic-password \<\n>  -a $USER \<\n>  -s name \<\n>  -w supersecret \
$nu.user-autoload-dirs
$name
whoami
sys users 
security add-generic-password \<\n>  -a (whoami) \<\n>  -s name \<\n>  -w supersecret \
whoami
code tmp.nu
cd ..
rm secrets.nu
security add-generic-password -a $env.USER -s name -w supersecret<\n>
keybindings list
rm tmp.nu
$env.config.keybindings
code modules/load_bws_secrets.nu 
ghostty +list-keybinds 
cd
code .config/ghostty/config
brew list 
brew upgrade ghostty
ghostty --version 
ghostty +validate-config 
ghostty +show-config 
ghostty +show-config | b
ghostty +validate-config 
^open Desktop/
^open Desktop/ -t
z ghostty
ls
^open config  -t
hlp ^open
^open --help
hlp o
h o
o --help
default
default config
defaults write com.apple.LaunchServices/com.apple.launchservices.secure LSHandlers -array-add '{LSHandlerContentType=public.plain-text;LSHandlerRoleAll=com.microsoft.VSCode;}'
open config
open .
^open config 
^open .
open .
open config
open --help
defaults read com.apple.LaunchServices/com.apple.launchservices.secure LSHandlers
defaults read com.apple.LaunchServices/com.apple.launchservices.secure LSHandlers | rg vscode
defaults read com.apple.LaunchServices/com.apple.launchservices.secure LSHandlers | rg plain-text
defaults read com.apple.LaunchServices/com.apple.launchservices.secure LSHandlers
defaults read com.apple.LaunchServices/com.apple.launchservices.secure LSHandlers | b
ghostty +list-keybinds 
r
n
r
<\n><\n>keybindings default
keybindings default | expoler
keybindings default | explore 
keybindings list | explore 
keybindings listen | explore 
keybindings 
keybindings nu
keybindings list 
snu
r
<\n><\n>r
<\n><\n><\n><\n><\n>
t
retasht<\n><\n><\n><\n><\n>
ghostty +list-keybinds 
ghostty +list-actions 
ghostty +list-keybinds 
ghostty +show-config 
ghostty +show-config  | rg native
security find-generic-password -a $env.USER -s name -w
security list
security list-keychains
security create-keychain
security list-keychains
security find-generic-password -a $env.USER -s name -w
security delete-generic-password -a $env.USER -s name
security find-generic-password -a $env.USER -s name -w
delete-keychain secrets.keychain
security delete-keychain secrets.keychain
security add-generic-password -a $env.USER -s name -w supersecret
security find-generic-password -a $env.USER -s name -w
security list-keychains
security find-generic-password -s name -w
security help |bh
open Library/Application Support/nushell/.bws_token
open ~/Library/Application Support/nushell/.bws_token
Library/Application Support/nushell/.bws_token
z nushell
pwd
open .bws_token
open .bws_token | clipboard 
open .bws_token | clipboard copy 
open .bws_token | pbcopy 
security add-generic-password -s name -w 0.87d0ad72-9c76-4ecd-aeb0-b2ee0135ff52.vXvqjn0F9NvjdVW6JoGD4dgXpYTX4w:U+z/HzBKX01mvJAOWd/I2w==
security add-generic-password -s name -w 0.87d0ad72-9c76-4ecd-aeb0-b2ee0135ff52.vXvqjn0F9NvjdVW6JoGD4dgXpYTX4w:U+z/HzBKX01mvJAOWd/I2w== -a $env.USER
security list-passowrds
security list-passowrd
security list
security -d
security delete-generic-password -a $env.USER -s name
security find-generic-password -a $env.USER -s bws_token  -w
security find-generic-password -s bws_token  -w
security add-generic-password -a $env.USER -s bws_token -w 0.87d0ad72-9c76-4ecd-aeb0-b2ee0135ff52.vXvqjn0F9NvjdVW6JoGD4dgXpYTX4w:U+z/HzBKX01mvJAOWd/I2w==
security find-generic-password -a $env.USER -s bws_token  -w
security help |bh
z nushell
rm .bws_token
^security find-generic-password -a $env.USER -s bws_token  -w
^security find-generic-password -s bws_token  -w
^security find-generic-password
^security find-generic-password --help
^security find-generic-password help
$nu.os-info
ls
lzt
lztt
code Support/nushell/modules/load_bws_secrets.nu 
rm -rf Support/
ls
y
open bws_secrets.nu
bat bws_secrets.nu 
code bws_secrets.nu 
use bws_secrets.nu 
bws_secrets load-secrets 
bws_secrets load-secrets help
bws_secrets load-secrets --help
use bws_secrets.nu 
bws_secrets get-token --help
use bws_secrets.nu 
bws_secrets get-token --help
use bws_secrets.nu 
bws_secrets get-token --help
use bws_secrets.nu 
bws_secrets get-token --help
use bws_secrets.nu 
bws_secrets get-token --help
y
get-bws-token | into binary | each {|b| $b }
bws get-bws-token | into binary | each {|b| $b }
use bws_secrets.nu 
bws_secrets get-token | into binary | each {|b| $b }
which nu
/usr/bin/env/nu
!/usr/bin/env/nu
/usr/bin/env/nu -v
/usr/bin/env nu -v
ls /usr/bin/env
$env
$env | rg BW
$env | where BW in name
$env | rg BW
^security find-generic-password -s bws_tokedn -w | str trim
$env.LAST_EXIT_CODE
try {security find-generic-password -s name -w} catch {print "NO"}
ls 
ls | where name ~ nu
ls | where name ~= nu
ls | where name =~ nu
y
ls 
ls
custom_ls.nu ls
code custom_ls.nu 
custom_ls ls
custom_tools.nu ls
custom_tools ls
custom_tools
custom_ls
custom_ls ls
custom_ls ls 
ls
h ls
lsa
snu
lsa
ls
code README.md
y
code .env
nu cargo_upgrad_all.nu
nu "scripts/cargo_upgrade_all.nu"
run completions/
h start
start .
nu cargo_upgrade_all.nu
nu "./scripts/cargo_upgrade_all.nu"
./scripts/cargo_upgrade_all.nu
/usr/bin/env
/usr/bin/env | rg python
chmod
chmod x+ scripts/cargo_upgrade_all.nu 
chmod + scripts/cargo_upgrade_all.nu 
scripts/cargo_upgrade_all.nu 
h chmod
chmod + scripts/cargo_upgrade_all.nu -v
chmod +x scripts/cargo_upgrade_all.nu -v
scripts/cargo_upgrade_all.nu 
lst
lzt
man chmod
nu "scripts/"chmod +x -R scripts
chmod +x -R scripts
chmod +x -R scripts -v
chmod -x -R scripts -v
h
chmod +x -R scripts -v
chmod +x scripts/fzf_keybindings.nu  -v
chmod -x scripts/fzf_keybindings.nu  -v
chmod -x scripts/.DS_Store -v
lsa
cd scripts/
ls
lsa
cd ..
cda
code
code .
test
test -h
test --help
nu test
nu test.nu
nu "scripts/test.nu"
nu "test.nu"
chmod +x ~/.config/nushell/scripts/*.nu
$keybindings
$_keybindings
ls
git help
git --help
git help git
help modules
help bws_secrets
hlp bws_secrets
ps
which ps
^ps
which ^ps
bat README.md 
bat README.md --paging 
bat README.md --paging auto
bat README.md --paging never
bat README.md | bat
bat README.md | bat --match "apiVersion:yaml"
bat README.md | bat --match "apiVersion:yaml" -
bat README.md | bat --match "apiVersion:yaml" 
bat README.md | bat -- --match "apiVersion:yaml" 
use omnihelp.nu
use omnihelp.nu omnihelp
source omnihelp.nu
use omnihelp.nu omnihelp
use omnihelp.nu
omnihelp 
h omnihelp 
omnihelp ls
use omnihelp.nu
omnihelp main ls
omnihelp.nu ls
use omnihelp.nu
omnihelp ls
use omnihelp.nu
omnihelp omnihelp ls
use omnihelp.nu
omnihelp ls
omnihelp git
omnihelp git commit
h git commit
h git
alias h = omnihelp
h git
hh ls
hLs
h ls
hh --help
omnihelp --help
omnihelp::omnihelp
omnihelp::main
hh ls
hh omnihelp
h omnihelp
h hh
hh h
hh = h
hh == h
(hh == h)
hh hh
hh omnihelp
ominhelp omnihelp
omnihelp omnihelp
hh config.nu
help config.nu
y
help modules/bws_secrets.nu
help modules/init/custom_ls.nu
help modules/init/fzf_keybindings.nu
help init/fzf_keybindings.nu
help modules config.nu
help modules modules/bws_secrets.nu
help modules bws_secrets.nu
help modules bws_secrets
help bws_secrets
h bws_secrets
hh bws_secrets
help bws_secrets
hh bws_secrets
omnihelp bws_secrets
help ls
help git
help bws_secrets
scope modules
help modules completions/bitwarden-cli-completion.nu
help modules completions/bitwarden-cli-completion
use completions/
use completions/bitwarden-cli-completion.nu 
help modules completions/bitwarden-cli-completion
help modules bitwarden-cli-completion
help bws_secrets
h hh
hhHh
hh h
hh hlp
main 
h main
help main
scope commands
scope externs --help
scope aliases  --help
scope commands   --help
scope commands h
scope commands
1 or 2
true 
true | false
true || false
true or false
h hh
h hh | bh
h ls 
h ls | bh
help ls
help ls | bh
help ls | bh | str trim
help ls | bh | &in
help ls | bh | $in
help ls
hl ls
hLs
h ls
hh ls
hh git
hh ls
hh h
h print
hh print
hh bws_secrets
h bws_secrets
hh bws_secrets
h bws_secrets
hh print
$nu.scope.vars | where name == print
print | describe
1 | describe
"1" | describe
'1' | describe
bws_secrets get-token | describe
bws_secrets | describe
__zoxide_z  | describe
h describe
__zoxide_z  | describe --no-collect 
help $
help $env
help $env.__CF_USER_TEXT_ENCODING
help $env.config
help $env.config.bracketed_paste
scope
scope 
scope engine-stats 
scope modules 
h std
hh std
help std
help partial
help partials
scope modules 
scope modules  | explain 
scope modules  | explore 
scope externs 
err
error
error make
error make -h 
error -h
error "rr "
error make "rr "
error make {"rr "}
error make {|| "rr "}
z nushell
z nushe
code modules/bws_secrets.nu 
open modules/bws_secrets.nu
open modules/bws_secrets.nu | b
b modules/bws_secrets.nu 
error make {msg: "kk"}
error make {msg: "kk"} | $env.LAST_EXIT_CODE
$env.LAST_EXIT_CODE
^external arg1 | complete
^ls
h complete
h nu
hh std
h std
hh  ll
# No help found fallback<\n>    error $"No help found for command or module '($actual_cmd)'"q
hh l
l
scope externs 
version 
version check 
view 
view ls
view source 
view source bws_secrets
view source ls
view source cd
view source z
view source __zoxide_z
view source zsh
view ir completions/
view ir zsh
view ir nu
view ir cd
view ir dust
view ir ls
view ir ls --json 
> let abc = {|| echo 'hi' }; view source $abc<\n>{|| echo 'hi' }
let abc = {|| echo 'hi' }; view source $abc<\n>{|| echo 'hi' }
def hi [] { echo 'Hi!' }; view source hi<\n>def hi [] { echo 'Hi!' }
def hi [] { echo 'Hi!' }; view source hi
let abc = {|| echo 'hi' }; view source $abc
def test [a?:any --b:int ...rest:string] { echo 'test' }; view source test
alias hello = echo hi; view source hello
view source cd
> some | pipeline | or | variable | debug --raw; view span 1 2
some | pipeline | or | variable | debug --raw; view span 1 2
any | pipeline | or | variable | debug --raw; view span 1 2
hh l
hh from 
hh from yml
help from yml
hh from yml
scope aliases 
h zi
hh zi
scope
scope variables 
help $zoxide_completer
help zoxide_completer
help $api
help $email
help $cyan
help $env
help $env.HF_TOKEN
scope variables 
$ha = print
let $ha = print
$ha
$ha 2
$ha = 22
let ha = print
ha
$ha
$ha 2
$ha | 2
let ha = "print"
ha
$ha
help $ha
hh $ha
print $ha
help 1
help "aa"
h 1
hh security
help .env
bat .env 
rm .env
security help
security --help
hh git lol
hh git 
hh ls
hh cd
hh ls
hh git
hh zsh
hh eza
hh security
hh .l
metadata 
metadata $.env
metadata $.env | explore 
hh .l
hh security
zsh --help
zsh --help | bat -l help
zsh --help |Bh
zsh --help | bh
hh ls
hh zsh
hh zsh z
hh zsh z ldwldw
(hh == h).span
("bb").span
($env).span
(metadata $env).span
(metadata 1).span
nu reload
reload
hh zsh z ldwldw
help help
help aliases
help help aliases
help help commands
help commands --find ls
help commands --find bws_secrets
help commands --find nu
help commands --find zsh
help externs  --find zsh
help externs   --find zsh
help externs
help externs | rg zsh
hh zsh z ldwldw
view source help
bat completions/bitwarden-cli-completion.nu 
security
security help
hh z
hh eza
hh eza | bh
hh eza
h git
h git rtsdlwl
hh eza
hh ez
hh ls 
hh ls  ldd
hh ls ldd
hh ls -a
hh (ls -a)
hh "ls -a"
hh zsh
ls 
ls -
ls -a
ls -b
scope externs 
scope externs -h
eza in (scope externs | get name)
"eza" in (scope externs | get name)
"eza" in (scope commands | get name)
eza | describe 
ls | describe 
zsh | describe 
scope
scope commands 
scope commands | rg nu
scope commands | rg eza
scope commands | rg z
eza
scope commands | rg lzt
scope commands
scope bws_secrets
scope ls
scope variables 
scope externs 
scope modules 
scope modules bws_secrets
scope modules bws_secrets.nu
scope modules --find bws_secrets
scope --help 
scope atiases --help 
scope aliases --help 
scope commands  --help 
scope engine-stats   --help 
scope modules  --help 
scope variables  --help 
(scope variables | get name)  --help 
help 
help |bat -l nu
sys users 
sys host 
help escapes 
help help
help --find char
help chars
help str
help str char
help str
h str
help commands
help commands | rg rg
help commands | rg eza
hh zsh
hh ls
hh wz
hh bw
help bw
bw --help
hh z
hh eza
hh h
h hh
hh hh
hlep hh
help h
nu --help
du --help
dust --help
dust --help | bh
hh du
hh dust
hh dua
hh lzt
hh lz
hh lzt
hh eza
scope commands | rg bw
nu-complete bw config-settings 
nu-complete bw
help nu
man nu
hh nu
run-external "echo"
^echo
run-external "echo"
> run-external "echo" "-n" "hello" | split chars
run-external "echo" "-n" "hello" | split chars
plugin use -h 
h plugin config
h plugin use
help def
help ls
h git log
hh git log
help git log
help commands ls
help commands bws_secrets
help modules bws_secrets
help modules std
help modules ls
help ls
help commands
help commands __zoxide_z
help commands git
h security
hh security
security
security --help
security help
security help leaks
security leaks
h security leaks
h ls
hh ls
str camel-case 
str camel-case  --help
help str camelCase
help str camelcase
help str camel-case
security help
dua i 
help dua
dua --help
dua  
dua interactive 
dua interactive --help
h str
hh str
hh str camel-case
h ls 
hh ls
hh bws_secrets
hh bws_secrets load-all
hh ls
rungs --help
hh ls
help view source
vies source ls
view source ls
view source du
view source ^du
view source bws_secrets
to nuon 
1 to nuon 
"1" to nuon 
"1"  |  to nuon 
1  |  to nuon 
nu
ls
run-external lss
run-external ls
run-external eza
run-external z
run-external --help
bws_secrets get-token --help
bws_secrets --help
help def --wrapped
help def 
snu
hh def
hh ls
hhLs
hh ls
help do
help 
hel help
help help
help def
help escapes 
help escapes "\)"
help operators 
help operators "|"
help in
nufmt
which nufmt
cargo update nufmt
cargo upgrade nufmt
h nufmt
hh nufmt
help nufmt
nufmt --help
nu -c 
nu -c "ls | to nuon"
nu -c "ls | to nuon" | from nuon
nu -c "ls --help | to nuon" | from nuon
nu -c "ls --help | to nuon" | from nuon | bh
nu -c "ls --help | to nuon" | from nuon | bat
nu -c "ls --help | to nuon" | from nuon | bat -l help
code completions/bitwarden-cli-completion.nu
code modules/bws_secrets.nu
fd bws_secrets.nu
fd --help
h
y
nu
fd --help
$env.BWS_ACCESS_TOKEN
z nush
z nested
y
bws_secrets load-all
bws_secrets get-token 
bws_secrets get-token | bws_secrets load-secrets $in
$env.BW_CLIENTID
hh git
hh git commit
hh git commit | b -p
hh git commit
hh bws_secrets
hh bws_secrets load-all
hh dua
hh dua interactive
h security
hh security
hh security help
hh security leaks
h security leaks
hh security leaks
hh security leaks | bh
hh security leaks | b
hh security leaks
hh security str
hh str
hh str ledwa
hh str trim
hh dua interactive
h lz
hh lz
hh lzt
hh lz
hh lzt
hh in
help in
h lzt
help lzt
hh lz
hhLs
hh ls
hh git
hh git commit
hh git
git commit -h
git commit --help
git --help
hh git
hh git -a
hh git help git
hh git help -a
hh git help
git help git
hh git help git
hh l
hh du
hh duo
hh dua
hh dua help
hh dua aggregate
hh z
hh zi
hh y
hh bw
hh bws
hh bws_secrets
hh bws_secrets load-all
hh bws_secrets help
bws_secrets help
use help
help use
use --help
security leaks help
dua help interactive 
dua help interactive README.md 
dua help interactive
dua interactive --help
hh ls
hh ls a
hh ls -a
hh ls a
dua r
dua ldwz
dust ldaladw
lz
hh lz
hh ll
hh lz
hh lt
man security
security help
man git
man git commit
help scripts/cargo_upgrade_all.nu
hh scripts/cargo_upgrade_all.nu
y
hh scripts/test.nu
hh scripts/cargo_upgrade_all.nu
git help git
git help git commit
security help leaks
security leaks
security leaks t
man security leaks
security help leaks
security help leaks | bh
security help | bh
security | bh
hh security
hh security leaks
security leaks --help
hh security
hh security leaks
hh git
hh ls
hh git
security help
security --help
security leaks --help
security help leaks
security leaks help
hh security
hh git
hh git commit
git commit --help
git help commit
hh git commit
help ls
help ls a
hh k
hh lt
hh bwz
hh bwg
hh bwsz
ezk
hh ezk
hh bzz
hh bwz
help ls s
hh ls s
hh "ls s"
hh "ls sdlwd"
hh "git commit"
help "ls"
help "ls t"
help "ls a"
hh "ls a"
hh ls a
help "bws_secrets"
help "bws_secrets load-all"
hh "bws_secrets load-all"
hh "bws_secrets<\n>"
hh "bws_secrets"
hh ls
hh ls a
hh "bws_secrets load-all"
hh bws_secrets load-all
hh bws_secretsload-all
hh bws_secrets load-all
hh bws_secrets load-alld
hh bws_secrets load-all d
hh ls
debug " "
debug
" "|debug
" "|debug --raw-value 
" " | debug --raw-value 
" \n" | debug --raw-value 
"\t \n" | debug --raw-value 
"\t \n" | debug
hh ls
hh ls e
hh ls a
not true
hh ls a
hh ls
hh ls 
hh ls -a
help ls -a
hh git commit
hh sr
hh str
hh str dlw
hh str trim
hh bws_secrets load-all d
hh bws_secrets load-all
hh bws_secrets
hh dua
hh dua aggregate
h eza
h lg
hh lg
hh lz
hh lzt
hh ls
qhh lz
hh lz
def resolve-alias [cmd: string] {<\n>        mut current = $cmd<\n>        mut expansion = (scope aliases | where name == $current | get -i 0.expansion)<\n>        while $expansion != null {<\n>            $current = ($expansion | split row ' ' | get 0)<\n>            $expansion = (scope aliases | where name == $current | get -i 0.expansion)<\n>        }<\n>        return $current<\n>    }
resolve-alias "lz"
resolve-alias "lzt"
resolve-alias "ls"
def resolve-alias [cmd: string] {<\n>        mut current = $cmd<\n>        mut expansion = (scope aliases | where name == $current | get -i 0.expansion)<\n>        while $expansion != null {<\n>            print $expansion<\n>            $current = ($expansion | split row ' ' | get 0)<\n>            $expansion = (scope aliases | where name == $current | get -i 0.expansion)<\n>        }<\n>        return $current<\n>    }   
resolve-alias "ls"
resolve-alias "lzt"
resolve-alias "lztt"
resolve-alias "lz"
hh lz
hh lzt
hh lz
hh lzt
help lzt
help lz
y
hh git
hh git commit
hh security
hh security leaks
hh security leaks | b
hh security leaks | bh
security leaks --help
security help leaks
lz --absolute 
$external_completer ls
$external_completer | ls
ls | $external_completer
ls s | $external_completer
[ls s] | $external_completer
cargo list
cargo --list
which nufmt
cargo uninstall nufmt
nufmt --help
def ls []
def ls [] { ls}
ls
def resolve-alias [cmd: string] {<\n>        mut current = $cmd<\n>        mut chain = [$current]<\n><\n>        mut expansion = (scope aliases | where name == $current | get -i 0.expansion)<\n><\n>        while $expansion != null {<\n>            $current = ($expansion | split row ' ' | get 0)<\n>            $chain ++= [$current]<\n><\n>            $expansion = (scope aliases | where name == $current | get -i 0.expansion)<\n>        }<\n>        <\n>        $current<\n>    }
resolve-alias "lz"
resolve-alias "lzt"
def resolve-alias [cmd: string] {<\n>        mut current = $cmd<\n>        mut chain = [$current]<\n><\n>        mut expansion = (scope aliases | where name == $current | get -i 0.expansion)<\n><\n>        while $expansion != null {<\n>            $current = ($expansion | split row ' ' | get 0)<\n>            $chain ++= [$current]<\n><\n>            $expansion = (scope aliases | where name == $current | get -i 0.expansion)<\n>        }<\n>        <\n>        $chain<\n>    }
resolve-alias "lzt"
resolve-alias "lztdef resolve-alias [cmd: string] {<\n>        mut current = $cmd<\n>        mut chain = []<\n><\n>        mut expansion = $current<\n><\n>        while $expansion != null {<\n>            $current = ($expansion | split row ' ' | get 0)<\n>            $chain ++= [$current]<\n><\n>            $expansion = (scope aliases | where name == $current | get -i 0.expansion)<\n>        }<\n>        <\n>        $chain<\n>    }"
def resolve-alias [cmd: string] {<\n>        mut current = $cmd<\n>        mut chain = []<\n><\n>        mut expansion = $current<\n><\n>        while $expansion != null {<\n>            $current = ($expansion | split row ' ' | get 0)<\n>            $chain ++= [$current]<\n><\n>            $expansion = (scope aliases | where name == $current | get -i 0.expansion)<\n>        }<\n>        <\n>        $chain<\n>    }
resolve-alias "lzt"
alias xxxx = bws_secrets
help xxxx
xxxx load-all
alias xxxxx = seawhledwoh
scope commands | rg xxxx
scope aliases | rg xxxx
help xxxxx
help ls
help ls | bh
help drop
let l = [1,2,3]
l | drop 1
$l | drop 1
$l | drop 1; $l
$l | drop 1
$l | drop 0
$l | drop -1
$l | drop 
$l | drop
hh ls
hh lsa
hh lsa | do
hh lsa | ""
do hh lsa
do (hh lsa)
hh lsa | ""
hh ls
u
hh ls
hh lz
"1" "1"
"1" + "1"
hh lz
lzt
hh lzt
hh lz
y
cd ...
help alias
help lz
hh alias
hh ls
hh lz
x = hh ls
let x = hh ls
x
$x
let x = (hh ls)
$x
let x = (hh lz)
help lz
x = help lz
$x = help lz
let x = help lz
x
$x
degug | $x
$x | debug
$x | debug --raw-value 
$x | bh
$x | b
$x | bh
let x = help lz
x
$x
no
let x = help lz
$x
let x = (help lz)
$x
let x = (help lz)
$x
def resolve-alias-chain [cmd: string] {<\n>        mut current = $cmd<\n>        mut expansion = $current<\n><\n>        mut chain = []<\n>        while $expansion != null {<\n>            $current = ($expansion | split row ' ' | get 0)<\n>            $chain ++= [$current]<\n><\n>            $expansion = (scope aliases | where name == $current | get -i 0.expansion)<\n>        }<\n>        <\n>        $chain<\n>    }
resolve-alias-chain "ls"
resolve-alias-chain "ls a"
resolve-alias-chain "lz"
resolve-alias-chain "lz" | let aliases_help = (<\n>        $in<\n>        | drop<\n>        | each {|a|<\n>            $"# Alias: ($a)\n" + (help $a)<\n>        }<\n>        | str join "\n\n"<\n>    )
resolve-alias-chain "lz" | (let aliases_help = (<\n>        $in<\n>        | drop<\n>        | each {|a|<\n>            $"# Alias: ($a)\n" + (help $a)<\n>        }<\n>        | str join "\n\n"<\n>    ))
$aliases_help
resolve-alias-chain "lz" | (let aliases_help = (<\n>        $in<\n>        | drop<\n>        | each {|a|<\n>            $"# Alias: ($a)\n" + (help $a)<\n>        }<\n>        | str join "\n\n"<\n>    )) | $aliases_help
resolve-alias-chain "lz" |<\n>        $in<\n>        | drop<\n>        | each {|a|<\n>            $"# Alias: ($a)\n" + (help $a)<\n>        }<\n>        | str join "\n\n"<\n>    )
resolve-alias-chain "lz" |<\n>        $in<\n>        | drop<\n>        | each {|a|<\n>            $"# Alias: ($a)\n" + (help $a)<\n>        }<\n>        | str join "\n\n"<\n>    
resolve-alias-chain "lzt" |<\n>        $in<\n>        | drop<\n>        | each {|a|<\n>            $"# Alias: ($a)\n" + (help $a)<\n>        }<\n>        | str join "\n\n"<\n>    
hh lzt
resolve-alias-chain "lzt" |<\n>        $in<\n>        | drop<\n>        | each {|a|<\n>            $"# Alias: ($a)\n" + (help $a)<\n>        }<\n>        | str join "\n\n"<\n>    )
resolve-alias-chain "lzt" |<\n>        $in<\n>        | drop<\n>        | each {|a|<\n>            $"# Alias: ($a)\n" + (help $a)<\n>        }<\n>        | str join "\n\n"<\n>    
hh lzt
qu
hh lzt
(hh lzt).1
(hh lzt).1| bh
(hh lzt).1| bh | $in
$x | debug --raw-value 
help ll | debug --raw-value 
hh ll
help bat
hh bat
hh lz
qu
hh lz
hh bat
hh lz
hh bat
hh lz
hh bat
hh lz
qu
hh lz
eza --help | bh
eza --help | bh --paging=never
hh lz
hh ls
hh ll
hh ls a
hh lz a
hh lz aldd
hh lzt
hh dua interactive
hh ll
hh lz
hh lz | $in
(hh lz) | $in
hh lz | $in
hh lz
hh lz | $in
hh lz
lzt
hh lzt
hh ansi
hh ansi reset
hh ansi red
hh ansi
(ansi red) "aa"
"(ansi red) aa (ansi reset)"
$"(ansi red) aa (ansi reset)"
$"(ansi hi) aa (ansi reset)"
$"(ansi pi) aa (ansi reset)"
hh ansi
hh lzt
help ansi
hh espcape
hh espcapes
hh escapes
hh escape
help escapes
hh lzt
h str trim
hh str trim
hh lzt
no
hh lzt
hh lzt t
hh dua interactive
hh dua
hh lzt t
hh lzt
hh ll
hh ls
hh -
hh ls
hh lz
hh str
hh str trim
hh ls a
hh bws_secrets
hh ls a
hh ls
hh bws_secrets
hh ansi
hh |<\n>
help 1
help int
help 1 to int
help to
hhto
hh to
hh bws_secrets load-all
scope commands | rg load
scope commands | where name =~ load
hh dua
hh dua interactive
hh dua interactive -t
hh dua interactive --t
hh "dua interactive"
hh zea
hh eza
hh ezt
hh ezd
hh ez'<\n>'
hh ezo
hh ezal
hh lz
hh lz xxx
hh lzt
hh git
hh git commit
hh security
hh security leaks
hh security leaks | bh
hh in
help in
code modules/init/custom_ls.nu 
resolve-alias-chain  | hh
resolve-alias-chain --help
help commands
resolve-alias-chain --help
help commands
help commands | where name =~ resolve
help commands | where name =~ resolve | explore 
ls | hh
hh git commit
hh | git commit
hh git commit
hh lzt
omnihelp bws_secrets
omnihelp "bws_secrets"
"bws_secrets" | hh
hhLs
hh ls
ls | resolve-alias-chain
resolve-alias-chain ls
resolve-alias-chain "ls"
resolve-alias-chain ls
omnihelp "bws_secrets"
omnihelp bws_secrets
omnihelp bws_secrets load-all
omnihelp "bws_secrets load-all"
omnihelp bws_secrets load-all
code modules/bws_secrets.nu
bws_secrets load-secrets 
bws_secrets load-secrets (bws_secrets get-token)
hh record
help record
hh ls
hh lz
hh dua interactive
hh scripts/test.nu
hh scripts/cargo_upgrade_all.nu
"." | ls
ls .
ls .DS_Store
hh dua interactive
dua | hh
"dua" | hh
qu
"dua" | hh
dua | hh
ls | hh
"ls" | hh
hh 
"ls" | hh
hh | lzt
hh lzt
h h
omnihelp git commit
ll --all 
$external_completer "ls"
$external_completer | "ls"
$external_completer | "lz"
$external_completer | "lzt"
lastn
$external_completer | "lzt"
$external_completer | "lz"
$external_completer | ["lz"]
$external_completer | ["lzt"]
resolve-alias-chain "ls"
resolve-alias-chain "lz"
"ls" | $external_completer
"ls" | $external_completer | $in
("ls" | $external_completer)
("ls" | $external_completer | "ls")
("ls" | $external_completer) | "ls"
"ls" | $external_completer | $in
scope variables 
do $external_completer ls
do $external_completer [ls]
do $external_completer [lz]
do $external_completer [lz -]
do $external_completer [lz]
do $external_completer [lz t]
do $external_completer [lz ldw]
hh get
h get
do $external_completer [ll]
do $external_completer [dua]
do $external_completer [dua interactive]
do $external_completer [dua i]
resolve-alias-chain "lz"completions/
resolve-alias-chain "lz"
resolve-alias-chain "lzt"
hh lzt
h lzt
h split
split words "dd ddd ddd"
"dd ddd ddd" | split words
"dd ddd ddd" | split words | first
h lzt
h lz
resolve-alias-chain "lzt"
resolve-alias-chain "lzt" | first | split words | first
resolve-alias-chain "lzt" | second | split words | first
resolve-alias-chain "lzt" | get 0 | split words | first
resolve-alias-chain "lzt" | get 1 | split words | first
resolve-alias-chain "lzt" | get 2 | split words | first
resolve-alias-chain "lzt" | get  | split words | first
resolve-alias-chain "lzt" | get 3 | split words | first
resolve-alias-chain "lzt" | get 2 | split words | first
resolve-alias-chain "lzt" | get 2 | split words | first | debug --raw-value 
qu
h lz
help each
h lz
h lzt
h ll
h git commit
h dua i
h lzt
resolve-alias-chain "lzt"
$external_completer | ["lzt"]
$external_completer ["lzt"]
do $external_completer ["lzt"]
do $external_completer ["lzt tt"]
do $external_completer ["ll "]
do $external_completer ["ll"]
do $external_completer ["lz"]
resolve-alias-chain "lztt"
resolve-alias-chain "lzt"
resolve-alias-chain "lzr"
resolve-alias-chain "lzrr"
lzrr --recurse
lzrr
lz --recurse 
lzrr
resolve-alias-chain "lzrr"
lzrr --accessed 
lzrr README.md 
lzr README.md data/
which topiary-cli
$env.XDG_CONFIG_HOME
cargo list
cd ~/.config/
ls
# e.g. installing with cargo<\n>cargo install --git https://github.com/tweag/topiary topiary-cli
lsw to
lsw fish
h lsw
lsa | where name =~ fish
lsw fish
lsw | fish
lsw fish
lsw to
h lsw
h lsf
which topiary
which topiary-cli
lsf top
ls /Users/julian/.cargo/bin/
ps
ps | explain
ps | describe
ps | sort-by mem | reverse
cd ~/.config/topiary
mkdir ~/.config/topiary
cd ~/.config/topiary
git clone https://github.com/blindFS/topiary-nushell
path join topia lang
xx | path join topia lang
"xx" | path join topia lang
$HOME
$env.HOME
~
/Users/julian
$nu.config-path
h path join
ls
pwd
z nushell
ls
y
pwd | pbcopy
"/Users/julian/Library/Application Support/nushell/modules"
format.nu "/Users/julian/Library/Application Support/nushell/modules.from_dotenv.nu"
use format.nu
format.nu "/Users/julian/Library/Application Support/nushell/modules.from_dotenv.nu"
format "/Users/julian/Library/Application Support/nushell/modules.from_dotenv.nu"
topiary format "/Users/julian/Library/Application Support/nushell/modules.from_dotenv.nu"
ls "Users/julian/Library/Application Support/nushell/modules.from_dotenv.nu"
ls "Users/julian/Library/Application Support/nushell/modules"
ls "Users/julian/Library/Application Support/nushell/modules/"
ls "Users/julian/Library/Application\ Support/nushell/modules/"
ls "Users/julian/Library/Application\ Support/nushell/modules"
ls `~/Library/Application Support/nushell/modules/from_dotenv.nu`
ls `~/Library/Application Support/nushell/modules`
$in
topiary format `~/Library/Application Support/nushell/modules`
topiary format `~/Library/Application Support/nushell/modules` -v
y
fd languages.ncl
~
fd languages.ncl
fd languages
zi
ls
lsw trash
lsf trash
lsf languages
zi
cd ..
ls
rm topiary-nushell/
rm -rf topiary-nushell/
# e.g. to `$env.XDG_CONFIG_HOME/topiary`<\n>git clone https://github.com/blindFS/topiary-nushell .
ls
nu
cd
z topiary
ls
topiary format `~/Library/Application Support/nushell/modules/from_dotenv.nu` -v
pwd
$env.TOPIARY_CONFIG_DIR
$env.HOME_CONFIG
$env.HOME
$env.HOME_CONFIG | path join topiary languages
($env.HOME_CONFIG) | path join topiary languages
$"$env.HOME_CONFIG" | path join topiary languages
$"$(env.HOME_CONFIG)" | path join topiary languages
$"($env.HOME_CONFIG)" | path join topiary languages
$env.HOME_CONFIG = $env.HOME | path join .config
$env.HOME_CONFIG = "$env.HOME/.config"<\n>
$env.HOME | path join .config
$env.HOME
$env.HOME_CONFIG
$env.TOPIARY_CONFIG_DIR
topiary format `~/Library/Application Support/nushell/modules/from_dotenv.nu` -v
$env.TOPIARY_LANGUAGE_DIR
$env.TOPIARY_CONFIG_DIR
ls $env.TOPIARY_CONFIG_DIR
ls $env.TOPIARY_CONFIG_FILE
topiary format `~/Library/Application Support/nushell/modules/from_dotenv.nu` -v
bat `~/Library/Application Support/nushell/modules/from_dotenv.nu` -v
bat `~/Library/Application Support/nushell/modules/from_dotenv.nu` 
bat `~/Library/Application Support/nushell/modules/from_dotenv.nu`  | topiary format
bat `~/Library/Application Support/nushell/modules/from_dotenv.nu`  | topiary format --language nu
bat --diff 
hBat
h bat
h delta
z modules
ls
h topiary format
bat bws_secrets.nu | topiary format --language=nu | save 
bat bws_secrets.nu | topiary format --language=nu | save tpm.nu
ls
code tpm.nu 
z modules
code bws_secrets.nu 
topiary --help
code $env.TOPIARY_CONFIG_DIR
code $env.TOPIARY_CONFIG_FILE
cargo install nickel-lang-lsp
delta tpm.nu bws_secrets.nu 
bat bws_secrets.nu | topiary format --language=nu | save tpm.nu
bat bws_secrets.nu | topiary format --language=nu | save tpm.nu -f
y
$env | rg BW
y
z modules
y
topiary format from_dotenv.nu
cd ..
topiary format .
topiary format . -v
delta modules/from_dotenv.nu modules_1/from_dotenv.nu 
delta modules/omnihelp.nu  modules_1/omnihelp.nu 
code omnihelp.nu 
delta modules/init/custom_ls.nu modules_1/init/custom_ls.nu 
delta modules/init/fzf_keybindings.nu  modules_1/init/fzf_keybindings.nu 
$env.TOPIARY_CONFIG_DIR
$env.TOPIARY_CONFIG_FILE
h lzt
h lzt
$env.Q_NEW_SESSION
$env.TOPIARY_CONFIG_FILE
ls
ls
$env.TOPIARY_CONFIG_FILE
ls
$env.TOPIARY_CONFIG_FILE
$env.TOPIARY_LANGUAGE_DIR
bat /Users/julian/.config/topiary/languages
bat /Users/julian/.config/topiary/languages/
bat /Users/julian/.config/topiary/languages/nu.scm 
bat /Users/julian/.config/topiary/languages.ncl  
which topiary
which topiary-cli
which topiary
which topiary | first
which topiary | first.0
which topiary | first | first
which topiary | first
which topiary | describe 
which topiary | select path | first
which topiary
which topiary | first | select path
which topiary | first
which topiary | first | get path
which topiary | first | get path | pwbcopy
which topiary | first | get path | pbcopy 
which topiary | first | get path
z down
code test.nu
code .
$env.TOPIARY_CONFIG_FILE
y
topiary format . -v
y
topiary format ../config.nu
delta ../config_1.nu ../config.nu 
gl
z nested
gl
topiary format ../config.nu
topiary format config.nu
gl
$env | reject config | transpose key val | each {|r| echo $"$env.($r.key) = '($r.val)'"} | str join (char nl)
cd down
z down
code env_var_login_shel
code env_var_nushell
code config.nu 
code test.nu
topiary format test.nu
y
topiary format completions/bitwarden-cli-completion.nu
z nushe
topiary format vendor/autoload/starship.nu
topiary format modules/init/custom_ls.nu
topiary format modules/omnihelp.nu
h h
h git commit
y
topiary format modules/init/custom_ls.nu
topiary format init/custom_ls.nu
nf
ls 
code test.nu 
code ~/Downloads/test.nu
y
cd ..
rg ",\n"
code modules/init/custom_ls.nu 
rg ",\n" -U
rg ",\n" ", " -U
rm config_1.nu
rg ",\n|, " -U
{|a b| print a b}
do {|a b| print a b} "1" 1
do {|a b| print $a $b} "1" 1
do {|a, b| print $a $b} "1" 1
<\n>{|foo bar, baz| print $foo $bar $baz }  1 2 3
do<\n>{|foo bar, baz| print $foo $bar $baz }  1 2 3
do {|foo bar, baz| print $foo $bar $baz }  1 2 3
do {|foo bar, baz| print $foo $bar $baz }  1, 2 3
do {|foo bar, baz| print $foo $bar $baz }  1 2 3
code modules/init/custom_ls.nu
brew install procs
brew upgrade
procs
h sed
h procs
tokei
brew install tokei
brew install onefetch
h onefetch
z dev
onefetch
cd musicbrainz2notion/
onefetch
tokei
h tokey
h tokei
h tokei -l nu
tokei -l nu
tokei -l=nu
tokei -l
tokei
cd ..
tokei
cd nushell/
cd modules/
tokei
ls
cd ..
..
nushell/
tokei
z nested
tokei
onefetch
hyperfine 'sleep 0.3'
brew install hyperfine
hyperfine 'sleep 0.3'
hyperfine 'sleep 0.3' --warmup
hyperfine 'sleep 0.3' --warmup 1
hyperfine "bws_secrets get-token"
hyperfine "bws_secrets get-token" --show-output
bws_secrets get-token
hyperfine "bws_secrets get-token" --show-output -S nu
hyperfine "ls"
hyperfine "ls" -S nu
hyperfine "ls" -N
hyperfine -N --warmup 1 "ls"
hyperfine -N --warmup 2 "ls"
hyperfine -N --warmup 5 "ls"
hyperfine -N --warmup 10 "ls"
hyperfine -N --warmup 20 "ls"
ls
rm test.nu
lzt
hyperfine -N --warmup 100 "ls"
hyperfine -N --warmup 100 "bws_secrets get-token"
bws_secrets get-token 
hyperfine -N --warmup 100 "bws_secrets get-token"
hyperfine -S nu --warmup 100 "bws_secrets get-token"
hyperfine -S nu --warmup 100 "ls"
code config.nu 
hyperfine -S nu --warmup 1000 "ls"
hyperfine -S nu --warmup 100 "lz"
hyperfine -S nu --warmup 100 "lz" --show-output
hyperfine -S nu --warmup 100 "eza" --show-output
hyperfine -S nu --warmup 100 "eza"
brew install bottom
h hyperfine
h bottom
h btm
bt
lz
rg "lol"
rg "py"
btm
h btm
open
^open
^open .
h
y
scope externs 
$nu.config-path
$nu.data-dir
z nushl
z nush
zi
cd completions/
ls | where name ends-with ".nu" | get name
h str
ends-with
ls | where name ends-with ".nu" | get name | each print $in
ls | where name ends-with ".nu" | get name | each {|x| print x}
ls | where name ends-with ".nu" | get name | each {|x| print $x}
source .
cd ..
source completions/
source completions
use completions
y
use .
source .
completions
cd ..
source completions
use completions
completions 
h completions
source competions
use completions *
ls | where name ends-with ".nu" | get name | each {|x| print $x}
cd completions/
ls | where name ends-with ".nu" | get name | each {|x| print $x}
ls | where name ends-with ".nu" | get name | each {|x| source $x}
nu
hyperfine "ls"
scope aliases
z nush
h hyperfine
scope externs 
y
y
bw confirm attachment --help 
h btm
btm --help
tldr 
h tldr
tldr git
brew install tealdeer
which tlrc
brew list
scope aliases
h hyperfini
h hyperfine
hyperfine --help
help hyperfine
hyperfine "ls"
brew list tlrc
brew uses --installed tlrc
brew uninstall tlrc
brew list
cd /
fd tlrc
brew install tealdeer
tldr brew
tealdeer brew
tldr brew
tldr tldr
tldr --show-paths
tldr --update
tldr tldr
tldr tealdeer
tldr git
tldr git commit
tldr ls
tldr du
h tldr
tldr --seed-config
cd ...
ls
code config.toml 
tldr tldr
tldr tealdeer
brew install bandwhich
bandwhich
sudo
sudo bandwhich 
zi
cd 
zi
cd
zi star
zi
$nu.user-autoload-dirs
zi
cd /
zi
cd
fd starship
z nush
cwd ~/.config/starship
cd ~/.config/starship
y
cd
zi
ls
code .
git status
git pul
git pull
code ~/Downloads/test.nu
z nush
code config.nu 
$env.foo = $env.bar = "baz"
$env | rg foo
$env | rg bar
$env | rg foo
$env.foo = $env.bar = "baz"; $env.foo
$env.foo = $env.bar = "baz"; $env.bar
$env.foo = $env.bar = "baz"; $env.foo is null
$env.foo = $env.bar = "baz"; $env.foo == null
let $foo = let $bar = "baz"
let $foo = let $bar = "baz"; $foo
let $foo = let $bar = "baz"; $bar
let $foo = let $bar = "baz"; $foo
let $foo = let $bar = "baz"; $foo == null
let $foo = let $bar = "baz"; $foo == none
let $foo = let $bar = "baz"; $foo == nothing
cd
rg [character]
rg "[character]"
ripgrep "[character]"
ripgrep "\[character\]" --case-sensitive 
ripgrep "[character]" --case-sensitive 
tldr rg
rg "# Inserts a blank line between shell prompts"
cd
ripgrep "[character]" --case-sensitive -F
$user-autoload-dirs
$env.user-autoload-dirs
$env.USER
scope variables 
$nu.user-autoload-dirs
$nu.vendor-autoload-dirs
y
mkdir autoload
sort [1 a b]
[1 a b] | sort
y
scope externs 
z nu
bat autoload/btm.nu 
btm --default_cpu_entry all
tree
$nu.user-autoload-dirs
$nu.data-dir
rg "# Inserts a blank line between shell prompts"
rg "# Inserts a blank line between shell prompts" -F
rg "# Inserts a blank line between shell prompts" .config -F
rg "# Inserts a blank line between shell prompts" "Library/Application Support/" -F
$nu.user-autoload-dirs
$nu.user-autoload-dirs ++= "1"
bitwarden-cli-completions autoload/
us bitwarden-cli-completions *
use bitwarden-cli-completions *
$NU_LIB_DIRS
btm 
$NU_USER_AUTOLOAD_DIRS
$nu.user-autoload-dirs
$NU_USER_AUTOLOAD_DIRS = $nu.user-autoload-dirs
let NU_USER_AUTOLOAD_DIRS = $nu.user-autoload-dirs
let NU_USER_AUTOLOAD_DIRS = $nu.user-autoload-dirs ++ ($nu.data-dir | path join completions)
let NU_USER_AUTOLOAD_DIRS = $nu.user-autoload-dirs ++ [$nu.data-dir | path join completions]
$NU_USER_AUTOLOAD_DIRS
let NU_USER_AUTOLOAD_DIRS = $nu.user-autoload-dirs ++ [($nu.data-dir | path join completions)]
$NU_USER_AUTOLOAD_DIRS
$nu.user-autoload-dirs
$NU_USER_AUTOLOAD_DIRS
let NU_USER_AUTOLOAD_DIRS = $nu.user-autoload-dirs ++ [($nu.data-dir | path join completions)]
$NU_USER_AUTOLOAD_DIRS
$env.NU_USER_AUTOLOAD_DIRS = $nu.user-autoload-dirs ++ [($nu.data-dir | path join completions)]
$env.NU_USER_AUTOLOAD_DIRS
$env.NU_USER_AUTOLOAD_DIRS = $nu.user-autoload-dirs ++ [($nu.data-dir | path join completions)]
$env.NU_USER_AUTOLOAD_DIRS
$NU_USER_AUTOLOAD_DIRS
$nu.user-autoload-dirs
starship config 
cd
cd .config/
ls
z compl
ls | where name ends-with ".nu" | get name | each {|x| source $x}
ls | where name ends-with ".nu" | get name | each {|x| print x}
ls | where name ends-with ".nu" | get name | each {|x| print $x}
h touch
ls | where name ends-with ".nu" | get name | each {|x| $"export use ($x)"}
ls | where name ends-with ".nu" | get name | each {|x| print $xd}
h join
str join
ls | where name ends-with ".nu" | get name | each {|x| $"export use ($x)"} | join 
ls | where name ends-with ".nu" | get name | each {|x| $"export use ($x)"} | join "\n"
ls | where name ends-with ".nu" | get name | each {|x| $"export use ($x)"} | str join "\n"
ls | where name ends-with ".nu" | get name | each {|x| $"export use ($x)"} | str join "\n" | save mod.nu
ls | where name ends-with ".nu" | get name | each {|x| $"export use ($x)"} | str join "\n" | save mod.nu -f
ls $env.NU_COMPLETIONS_DIR | where name ends-with ".nu" | get name | each {|x| $"export use ($x)"} | str join "\n" | save mod.nu -f
"/Users/julian/Library/Application Support/nushell/completions/mod.nu" | path last
h path
"/Users/julian/Library/Application Support/nushell/completions/mod.nu" | path basename
ls $env.NU_COMPLETIONS_DIR | where name ends-with ".nu" | get name | each {|x| $"export use ($x | path basename)"} | str join "\n" | save mod.nu -f
h nu-highlight 
def update_completions_module [] {<\n>    rm ($env.COMPLETIONS_DIR | path join mod.nu)<\n>    ls $env.NU_COMPLETIONS_DIR | where name ends-with ".nu" | get name | each {|x| $"export use ($x | path basename)"} | str join "\n" | save mod.nu -f<\n>}
update_completions_module 
<\n>$env.NU_COMPLETIONS_DIR = $nu.data-dir | path join completions
update_completions_module 
<\n>$env.NU_COMPLETIONS_DIR = $nu.data-dir | path join completions
def update_completions_module [] {<\n>    rm ($env.NU_COMPLETIONS_DIR | path join mod.nu)<\n>    ls $env.NU_COMPLETIONS_DIR | where name ends-with ".nu" | get name | each {|x| $"export use ($x | path basename)"} | str join "\n" | save mod.nu -f<\n>}
update_completions_module 
h rf
rm --help
def update_completions_module [] {<\n>    rm ($env.NU_COMPLETIONS_DIR | path join mod.nu) --force<\n>    ls $env.NU_COMPLETIONS_DIR | where name ends-with ".nu" | get name | each {|x| $"export use ($x | path basename)"} | str join "\n" | save mod.nu -f<\n>}
update_completions_module 
h rm
h mv
mv mod.nu mod.nu.bk
mv mod.nu mod.nu.bk --force
cd ..
topiary format config.nu
update_completions_module 
topiary format config.nu
update_completions_module 
topiary format config.nu
update_completions_module 
topiary format config.nu
update_completions_module 
topiary format config.nu
ls $env.NU_COMPLETIONS_DIR<\n>        | where name ends-with ".nu"<\n>        | get name<\n>        | each {|x| $"export use ($x | path basename)" }<\n>        | str join "\n"<\n>        | save $module_path -f
let module_path = ($env.NU_COMPLETIONS_DIR | path join mod.nu)<\n>    rm $module_path --force<\n>    (<\n>        ls $env.NU_COMPLETIONS_DIR<\n>        | where name ends-with ".nu"<\n>        | get name<\n>        | each {|x| $"export use ($x | path basename)" }<\n>        | str join "\n"<\n>        | save $module_path -f<\n>    )
let module_path = ($env.NU_COMPLETIONS_DIR | path join mod.nu)<\n>    rm $module_path --force<\n>    <\n>        ls $env.NU_COMPLETIONS_DIR<\n>        | where name ends-with ".nu"<\n>        | get name<\n>        | each {|x| $"export use ($x | path basename)" }<\n>        | str join "\n"<\n>        | save $module_path -f<\n>    
update_completions_module 
topiary format config.nu
1 | as
h as
h aerospace
update_completions_module 
update_completions_module nu
h str join
update_completions_module nu
update_completions_module
bitwarden-cli-completion bw config 
aerospace list-apps 
aerospace list-monitors 
aerospace list-windows
aerospace list-apps 
update_completions_module 
btm btm 
h bw
update_completions_module 
qu
^bandwhich 
bandwhich 
h lsbom
man lsbom
h btm
h use
h modules
h module
help modules
update_completions_module 
btm btm --battery 
bw list 
bw list folders
bw login 
bw unlock 
update_completions_module 
nunuq
btm --autohide_time 
h bt
btm
btm --battery 
btm
h btm,
btm --battery 
btm --basic
btm 
btm
btm 
btm
btm --battery 
btm 
h btm
scope aliases
h tldr
h procs
h tokei
brew install grex
h grex
grex a b c
grex "I love rocknroll" "rocknroll" "love"
grex "I love rocknroll" "rocknroll" "love" " stop"
grex "I love rocknroll" "rocknroll"
grex "I love rocknroll" "rocknroll but no"
grex "I love rocknroll" "rocknroll" "rock"
grex "I love rocknroll" "rocknroll" "rock" "roll"
grex "I love rocknroll" "rocknroll" "rock" "roll" "n"
grex "I love rocknroll" "rocknroll" "rock" "roll" "nroll"
grex "I love rocknroll" "rocknroll" "rock" "roll" "nroll" "rockn"
h grex
h grex -c
grex "I love rocknroll" "rocknroll" "rock" "roll" "nroll" "rockn" -c
grex -c "I love rocknroll" "rocknroll" "rock" "roll" "nroll" "rockn"
h grex -c
grex
grex "I love rocknroll" "rocknroll" "rock" "roll" "nroll" "rockn"
btm
btm --battery 
(let a = 1) | debug
(let a = 1) | debug --raw-value
(let a = 1) == null
no
$env.foo = $env.bar = "baz"<\n>$env.foo == "baz"
$env.foo = $env.bar = "baz"<\n>$env.foo == "baz"<\n>$env.bar = baz
$env.foo = $env.bar = "baz"<\n>$env.foo == "baz"<\n>$env.bar == baz
$env.foo = $env.bar = "baz"<\n>$env.foo == "baz" and $env.bar == baz
$env.foo = $env.bar = "baz"<\n>$env.foo == "baz"<\n>$env.bar == baz
$env.foo = $env.bar = "baz"<\n>$env.foo == "baz"<\n>$env.bar == "baz"
overlay use /Users/julian/dev_projects/nested_dict_tools/.venv/bin/activate.nu
y
git clone https://github.com/trapd00r/LS_COLORS.git
run_test
sh run_tests
zsh run_tests
bash run_tests
run_test
run_tests
wsh run_tests
zsh run_tests
git switch -c feature-add-nushell
gs
gstat
gs
git commit -m "Add .nu"
git push 
y
git clone https://github.com/Kajiih/LS_COLORS.git
code LS_COLORS/
code LS_COLORS_old/
zsh run_tests 
git switch -c feature-add-nushell
y
cd .
ls
y
ls
cd ..
ls
z nush
h
z down
ls
chmod 755 open_yazi.nu 20241017_185806.mp4 
y
chmod 644 20241017_185806.mp4 
$env.config.error_style
ls
z nush
ls
zi
ls
y
cd '/Users/julian/Downloads/' 
config nu
h zi
zi
zi | y
zy
h y
h yazi
$env.config.keybindings | describe 
$env.config.menus | describe 
zy
y
zy
zi
topiary format config.nu
eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name  --tree --level=2 
zi | print $in
zi
y
zy
h zi
fzf
h fzf
(fd --type directory | fzf)
cd
(fd --type directory | fzf)
zy
nu
zy
y
zy
config nu
zi
h fzf
h lzt
topiary format modules/omnihelp.nu
h h
h bat
h h
q
h h 
help modules
help aliases 
h aliases
help pipe-and-redirect 
h h
h lz
h lzt
h modules
h aliases
$ldwdl
h aliases
help ldddwl
help aliases 
h aliases
help commands 
h commands 
help omnihelp
help omnihelp.nu
help omnihelp main
keybindings default | explore 
keybindings default | rg history
keybindings default | explore 
keybindings default | where event =~ history
keybindings defaultx
keybindings default 
keybindings default | where event =~ History
keybindings default | where event =~ History and mode =~ vi
ertsahrtia
keybindings default | where event =~ delete
keybindings default | where event =~ line
config nu
keybindings default | where event =~ line
fd -uu --type directory -g '.git'
fd -u --type directory -g '.git'
fd --type directory -g '.git'
fd -u --type directory -g '.git'
fd -u --type directory '\.git$'
fd -u --type directory -g '.git'
z dev
fd -u --type directory -g '.git' -x onefetch
tokei
git ls-files --help | bh
git ls-files
fd -u --type directory -g '.git'
rm -rf LS_COLORS_old/
co
config nu
".." | cd
fzg 
cd
fzg 
gstat
gs
cd dev
z dev
fzg
h z
fd -u --type directory -g '.git'
cd
fd -u --type directory -g '.git'
fzg
grex ".Trash/nu_plugin_clipboard/.git/<\n>.Trash/tokyo-night.yazi/.git/<\n>.Trash/nu_plugin_clipboard 01.43.54/.git/<\n>.Trash/nu_plugin_clipboard 00.22.40/.git/<\n>.dotfiles/.git/<\n>"
grex ".Trash/nu_plugin_clipboard/.git/"<\n>".Trash/tokyo-night.yazi/.git/"<\n>".Trash/nu_plugin_clipboard 01.43.54/.git/"<\n>".Trash/nu_plugin_clipboard 00.22.40/.git/"<\n>".dotfiles/.git/"
fd -u --type directory -g '.git' -e "^.*"
fd -u --type directory -g '.git' -e "^\.*"
fd -u --type directory -g '.git' -E "^\.*"
fd -u --type directory -g '.git' -E "^.*"
fd -u --type directory -g '.git' -E "^\..*"
fd -u --type directory -g '.git' -E #"^\..*"
fd -u --type directory -g '.git' -E r#"^\..*"#
fd -u --type directory -g '.git' -E r#'^\..*'#
fd -u --type directory -g '.git' -E '^\..*'
fd -u --type directory -g '.git' -E ".*"
fd -u --type directory -g '.git' -E "./.*"
fd -u --type directory -g '.git' -E "/.*"
fzg
cd
fzg
cd
fd -u --type directory -g '.git' -prune "/.*"
fd -u --type directory -g '.git' --prune "/.*"
fd -u --type directory -g '.git' -E "/.*"
zi
zi --edit
zi .git
zi
cd
cd dev_projects/
fd ~
fd 
fd --base-directory ~
fd --base-directory ~ .git
fd '.git' --base-directory ~
fd -u --type directory --glob '.git' --exclude '/.*'
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory=~
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory='~'
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory ~
fzg --base-directory ~
fzg "--base-directory ~"
fzg --max-depth 3 src
h fzg
fzg --max-depth 3 src
h fzg
fzg [--max-depth 3 src]
fzg [--base-directory ~]
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory ~
fzg [--base-directory ~]
fzg --base-directory ~
fzg "--base-directory ~"
fzg ... --base-directory ~
fd -u --type directory --glob '.git' --exclude '.*'
fd -u --type directory --glob '.git' --exclude '/.*'
fd -u --type directory --glob '.git' --exclude '/.*' ~
fd -u --type directory --glob '.git' --exclude '/.*' -
fd -u --type directory --glob '.git' --exclude '/.*' .
fd -u --type directory --glob '.git' --exclude '/.*' ~
fd -u --type directory --glob '.git' --exclude '/.*' /
fd -u --type directory --glob '.git' --exclude '/.*' ~
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory ~
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory -
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory .
fzg
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory .
fzg
h gs
h gh
h sg
fzg -h
fzg 
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory ~
fzg -h 
fzg -a
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory `~`
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory '~'
fzg -a
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory '~/'
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory 
$env.HOME
fzg -a
h fd
z nus
zy nus
fzg -a
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory ~ #$base_dir <\n>    | each {|p| p | path dirname}
fd -u --type directory --glob '.git' --exclude '/.*' --base-directory ~ #$base_dir <\n>    | each {|p| $p | path dirname}
fzg -a
tree -C {} | head -n 200
tree -C . | head -n 200
cd .git/
tree -C . | head -n 200
tree -C .. | head -n 200
fzg -a
$env.SHELL
zi
h fzf
fzg -a
h tree
fzg -a
fd -u --type directory --glob '.git' --exclude '/.*'
fd -u --type directory --glob '.git' --exclude '/.*' ~
fd -u --type directory --glob '.git' --exclude '/.*' ~ | join `/n`
fd -u --type directory --glob '.git' --exclude '/.*' ~ | str join '\n'
fd -u --type directory --glob '.git' --exclude '/.*' ~ | table
fd -u --type directory --glob '.git' --exclude '/.*' ~ | table | describe
h list
h lists
fd -u --type directory --glob '.git' --exclude '/.*' ~ | split row '\n'
h split
fd -u --type directory --glob '.git' --exclude '/.*' ~ 
fd -u --type directory --glob '.git' --exclude '/.*' ~ | b
fd -u --type directory --glob '.git' --exclude '/.*' ~ | debug
fd -u --type directory --glob '.git' --exclude '/.*' ~ | debug --raw-value 
fd -u --type directory --glob '.git' --exclude '/.*' ~ | split row "\n"
fd -u --type directory --glob '.git' --exclude '/.*' ~ | split row "\n" | each (path dirname)
fd -u --type directory --glob '.git' --exclude '/.*' ~ | split row "\n" | each {path dirname}
fd -u --type directory --glob '.git' --exclude '/.*' $env.HOME | split row "\n" | each {path dirname}
fd -u --type directory --glob '.git' --exclude '/.*' $env.HOME | split row "\n" | each {path dirname} | str join "\n"
fzg
fzg -a
cd Obsidian
fzg -a
h fd
h fzf
path join [".config", ".ripgreprc"]
[$env.HOME "ok"] | path join
$env.HOME "ok" | path join
$env.HOME ok | path join
[$env.HOME ok] | path join
fzg
fzg -a
h split
config nu
h fd
fzg -a
hyperfine "fzg -a"
hyperfine "fzg -a" --show-output
hyperfine --show-output "fzg -a"
hyperfine --show-output "fzg -a" --shell nu
hyperfine --show-output --no-shell "gzg -a"
hyperfine --show-output --shell="" "gzg -a"
hyperfine --show-output --shell '' "gzg -a"
hyperfine --show-output --shell=none "gzg -a"
hyperfine --show-output --shell=none "fzg -a"
hyperfine --warmup 3 --min-runs 5 \<\n>  "fd -uu --type directory --glob '.git' --base-directory ~ --exclude '.*' --prune"
hyperfine --warmup 3 --min-runs 5 "fd -uu --type directory --glob '.git' --base-directory ~ --exclude '.*' --prune"
hyperfine --warmup 3 --min-runs 5 "fd -u --type directory --glob '.git' --base-directory ~ --exclude '.*' --prune"
fzg -a
hyperfine --warmup 3 --min-runs 5 "fd -uu --type directory --glob '.git' --base-directory ~ --exclude '.*' --prune"
hyperfine --warmup 3 --min-runs 5 "fd -u --type directory --glob '.git' --base-directory ~ --exclude '.*'"
fd -u --type directory --glob '.git' --base-directory ~ --exclude '.*'
fd -u --type directory --glob '.git' --base-directory ~ --exclude '.*' ~
fd -u --type directory --glob '.git' --exclude '.*' ~
cd
fd -u --type directory --glob '.git' --exclude '.*' ~
fd -u --type directory --glob '.git' --exclude '.*'
fd -u --type directory --glob '.git' --exclude '/.*'
fd -u --type directory --glob '.git' --exclude '/.*' | lines
fzg -a
fzg 
ls
fzg 
fzg -a
cd (/Users/julian | path join "aa")
cd ('/Users/julian' | path join "aa")
nf
ls
cd ('/Users/julian' | path join "aa")
fzg -a
ls
fzg -a
ls
fzg -a
fzg
z nested
cd ..
fzg
ls
fzg
fzg -a
ls
fzg -a
ls
fzg -a
h gstat
fzg -a
gstat
fzg -a
h gstat
fzg -a
gitui
fzg -a
h z
z edit
__zoxide_z edit
zoxide edit 
fzf
fzg -a
h gs
gs
gs | head
gs | head | bh
gs | head | b
gs | head | bp
gs | head | bp -l diff
gs | bp
gs | bp | head
gs | bp --force-colorization | head
gs
gs | debug
gs | debug --raw-value 
gs | debug
gs
h head
git status
git status --short
git status --porcelain
git status --untracked-files
git -c color.ui=always
cd
zi
ls
gs | head
gs --porcelain
git -c color.ui=always status | head -n 10
git -c color.ui=never status | head -n 10
git -c color.ui=always status | head -n 10
git status -b
git status
git diff --cached --stat
git status | grep 'modified:' | wc -l
h wg
h wc
fzg -a
git-status-short
fzg -a
git-status-short
fzg -a
git-status-short
fzg -a
h defer
h def
git -c color.ui=always status | better-head --lines 10 --context 2
git -c color.ui=always status | better-head --lines 10 --context 2 | lines
git -c color.ui=always status | better-head --lines 10 --context 2 | print
fzg -a
h do
fzg -a
df
scc
fzg -a
h onefetch
onefetch
onefetch -p
onefetch --true-color 
onefetch --true-color  always 
fzg -a
onefetch --true-color  always
onefetch --true-color  alwayst
tokei 
onefetch --true-color  always 
h onefetch
h onefetch -d Language
onefetch -d Language
onefetch -d languages
onefetch -d languages
onefetch -d
ls
code thing.py
onefetch -d languages
onefetch
tokei
code thing.txt
tokei
onefetch
git remote
git remote -v
h onefetch
tokei
code thing.py
tokei
onefetch
code thing.py
onefetch
fzg -a
$nu.pid
fzr -a
h fd
fzr -a
h fd
fzr -a
test
fzr
fzg -a
onefetch
fzg -a
ls
tokei
fzf
gs
y
ls
h fg
fzg -a
code git_repo_navigator.nu
# nu-niversal paperclips - a (somewhat) faithful clone of Universal Paperclips<\n># play the original at: https://www.decisionproblem.com/paperclips/index2.html<\n><\n># NOTE: scalars are off cuz i'm counting by pennies instead of dollars and cents<\n><\n>const carriage_return = "\n\r"<\n><\n># Resets cursor to home position and hides it to prevent visual distraction<\n>def reset-cursor [] {<\n>  print -n "\e[H"  # Move cursor to home position (top-left)<\n>  print -n "\e[?25l"  # Hide cursor<\n>}<\n><\n># Clears all content from cursor position to end of screen<\n>def clear-to-end [] {<\n>  print -n "\e[J"  # Clear from cursor to end of screen<\n>}<\n><\n># Updates the terminal display with current game state<\n>def refresh-game-view [state] {<\n>  reset-cursor<\n>  render-game-display $state<\n>}<\n><\n>def make-paperclip [state, amount: int] {<\n>  mut new_state = $state<\n>  $new_state.paperclips.total += $amount<\n>  $new_state.paperclips.stock += $amount<\n>  $new_state.wire.length -= $amount<\n>  $new_state.paperclips.current_second_clips += $amount  # Add this line<\n>  $new_state<\n>}<\n><\n>def sell-paperclips [state] {<\n>  if $state.paperclips.stock == 0 { return $state }<\n>  # numbers picked by the OG, i haven't sussed out exactly why.<\n>  if (random float 0.0..1.0) > ($state.market.demand / 100) { return $state }<\n>  mut amount = 0.7 * ($state.market.demand ** 1.15) | math floor<\n>  if $amount > $state.paperclips.stock { $amount = $state.paperclips.stock }<\n>  mut new_state = $state<\n>  let transaction = $amount * $state.paperclips.price<\n>  $new_state.money += $transaction<\n>  $new_state.paperclips.stock -= $amount<\n>  $new_state<\n>}<\n><\n>def update-demand [state] {<\n>  let marketing = 1.1 ** ($state.market.level - 1)<\n>  mut new_state = $state<\n>  $new_state.market.demand = ((.8 / $state.paperclips.price) * $marketing) * 1000<\n>  $new_state<\n>}<\n><\n>def get-user-input [] {<\n>  let key = (input listen --types [key])<\n>  if ($key.code == 'c') and ($key.modifiers == ['keymodifiers(control)']) {<\n>    print -n "\e[?25h"  # Show cursor before exiting<\n>    exit<\n>  }<\n>  $key.code | job send 0<\n>}<\n><\n>def format-text [prefix: string, value: number, --money --round] {<\n>  mut value = $value<\n>  if $money {<\n>    $value = $value / 100.0 | math round --precision 2<\n>  }<\n>  if $round {<\n>    $value = $value | math round --precision 2<\n>  }<\n>  # e.g. "Paperclips: XXX\n\r" or "Unsold Inventory: $X.XX\n\r"<\n>  $"($prefix): (if $money { "$" } else { })($value | into string --group-digits)(if $round { "%" } else { })($carriage_return)"<\n>}<\n><\n># Prints text after clearing the current line with ANSI escape code<\n>def clear-line [text] {<\n>  print -n $"\e[2K($text)"<\n>}<\n><\n>def render-game-display [state] {<\n>  # Game title and stats<\n>  clear-line (format-text "Paperclips" $state.paperclips.total)<\n>  clear-line $carriage_return<\n><\n>  # Business section<\n>  clear-line "Business:\n\r"<\n>  clear-line "---------------\n\r"<\n>  clear-line (format-text 'Available Funds' $state.money --money)<\n>  clear-line (format-text 'Unsold Inventory' $state.paperclips.stock)<\n>  clear-line (format-text 'Price Per Clip' $state.paperclips.price --money)<\n>  clear-line (format-text 'Public Demand' $state.market.demand --round)<\n>  clear-line $carriage_return<\n>  clear-line (format-text 'Marketing Level' $state.market.level)<\n>  clear-line (format-text 'Marketing cost' $state.market.cost --money)<\n>  clear-line $carriage_return<\n><\n>  # Manufacturing section<\n>  clear-line "Manufacturing:\n\r"<\n>  clear-line "---------------\n\r"<\n>  clear-line (format-text 'Clips per Second' $state.paperclips.rate)<\n>  clear-line $carriage_return<\n><\n>  # Wire section<\n>  if $state.wire.length == 1 { "inch" } else { "inches" }<\n>  clear-line $"Wire: ($state.wire.length | into string -g) (<\n>    if $state.wire.length == 1 { "inch" } else { "inches" }<\n>  )\n\r"<\n>  clear-line (format-text 'Wire cost' $state.wire.cost --money)<\n>  clear-line $carriage_return<\n><\n>  # Autoclippers (conditional)<\n>  if $state.autoclippers.unlocked {<\n>    clear-line (format-text "Autoclippers" $state.autoclippers.count)<\n>    clear-line (format-text 'Autoclipper cost' $state.autoclippers.cost --money)<\n>    clear-line $carriage_return<\n>  }<\n><\n>  # Controls<\n>  clear-line $"($state.control_line)\n\r"<\n><\n>  # Clean up any trailing content from previous longer displays<\n>  clear-to-end<\n>}<\n><\n>def main [] {<\n>  reset-cursor<\n>  print "Welcome to nu-niversal paperclips!"<\n>  clear-to-end<\n>  sleep 2sec<\n>  reset-cursor<\n>  let table_name = "clip_message_queue"<\n><\n>  mut state = {<\n>    delta_time: 0sec<\n>    paperclips: {<\n>      total: 0<\n>      stock: 0<\n>      price: 25<\n>      rate: 0  # Changed from -1 to 0: This will show last second's rate<\n>      current_second_clips: 0  # Add: Accumulator for current second<\n>    }<\n>    last_second_timestamp: (date now)  # Add: Track when current second started<\n>    market: {<\n>      demand: 0<\n>      level: 1<\n>      cost: 10000<\n>    }<\n>    money: 0<\n>    control_line: "controls: [a]dd paperclip; buy [w]ire; price [u]p; price [d]own; [q]uit"<\n>    wire: {<\n>      length: 1000<\n>      cost: 2000<\n>    }<\n>    autoclippers: {<\n>      count: 0<\n>      unlocked: false<\n>      cost: 1000<\n>      multiplier: 1.25<\n>    }<\n>  }<\n>  let save_exists = ('./gamestate.nuon' | path exists)<\n>  if $save_exists {<\n>    $state = open './gamestate.nuon'<\n>  }<\n>  # initial setup<\n>  $state = update-demand $state<\n>  refresh-game-view $state<\n>  get-user-input<\n><\n>  loop {<\n>    let seconds = $state.delta_time<\n>    if ($seconds) > (1sec) {<\n>      $state.delta_time -= $seconds<\n>      # TODO: tweak numbers<\n>      if (random bool --bias 0.5) {<\n>        let deviation = (0.75 + (random float 0.0..0.50))<\n>        $state.wire.cost *= $deviation<\n>        if $state.wire.cost < 1200 {<\n>          $state.wire.cost = 1200<\n>        } else if $state.wire.cost > 3000 {<\n>          $state.wire.cost = 3000<\n>        }<\n>      }<\n>      $state = update-demand $state<\n><\n>      # Calculate total autoclipper production for this time period<\n>      let amount = (($seconds | into int | $in / 1000000000) * $state.autoclippers.count) | math round<\n>      mut index = 0<\n>      while $index < $amount {<\n>        $state = make-paperclip $state 1<\n>        $index += 1<\n>      }<\n><\n>      $state = sell-paperclips $state<\n>    }<\n>    let prev = date now<\n><\n>    # Check if a second has passed and roll over counters<\n>    let now = date now<\n>    if ($now - $state.last_second_timestamp) >= 1sec {<\n>      $state.paperclips.rate = $state.paperclips.current_second_clips<\n>      $state.paperclips.current_second_clips = 0<\n>      $state.last_second_timestamp = $now<\n>    }<\n><\n>    if (($state.paperclips.total > 9) and ($state.autoclippers.count < 1)) and not $state.autoclippers.unlocked {<\n>      $state.autoclippers.unlocked = true<\n>      $state.control_line += "; [b]uy autoclipper"<\n>    }<\n><\n>    # Update display with current game state<\n>    refresh-game-view $state<\n><\n>    try {<\n>      let key = job recv --timeout 0sec<\n>      match $key {<\n>        "a" => {<\n>          # TODO: add some way to grow amount?<\n>          $state = make-paperclip $state 1<\n>        }<\n>        "b" => {<\n>          if $state.money >= $state.autoclippers.cost {<\n>            $state.money -= $state.autoclippers.cost<\n>            $state.autoclippers.count += 1<\n>            $state.autoclippers.cost = ($state.autoclippers.cost * 1.25 | math round)<\n>          }<\n>        }<\n>        "d" => {<\n>          if $state.paperclips.price > 1 {<\n>            $state.paperclips.price -= 1<\n>            $state = update-demand $state<\n>          }<\n>        }<\n>        "q" => {<\n>          if not $save_exists {<\n>            $state | save gamestate.nuon<\n>          } else {<\n>            $state | save gamestate.nuon --force<\n>          }<\n>          print -n "\e[?25h"  # Show cursor before exiting<\n>          break<\n>        }<\n>        "u" => {<\n>          $state.paperclips.price += 1<\n>          $state = update-demand $state<\n>        }<\n>        "w" => {<\n>          if $state.money >= $state.wire.cost {<\n>            $state.wire.length += 1000<\n>            $state.money -= $state.wire.cost<\n>          }<\n>        }<\n>        _ => {<\n>          ""<\n>        }<\n>      }<\n>      job spawn { get-user-input }<\n>    }<\n><\n>    # for 60fps framerate lock<\n>    sleep 16.666ms<\n>    let now = date now<\n>    let delta = $now - $prev<\n>    $state.delta_time += $delta<\n>  }<\n>}
render-game-display
fzg -a
h -T
h onefetch
onefetch -T
onefetch -T markup
onefetch -T markup, prose
onefetch -T markup prose
onefetch -T prose
onefetch -T markup
fzg -a
onefetch -T markup prose
fzg -a
man fg
tldr fg
overlay use /Users/julian/dev_projects/nested_dict_tools/.venv/bin/activate.nu
topiary format config.nu
z nus
onefetch
z scripts
zi
onefetch
~/dev_projects                                                          17:23:35<\n>╭────────────────────────┬─────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────────────────────────────────────────────────────────────────────────────╮<\n>│  career               │  bayesian_universe                                                                                     │Empty file                                                                   │<\n>│  Desktop              │  bevy_game_of_life                                                                                     │                                                                             │<\n>│  dev_projects         │  cartagrimpe_filter                                                                                    │                                                                             │<\n>│  Documents            │  cookiecutter-pypackage-kj                                                                             │                                                                             │<\n>│  Downloads            │  data_structures_and_algorithms                                                                        │                                                                             │<\n>│  Karabiner-DriverKit-…│  Finance                                                                                               │                                                                             │<\n>│  Library              │  godot_games                                                                                           │                                                                             │<\n>│  Movies               │  HuggingFace_projects                                                                                  │                                                                             │<\n>│  Music                │  imbd2notion                                                                                           │                                                                             │<\n>│  my_data              │  kajihs_utils                                                                                          │                                                                             │<\n>│  Obsidian             │  Kajiih                                                                                                │                                                                             │<\n>│  Pictures             │  LS_COLORS                                                                                             │                                                                             │<\n>│  Public               │  mad_pod_racing                                                                                        │                                                                             │<\n>│  Sites                │  master_thesis_work                                                                                    │                                                                             │<\n>│  Support              │  musicbrainz2notion                                                                                    │                                                                             │<\n>│  Zotero               │  nested_dict_tools                                                                                     │                                                                             │<\n>│                        │  pythemize                                                                                             │                                                                             │<\n>│                        │  python_sandbox                                                                                        │                                                                             │<\n>│                        │  rl_thor                                                                                               │                                                                             │<\n>│                        │  rust_book                                                                                             │                                                                             │<\n>│                        │  rust_dsa                                                                                              │                                                                             │<\n>│                        │  rust_sandbox                                                                                          │                                                                             │<\n>│                        │  SalesFriend                                                                                           │                                                                             │<\n>│                        │  vscode_themes                                                                                         │                                                                             │<\n>│                        │  topiary_nushell_vscode                                                                                │                                                                             │<\n>│                        │╭Rename:─────────────────────────────────────────╮                                                       │                                                                             │<\n>│                        ││topiary_nushell_vscode                          │                                                       │                                                                             │<\n>│                        │╰────────────────────────────────────────────────╯                                                       │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>╰────────────────────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────────────────────────────────────────────────────────────────────────────╯<\n> NOR  0B  topiary_nushell_vscode                                                                                                                                                     -rw-r--r--  Bot  25/25 ~/dev_projects                                                          17:23:35<\n>╭────────────────────────┬─────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────────────────────────────────────────────────────────────────────────────╮<\n>│  career               │  bayesian_universe                                                                                     │Empty file                                                                   │<\n>│  Desktop              │  bevy_game_of_life                                                                                     │                                                                             │<\n>│  dev_projects         │  cartagrimpe_filter                                                                                    │                                                                             │<\n>│  Documents            │  cookiecutter-pypackage-kj                                                                             │                                                                             │<\n>│  Downloads            │  data_structures_and_algorithms                                                                        │                                                                             │<\n>│  Karabiner-DriverKit-…│  Finance                                                                                               │                                                                             │<\n>│  Library              │  godot_games                                                                                           │                                                                             │<\n>│  Movies               │  HuggingFace_projects                                                                                  │                                                                             │<\n>│  Music                │  imbd2notion                                                                                           │                                                                             │<\n>│  my_data              │  kajihs_utils                                                                                          │                                                                             │<\n>│  Obsidian             │  Kajiih                                                                                                │                                                                             │<\n>│  Pictures             │  LS_COLORS                                                                                             │                                                                             │<\n>│  Public               │  mad_pod_racing                                                                                        │                                                                             │<\n>│  Sites                │  master_thesis_work                                                                                    │                                                                             │<\n>│  Support              │  musicbrainz2notion                                                                                    │                                                                             │<\n>│  Zotero               │  nested_dict_tools                                                                                     │                                                                             │<\n>│                        │  pythemize                                                                                             │                                                                             │<\n>│                        │  python_sandbox                                                                                        │                                                                             │<\n>│                        │  rl_thor                                                                                               │                                                                             │<\n>│                        │  rust_book                                                                                             │                                                                             │<\n>│                        │  rust_dsa                                                                                              │                                                                             │<\n>│                        │  rust_sandbox                                                                                          │                                                                             │<\n>│                        │  SalesFriend                                                                                           │                                                                             │<\n>│                        │  vscode_themes                                                                                         │                                                                             │<\n>│                        │  topiary_nushell_vscode                                                                                │                                                                             │<\n>│                        │╭Rename:─────────────────────────────────────────╮                                                       │                                                                             │<\n>│                        ││topiary_nushell_vscode                          │                                                       │                                                                             │<\n>│                        │╰────────────────────────────────────────────────╯                                                       │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>│                        │                                                                                                         │                                                                             │<\n>╰────────────────────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────────────────────────────────────────────────────────────────────────────╯<\n> NOR  0B  topiary_nushell_vscode                                                                                                                                                     -rw-r--r--  Bot  25/25 npm install<\n><\n>npm install -g @vscode/vsce<\n><\n>vsce package --no-dependencies
git clone https://github.com/constneo/vscode-nushell-format.git
npm install<\n><\n>npm install -g @vscode/vsce<\n><\n>vsce package --no-dependencies
npm install<\n>vsce package --no-dependencies
z nu
code config.nu 
topiary format config.nu
# Install dependencies<\n>npm install<\n><\n># Build the VSIX package<\n>vsce package --no-dependencies
which topiary
which topiary --all 
# Create test file<\n>mkdir -p "Test Path"<\n>echo 'def test [] { echo "space test" }' > "Test Path/test.nu"
# Create test file<\n>mkdir "Test Path"<\n>echo 'def test [] { echo "space test" }' > "Test Path/test.nu"
ls
cd `Test Path/`
ls
code test_file.nu
# Install dependencies<\n>npm install<\n><\n># Build the VSIX package<\n>vsce package --no-dependencies
cd ..
ls
cd vscode-nushell-format/
# Install dependencies<\n>npm install<\n><\n># Build the VSIX package<\n>vsce package --no-dependencies
code test_no_space.nu
code "Test Path/test_file.nu" 
# Install dependencies<\n>npm install<\n><\n># Build the VSIX package<\n>vsce package --no-dependencies
code test_no_space.nu
code "Test Path/"
code "Test Path/test_file.nu" 
code test_no_space.nu
# Install dependencies<\n>npm install<\n><\n># Build the VSIX package<\n>vsce package --no-dependencies
code test_no_space.nu
# Install dependencies<\n>npm install<\n><\n># Build the VSIX package<\n>vsce package --no-dependencies
code test_no_space.nu
code "Test Path/test_file.nu" 
code test_no_space.nu
git switch -c fix1
git push
code .
overlay use /Users/julian/dev_projects/musicbrainz2notion/.venv/bin/activate.nu
git clone https://github.com/Kajiih/onefetch.git
code onefetch/
tokei
toke,
tokei
onefetch
make install
cargo install onefetch --force
cd ascii_art/
python make_ascii.py 
python3 make_ascii.py 
cd ascii_art/
python3 make_ascii.py 
python3 colorize_ascii.py
make install
cd ..
make install
onefetch
onefetch -lT 
onefetch --ascii-language text
onefetch --ascii-language tex
onefetch --ascii-language Xaml
onefetch --ascii-language xaml
cargo run
cargo run --ascii-language text
cargo run -- --ascii-language text
python3 colorize_ascii.py
python3 ascii_art/colorize_ascii.py
cd ascii_art/
python3 colorize_ascii.py
cargo run -- --ascii-language text
python3 colorize_ascii.py
cargo run -- --ascii-language text
python3 colorize_ascii.py
cargo run -- --ascii-language text
<\n>  ttt                      ttt         Kajih ~ git version 2.49.0<\n>tt::t                    tt::t         --------------------------<\n>t:::t                    t:::t         Project: onefetch (1 branch)<\n>t:::t                    t:::t         Description: Command-line Git information tool<\n>t::::tttttxxxxx     xxxxxt::::ttttt    HEAD: dbb91b6e (main, origin/main)<\n>t::::::::t x:::x   x:::x t::::::::t    Pending: 2+- 9+<\n>t:::t       x:::x x:::x  t:::t         Version: 2.24.0<\n>t:::t        x:::x:::x   t:::t         Created: 6 years ago<\n>t:::t         x:::::x    t:::t         Languages:                              <\n>t:::t  tttt  x:::x:::x   t:::t  tttt              ● Rust (96.0 %) ● Shell (2.0 %)<\n>t::::tt:::t x:::x x:::x  t::::tt:::t              ● Python (1.4 %) ● Makefile (0.4 %)<\n> tt:::::tt x:::x   x:::x  tt:::::tt               ● Ruby (0.2 %) <\n>    tttt  xxxxx     xxxxx    tttt    <\n><\n><\n><\n> ttt                        ttt         Kajih ~ git version 2.49.0<\n>tt::t                      tt::t         --------------------------<\n>t:::t                      t:::t         Project: onefetch (1 branch)<\n>t:::t                      t:::t         Description: Command-line Git information tool<\n>t::::ttttt xxxxx     xxxxx t::::ttttt    HEAD: dbb91b6e (main, origin/main)<\n>t::::::::t  x:::x   x:::x  t::::::::t    Pending: 2+- 9+<\n>t:::t        x:::x x:::x   t:::t         Version: 2.24.0<\n>t:::t         x:::x:::x    t:::t         Created: 6 years ago<\n>t:::t          x:::::x     t:::t         Languages:                              <\n>t:::t  tttt   x:::x:::x    t:::t  tttt              ● Rust (95.9 %) ● Shell (2.0 %)<\n>t::::tt:::t  x:::x x:::x   t::::tt:::t              ● Python (1.6 %) ● Makefile (0.4 %)<\n> tt:::::tt  x:::x   x:::x   tt:::::tt               ● Ruby (0.2 %) <\n>    tttt   xxxxx     xxxxx     tttt      Dependencies: 25 (Cargo)
cargo run -- --ascii-language text
python3 colorize_ascii.py
cargo run -- --ascii-language text
onefetch
cargo run -- --ascii-language text
python3 colorize_ascii.py
cd ascii_art/
python3 colorize_ascii.py
cargo run -- --ascii-language text
git switch -c add-plain-text
gs
gitPull
git pull
gs
git branch
cargo run -- --ascii-language text
python3 colorize_ascii.py
cd ascii_art/
python3 colorize_ascii.py
cargo run -- --ascii-language text
config nu
tree
lzt
lztt
lzr
fzg -a
h fzf
fzg -a
fz
fzg
h lz
fzg
config nu
fzg -a
cd
fzg
onefetch --nerd-font
onefetch --nerd-fonts
onefetch
fzg -a
h onefetch
zi
Library/Application Support/nushell/modules/omnihelp.nu
code Library/Application Support/nushell/modules/omnihelp.nu
rm Library/Application
code "Library/Application Support/nushell/modules/omnihelp.nu"
h onefetch
h h
onefetch --help
onefetch --help| bh
onefetch  --disabled-fields 
onefetch  --disabled-fields project, description, head, pending, version, created, languages, dependencies, authors, last-change, contributors, url, commits, churn, lines-of-code, size, license
onefetch  --disabled-fields project description head pending version created languages dependencies authors last-change contributors url commits churn lines-of-code size license
z nested
onefetch  --disabled-fields project description head pending version created languages dependencies authors last-change contributors url commits churn lines-of-code size license
onefetch  --disabled-fields project description head pending version created languages dependencies authors last-change contributors url commits churn lines-of-code size license --no-title
onefetch  --disabled-fields project description head pending version created languages dependencies authors last-change contributors url commits churn lines-of-code size license --no-title --no-color-palette
h onefetch
z nest
onefetch
(onefetch  --disabled-fields project description head pending version created languages dependencies authors last-change contributors url commits churn lines-of-code size license --no-title --no-color-palette) + ( onefetch  --disabled-fields project description head pending version created languages dependencies authors last-change contributors url commits churn lines-of-code size license --no-title --no-color-palette)
onefetch
fzg -a
fzg -a
onefetch
h lz
(onefetch  --disabled-fields project description head pending version created languages dependencies authors last-change contributors url commits churn lines-of-code size license --no-title --no-color-palette) + ( onefetch  --disabled-fields project description head pending version created languages dependencies authors last-change contributors url commits churn lines-of-code size license --no-title --no-color-palette --no-art)
command = /opt/homebrew/bin/nu --login --interactive -c y<\n> onefetch  --disabled-fields project description head pending version created languages dependencies authors last-change contributors url commits churn lines-of-code size license --no-title --no-art
<\n> onefetch  --disabled-fields project description head pending version created languages dependencies authors last-change contributors url commits churn lines-of-code size license --no-title --no-art
<\n> onefetch  --disabled-fields project description head pending version created ependencies authors contributors url commits churn lines-of-code size license --no-title --no-art
<\n> onefetch  --disabled-fields project description head pending version created dependencies authors contributors url commits churn lines-of-code size license --no-title --no-art
onefetch
<\n> onefetch  --disabled-fields dependencies authors contributors url commits churn lines-of-code size license --no-title --no-art
onefetch
<\n> onefetch  --disabled-fields dependencies authors contributors url commits churn lines-of-code size license --no-title --no-art
fzg -a
<\n> onefetch  --disabled-fields dependencies authors contributors url commits churn lines-of-code size license --no-title --no-art
fzg -a
<\n> onefetch  --disabled-fields dependencies authors contributors url commits churn lines-of-code size license --no-title --no-art
fzg -a
h onefetch
h h
h onefetch
z book
onefetch
hyperfine onfetch
hyperfine --warmup 3 --min-runs 5 "onefetch"
hyperfine --warmup 5 --min-runs 5 "onefetch"
hyperfine --prepaer--min-runs 5 "onefetch"
hyperfine --prepare --min-runs 5 "onefetch"
h hyperfine
hyperfine --prepare --min-runs 5 "onefetch"
hyperfine --warmup 5 --min-runs 5 "onefetch"
hyperfine --warmup 5 --min-runs 5 "onefetch --type prose programming markup data" 
hyperfine --warmup 5 --min-runs 5 "onefetch --type prose programming" 
hyperfine --warmup 5 --min-runs 5 "onefetch --type programming" 
hyperfine --warmup 5 --min-runs 5 "onefetch --type prose programming markup data" 
hyperfine --warmup 5 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license --no-title --no-art --no-color-palette" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license --no-title --no-art --no-color-palette" 
h onefetch
n
h onefetch
onefetch -d
hyperfine --warmup 5 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages --no-title --no-art --no-color-palette" 
hyperfine --warmup 5 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending --no-title --no-art --no-color-palette" 
hyperfine --warmup 5 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending commits --no-title --no-art --no-color-palette" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending commits --no-title --no-art --no-color-palette" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending commits head --no-title --no-art --no-color-palette" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending commits head project --no-title --no-art --no-color-palette" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending commits head project created --no-title --no-art --no-color-palette" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending commits head project created  last-change --no-title --no-art --no-color-palette" 
onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending commits head project created  last-change --no-title --no-art --no-color-palette
onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending commits head project created  last-change --no-title --no-art
z book
onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending commits head project created  last-change --no-title --no-art
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending commits head project created  last-change version --no-title --no-art --no-color-palette" 
onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending commits head project created  last-change version --no-title --no-art --no-color-palette
onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending commits head project created  last-change version --no-title --no-art
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license languages pending commits head project created  last-change version --no-title --no-art" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits head project created  last-change version --no-title --no-art" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license commits head project created  last-change version --no-title --no-art" 
h onefetch
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits head project created  last-change version --no-title --no-art" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits head project created  last-change version --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits head project created  last-change version --no-art" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits head project created  last-change version --no-art --no-title" 
z book
hyperfine --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits head project created  last-change version --no-art --no-title" 
hyperfine --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits head project created  last-change version --no-art" 
hyperfine --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits head project created  last-change version --no-art --no-title" 
hyperfine --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license commits head project created  last-change version --no-art --no-title" 
hyperfine --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license commits  pending head project created last-change version --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits head project created  last-change version --no-art --no-title" 
onefetch
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits head project created  last-change --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits head project created version --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits head project  last-change --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits head created version --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits project  last-change --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending head created version --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license commits project  last-change --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size pending head created version --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license commits project  last-change --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size pending head created version --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code license commits project  last-change --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size pending head created version --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending commits project  last-change --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending project  last-change --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license commits project  last-change --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size pending project  last-change --no-art --no-title" 
tldr purge
man purge
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code license commits project  last-change --no-art --no-title" 
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending project  last-change --no-art --no-title"
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn size license pending project  last-change --no-art --no-title"
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url lines-of-code size license pending project  last-change --no-art --no-title"
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors churn size license pending project  last-change --no-art --no-title"
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url lines-of-code size license pending project  last-change --no-art --no-title"
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors url  churn lines-of-code size license pending project  last-change --no-art --no-title"
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies contributors url  churn lines-of-code size license pending project  last-change --no-art --no-title"
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending project  last-change --no-art --no-title"
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields contributors url  churn lines-of-code size license pending project  last-change --no-art --no-title"
h purge
hyperfine --warmup 10 --min-runs 5 "onefetch --type prose programming markup data --disabled-fields url  churn lines-of-code size license pending project  last-change --no-art --no-title"
man purge
hyperfine --prepare "sudo purge" --min-runs 5 "onefetch --type prose programming markup data --disabled-fields url  churn lines-of-code size license pending project  last-change --no-art --no-title"
hyperfine --prepare "purge" --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending project  last-change --no-art --no-title"
hyperfine --prepare "sudo purge" --min-runs 5 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license pending project  last-change --no-art --no-title"
onefetch -d
onefetch
z nested
onefetch
# List of all possible disable options<\n>let fields = [<\n>  "project", "description", "head", "pending", "version",<\n>  "created", "languages", "dependencies", "authors",<\n>  "last-change", "contributors", "url", "commits",<\n>  "churn", "lines-of-code", "size", "license"<\n>]<\n><\n># Loop through each field and run benchmark<\n>for field in $fields {<\n>  print $"--- Disabling field: ($field) ---"<\n><\n>  # Run with disabling a specific field<\n>  hyperfine --prepare "sudo purge" --min-runs 5 $'onefetch --type prose programming markup data --disabled-fields ($field) --no-art --no-title'<\n><\n>  # Also run a version WITHOUT --no-art / --no-title<\n>  print $"--- Disabling field: ($field) + keeping art & title ---"<\n>  hyperfine --prepare "sudo purge" --min-runs 5 $'onefetch --type prose programming markup data --disabled-fields ($field)'<\n>}<\n>
# Fields to test individually<\n>let all_fields = [<\n>  "project", "description", "head", "pending", "version",<\n>  "created", "languages", "dependencies", "authors",<\n>  "last-change", "contributors", "url", "commits",<\n>  "churn", "lines-of-code", "size", "license"<\n>]<\n><\n># Create a string with all fields (for disabling)<\n>let disable_all = ($all_fields | str join " ")<\n><\n># Baseline: all fields disabled + no-art + no-title<\n>print $"--- Baseline: all fields disabled + no-art + no-title ---"<\n>hyperfine --prepare "sudo purge" --min-runs 10 $'onefetch --type prose programming markup data --disabled-fields ($disable_all) --no-art --no-title'<\n><\n># Loop through and enable one field at a time<\n>for field in $all_fields {<\n>  let disabled = ($all_fields | filter {|f| $f != $field } | str join " ")<\n>  print $"--- Enabling only: ($field) ---"<\n>  hyperfine --prepare "sudo purge" --min-runs 10 $'onefetch --type prose programming markup data --disabled-fields ($disabled) --no-art --no-title'<\n>}<\n>
fzg -a
# Fields to test individually<\n>let all_fields = [<\n>  "project", "description", "head", "pending", "version",<\n>  "created", "languages", "dependencies", "authors",<\n>  "last-change", "contributors", "url", "commits",<\n>  "churn", "lines-of-code", "size", "license"<\n>]<\n><\n># Create a string with all fields (for disabling)<\n>let disable_all = ($all_fields | str join " ")<\n><\n># Baseline: all fields disabled + no-art + no-title<\n>print $"--- Baseline: all fields disabled + no-art + no-title ---"<\n>hyperfine --prepare "sudo purge" --min-runs 10 $'onefetch --type prose programming markup data --disabled-fields ($disable_all) --no-art --no-title'<\n><\n># Loop through and enable one field at a time<\n>for field in $all_fields {<\n>  let disabled = ($all_fields | filter {|f| $f != $field } | str join " ")<\n>  print $"--- Enabling only: ($field) ---"<\n>  hyperfine --prepare "sudo purge" --min-runs 10 $'onefetch --type prose programming markup data --disabled-fields ($disabled) --no-art --no-title'<\n>}<\n>
fzg -a
lz
lzt
lztt
onefetch
h time
time "onefetch"
time "lztt"
time "lztt -"
time "lztt ."
hyperfine --prepare "sudo purge" --min-runs 5 "lztt"
hyperfine --prepare "sudo purge" --min-runs 5 "lztt" --show-output
hyperfine --prepare "sudo purge" --min-runs 5 "lzt" --show-output
h lztt
hyperfine --prepare "sudo purge" --min-runs 5 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree"
hyperfine --prepare "sudo purge" --min-runs 10 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree"
hyperfine --prepare "sudo purge" --min-runs 10 "onefetch"
hyperfine --prepare "sudo purge" --min-runs 10 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 1"
hyperfine --prepare "sudo purge" --min-runs 10 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 2"
hyperfine --prepare "sudo purge" --min-runs 10 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 3"
hyperfine --prepare "sudo purge" --min-runs 10 "onefetch  --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license head --no-title --no-art --no-color-palette"
hyperfine --prepare "sudo purge" --min-runs 10 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 3 | head 80"
hyperfine --prepare "sudo purge" --min-runs 10 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 3 | head -n 80" 
hyperfine --prepare "sudo purge" --min-runs 10 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 3 | head -n 1000" 
hyperfine --prepare "sudo purge" --min-runs 10 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 3 | head -n 80" 
hyperfine --prepare "sudo purge" --min-runs 10 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 3" 
hyperfine --prepare "sudo purge" --min-runs 20 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 3" 
hyperfine --prepare "sudo purge" --min-runs 20 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 3 | head -n 80" 
hyperfine --prepare "sudo purge" --min-runs 20 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 2 | head -n 80" 
lzt
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data --disabled-fields dependencies authors contributors url  churn lines-of-code size license head --no-title --no-art --no-color-palette"
hyperfine --prepare "sudo purge" --min-runs 20 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --tree --level 2 | head -n 80" 
hyperfine --prepare "sudo purge" --min-runs 10 "eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 2"
hyperfine --prepare "sudo purge" --min-runs 10 "eza --color=always --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 2"
eza --color=always --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 2
eza --color=always --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 2 --long
h lz
z sales
zi
cd dev
z dev
cd SalesFriend/
eza --color=always --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 2
eza --color=always --git --no-filesize --icons=always --no-time --no-user --no-permissions --group-directories-first --sort=type --sort=name --tree --level 2 --long
fzg -a
h lz
z nested
onefetch
z onef
onefetch
fzg -a
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch--type prose programming markup data  --no-title --no-art --no-color-palette"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch--type prose programming markup data  --no-title --no-art --no-color-palette" --show-output
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields dependencies"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields authors"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields url"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields churn"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields lines-of-code"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields size"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields license"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields license size"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields license size pending"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields license size"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields license pending"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields size pending"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields license size pending"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields license size pending authors"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields license size pending dependenciß"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields license size pending dependencies"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields license size pending"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields license size pending lines-of-code"
hyperfine --prepare "sudo purge" --min-runs 20 "onefetch --type prose programming markup data  --no-title --no-art --no-color-palette --disabled-fields license size pending languages"
fzg -a
h str stats
z nu
ls
lzt
h
brew install helix
h lz
brew install --cask zed
helix
h helix
man helix
tldr hel,x
tldr helix
helix .
helix
brew install helix
which helix
hx
z nu
analyze-history 
h analyze-history
let res = analyze-history 
h ls
let res = analyze-history 
bat "/Users/julian/Library/Application<\n>Support/nushell/submodules/nu-history-tools/stats_submissions/v2+WriteYourNick.c<\n>sv"
bat submodules/nu-history-tools/stats_submissions/v2+Kajih.csv 
read submodules/nu-history-tools/stats_submissions/v2+Kajih.csv 
h read
open read
open submodules/nu-history-tools/stats_submissions/v2+Kajih.csv 
open submodules/nu-history-tools/stats_submissions/v2+Kajih.csv | sort-by freq
open submodules/nu-history-tools/stats_submissions/v2+Kajih.csv | sort-by freq --reverse
h sort-by
history
open submodules/nu-history-tools/stats_submissions/v2+Kajih.csv | sort-by freq --reverse | where name=~ hyper
open submodules/nu-history-tools/stats_submissions/v2+Kajih.csv | sort-by freq --reverse | where nam =~ hyper
open submodules/nu-history-tools/stats_submissions/v2+Kajih.csv | sort-by freq --reverse | where name =~ hyper
h o
lsf nu
ad
z book
fzg -a
f
fz
fzg
fzg -a
f
fz
fzg
zellij list-sessions
h zj
zj ls
zj ka
zj a
lz
ls
~/.config/helix/config.toml
cd ~/.config/helix/config.toml
hx --tutor
hx hey
ls
rm hey
hx
nvim
keybing keybing keybing keybing keybing keybing . Type w to select "banana" and y to yank itshowkey -a
showkey -a
input listen 
input list 
hx --tutor
zi
z nested
cd>.
cd ..
cd vscode_themes/
cd cheshire-charms/
cd ..
hx rust_sample_code.rs 
hx python_sample_code.py 
hx
zi
onefetch --ascii-language text
cargo run -- --ascii-language text
z onef
cargo run -- --ascii-language text
code .
cargo run -- --ascii-language text
cargo run -- --ascii-language text
git branch
git push
z nus
coed .
code .
$env
cd /Users/julian/.cargo/bin/topiary  
cd /Users/julian/.cargo/bin
z nu
cd /Users/julian/.cargo/bin
z nu
code .
z nu
code .
$env.path
code .
z nu
code .
$env
glob -D * | each {|f| {name: ($f | path relative-to $env.PWD) ...(open -r $f | str stats)} }
def profile-dots [ --commented] {<\n>  # - creating the script file<\n>  let c = (open -r $nu.config-path | lines)<\n>  let exclude = [std]<\n><\n>  let user_use = if $commented {<\n>    ($c | where $it =~ "^(# )?use" | parse -r "^(?:# )?use(?<module>.*)")<\n>  } else {<\n>    ($c | where $it =~ "^use" | parse "use {module}")<\n>  } | where module not-in $exclude | get module<\n><\n>  [<\n>    "export def main [] {"<\n>    "let now = (date now | format date \"%s\" | into int)"<\n>    "mkdir ~/.dot"<\n>    "let out_file = ($\"~/.dot/profiler_\($now\).nuon\" | path expand)"<\n>    "["<\n>    (<\n>      $user_use | each {|m|<\n>        $"{name: '($m)',time: \(timeit {|| use ($m) }\)}"<\n>      } | str join "\n"<\n>    )<\n>    "] | sort-by time | save $out_file"<\n>    "open $out_file"<\n>    "}"<\n>  ] | str join "\n" | save -f "~/.dot/profiler.nu"<\n><\n>  # - running the script file<\n>  nu --env-config $nu.env-path ~/.dot/profiler.nu<\n>}
profile-dots 
cd 
mkdir .dot
rm .dot/
cd nushell
z nu
y
code dot_profiler.nu 
h dot_clean
h dot_clean 
h dot-clean 
use scripts/dot_profiler.nu
dot_profiler
use scripts/dot_profiler.nu
use scripts/dot_profiler.nu *
source scripts/dot_profiler.nu
def profile-dots [ --commented] {<\n>    # - creating the script file<\n>    let c = (open -r $nu.config-path | lines)<\n>    let exclude = [std]<\n>    let output_file = $nu.config-path | path dirname | path join data profiler.nu<\n><\n>    let user_use = if $commented {<\n>        ($c | where $it =~ "^(# )?use" | parse -r "^(?:# )?use(?<module>.*)")<\n>    } else {<\n>        ($c | where $it =~ "^use" | parse "use {module}")<\n>    } | where module not-in $exclude | get module<\n><\n>    [<\n>        "export def main [] {"<\n>        "let now = (date now | format date \"%s\" | into int)"<\n>        "mkdir ~/.dot"<\n>        "let out_file = ($\"~/.dot/profiler_\($now\).nuon\" | path expand)"<\n>        "["<\n>        (<\n>            $user_use | each {|m|<\n>                $"{name: '($m)',time: \(timeit {|| use ($m) }\)}"<\n>            } | str join "\n"<\n>        )<\n>        "] | sort-by time | save $out_file"<\n>        "open $out_file"<\n>        "}"<\n>    ] | str join "\n" | save -f $output_file<\n>    # - running the script file<\n>    nu --env-config $nu.env-path $output_file<\n>}<\n>
profile-dots
$env | reject config | transpose key val | each {|r| echo $"$env.($r.key) = '($r.val)'"} | str join (char nl)
code /etc/shells
help append
h save
which nu | gat path | save --append /etc/shells
which nu | get path | save --append /etc/shells
sudo
sudo which nu | get path | save --append /etc/shells
1nedawh
sudo 
h sudo
sudo ls
sudo which nu | get path | save --append /etc/shells
which nu
which nu | get path
which nu | get path | first
which nu | get path | first | save --append /etc/shells
code /etc/shells
open /etc/shells
chsh -s /opt/homebrew/bin/nu
$env
z nested
git stash list
brew install chezmoi
$nu.data-dir
$nu.config-dir
$nu.config-path
$nu.default-config-dir
$nu.config-dir
$nu.config-path
$nu.data-dir
$nu.default-config-dir
$nu.data-dir
zNu
z nu
code .
ch doctor
h ch
h rgf
rgf nu
y
ls
ls | where name =~ nu
y
zi
zsh
h h
z rust
z training
code .
cargo run
chm cd .
ch cd .
ch cd src/
ls
y
git remote add origin https://github.com/Kajiih/dotfiles.git
git remote add origin https://github.com/Kajiih/dotfiles
ch init
ls
gs
lsh
ls -a
lsa
git remote
git remote -a
git remote -v
gs
onefetch
brew install onefetch
git remote add https://github.com/Kajiih/dotfiles.git
git remote add origin https://github.com/Kajiih/dotfiles.git
git remote
g s
gs
git pull
gs
gl
y
pwd
ch managed 
ch unmanaged 
ls
code .
git pull
ls
git pull origin main
ls
rm Brewfile
ls
ch managed
brew bundle check
cd
y
zi 
cd .dotfiles/Brewfile
cd .dotfiles
ls
brew bundle check
brew bundle instal
zi
code Brewfile 
brew bundle install
brew bundle
brew bundle check
brew update
brew bundle
brew bundle check
brew config
brew bundle add bitwarden
brew bundle add ripgrep
brew bundle add ripgrep ev
brew bundle add ripgrep -v
brew bundle check
brew bundle install
code README.md 
brew bundle check
brew bundle check -v
brew install --cask font-fira-code-nerd-font
brew install --cask font-fira-code-nerd-font --force
cd
man brew
h brew bundle list
y
brew bundle list
y
cd
mv .dotfiles/Brewfile .config/homebrew/
ch add ~/.config/homebrew/Brewfile 
ch managed
man brew
brew mas
brew install mas
pwd
ch merge
ch merge-all 
man ch
h ch
ch update
ch managed
ls
cd dot_config
z nu
z nush
code config.nu 
cd 
cd /
ls
cd etc
ls
pwd
lsf profile
bat profile 
h n
h ln
man brew
cd ~/Library/LaunchAgents/
ls
$env.XDG_CONFIG_HOME
$nu.default-config-dir
$env.XDG_CONFIG_HOME
$env
cd '/Users/julian/Library/Application Support/nushell/' 
ls
$env
ls
$env.XDG_CONFIG_HOME
$env.XDG_DATA_DIRS
$env.XDG_CONFIG_HOME
$nu.default-config-dir
code $nu.default-config-dir
code my.startup.shell_agnostic.environment.plist 
$env.XDG_DATA_DIRS
y
$NU_LIB_DIRS
$NU_PLUGIN_DIRS
y
^open .
$nu.default-config-dir
y
ls
code modules/bws_secrets.nu
nushel
$nu.default-config-dir
z dot
z .conf
cd ~
ls
cd .config/
cd
cd .local/share/
chezmoi
cd chezmoi/
ls
cd dot_config/
ls
code homebrew/Brewfile
ch add ~/.config/homebrew
ch managed
